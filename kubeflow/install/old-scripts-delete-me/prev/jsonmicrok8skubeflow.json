{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:01:12Z",
                "generateName": "minio-operator-67dcf6dd7c-",
                "labels": {
                    "name": "minio-operator",
                    "pod-template-hash": "67dcf6dd7c"
                },
                "name": "minio-operator-67dcf6dd7c-g5svk",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "minio-operator-67dcf6dd7c",
                        "uid": "79ceef73-10e0-44ec-9c35-4b0a881f511d"
                    }
                ],
                "resourceVersion": "663",
                "uid": "89e72081-409a-4499-af4b-6ee85014f243"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "name",
                                            "operator": "In",
                                            "values": [
                                                "minio-operator"
                                            ]
                                        }
                                    ]
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "CLUSTER_DOMAIN",
                                "value": "cluster.local"
                            }
                        ],
                        "image": "minio/operator:v4.5.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "minio-operator",
                        "resources": {
                            "requests": {
                                "cpu": "200m",
                                "ephemeral-storage": "500Mi",
                                "memory": "256Mi"
                            }
                        },
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6vjww",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "minio-operator",
                "serviceAccountName": "minio-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-6vjww",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "message": "0/1 nodes are available: 1 node(s) didn't match pod anti-affinity rules. preemption: 0/1 nodes are available: 1 No preemption victims found for incoming pod..",
                        "reason": "Unschedulable",
                        "status": "False",
                        "type": "PodScheduled"
                    }
                ],
                "phase": "Pending",
                "qosClass": "Burstable"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "becf417ea854256f20d54f74e72d52373d16dd5f431ae03c1c1f738851f50044",
                    "cni.projectcalico.org/podIP": "10.1.235.214/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.214/32"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generateName": "kube-prom-stack-kube-prome-operator-5fd9456cd9-",
                "labels": {
                    "app": "kube-prometheus-stack-operator",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "pod-template-hash": "5fd9456cd9",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-operator-5fd9456cd9-mgd4c",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kube-prom-stack-kube-prome-operator-5fd9456cd9",
                        "uid": "8e2e838a-f5a7-40b6-bb38-eaef5f5ab683"
                    }
                ],
                "resourceVersion": "1396",
                "uid": "1688bbc2-0cdd-4e4e-abe9-f5481ee32083"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--kubelet-service=kube-system/kube-prom-stack-kube-prome-kubelet",
                            "--localhost=127.0.0.1",
                            "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                            "--config-reloader-cpu-request=200m",
                            "--config-reloader-cpu-limit=200m",
                            "--config-reloader-memory-request=50Mi",
                            "--config-reloader-memory-limit=50Mi",
                            "--thanos-default-base-image=quay.io/thanos/thanos:v0.30.2",
                            "--web.enable-tls=true",
                            "--web.cert-file=/cert/cert",
                            "--web.key-file=/cert/key",
                            "--web.listen-address=:10250",
                            "--web.tls-min-version=VersionTLS13"
                        ],
                        "image": "quay.io/prometheus-operator/prometheus-operator:v0.63.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-prometheus-stack",
                        "ports": [
                            {
                                "containerPort": 10250,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/cert",
                                "name": "tls-secret",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kf6lv",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 65534,
                    "runAsGroup": 65534,
                    "runAsNonRoot": true,
                    "runAsUser": 65534
                },
                "serviceAccount": "kube-prom-stack-kube-prome-operator",
                "serviceAccountName": "kube-prom-stack-kube-prome-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "tls-secret",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "kube-prom-stack-kube-prome-admission"
                        }
                    },
                    {
                        "name": "kube-api-access-kf6lv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b32821e7fe0d8bd006b8f1ca8eaf9197b1fba1db3092b4cceed183c0343aad99",
                        "image": "quay.io/prometheus-operator/prometheus-operator:v0.63.0",
                        "imageID": "quay.io/prometheus-operator/prometheus-operator@sha256:be4fbe0cfcad639e7a9ce40274917e1e30a3cae045ae27cde35ac84739fdef40",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://85845db1486a12edec13949623dc5a14e5af0272f0a28f25519531530a036635",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:18Z"
                            }
                        },
                        "name": "kube-prometheus-stack",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.214",
                "podIPs": [
                    {
                        "ip": "10.1.235.214"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "8d6230012ca1498a61b7e58f2f932e5df7e44a31d5e1d5cbdd2d3a5b6ab61c1a",
                    "cni.projectcalico.org/podIP": "10.1.235.209/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.209/32"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generateName": "dashboard-metrics-scraper-7bc864c59-",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper",
                    "pod-template-hash": "7bc864c59"
                },
                "name": "dashboard-metrics-scraper-7bc864c59-c5ds2",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "dashboard-metrics-scraper-7bc864c59",
                        "uid": "0e500f97-551b-425d-8632-32ae12790b3d"
                    }
                ],
                "resourceVersion": "1402",
                "uid": "f233f627-f7e3-4430-8d0a-6b9efbb3c28b"
            },
            "spec": {
                "containers": [
                    {
                        "image": "kubernetesui/metrics-scraper:v1.0.8",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 30
                        },
                        "name": "dashboard-metrics-scraper",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 2001,
                            "runAsUser": 1001
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dspbp",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "kubernetes-dashboard",
                "serviceAccountName": "kubernetes-dashboard",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp-volume"
                    },
                    {
                        "name": "kube-api-access-dspbp",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d17564f74f2c3931a04f30f843c21aab82bf9168fac952b9575e9e586cc4766b",
                        "image": "docker.io/kubernetesui/metrics-scraper:v1.0.8",
                        "imageID": "docker.io/kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://053564d889d3fd433c74ceb96172887c9f1ad83a9c520dc7d43df7081b3f5a22",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:01:20Z"
                            }
                        },
                        "name": "dashboard-metrics-scraper",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.209",
                "podIPs": [
                    {
                        "ip": "10.1.235.209"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c0965282d46a3fc4890a10a97b2380ecb9234115f736bce8d81977945465809b",
                    "cni.projectcalico.org/podIP": "10.1.235.216/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.216/32"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generateName": "hostpath-provisioner-69cd9ff5b8-",
                "labels": {
                    "k8s-app": "hostpath-provisioner",
                    "pod-template-hash": "69cd9ff5b8"
                },
                "name": "hostpath-provisioner-69cd9ff5b8-9zv2n",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "hostpath-provisioner-69cd9ff5b8",
                        "uid": "1ea244e6-9e5e-4d53-b0e7-4d8022709863"
                    }
                ],
                "resourceVersion": "1411",
                "uid": "bdf06be3-ffe0-4ecf-807c-2dd91a3db1ea"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "PV_DIR",
                                "value": "/var/snap/microk8s/common/default-storage"
                            },
                            {
                                "name": "BUSYBOX_IMAGE",
                                "value": "busybox:1.28.4"
                            }
                        ],
                        "image": "cdkbot/hostpath-provisioner:1.4.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "hostpath-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/snap/microk8s/common/default-storage",
                                "name": "pv-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-sxwdh",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "microk8s-hostpath",
                "serviceAccountName": "microk8s-hostpath",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/default-storage",
                            "type": ""
                        },
                        "name": "pv-volume"
                    },
                    {
                        "name": "kube-api-access-sxwdh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5f78487847480b9f3aeacd8e87eb45a9d3c969a8a7930a62fa287923d0a6d914",
                        "image": "docker.io/cdkbot/hostpath-provisioner:1.4.2",
                        "imageID": "docker.io/cdkbot/hostpath-provisioner@sha256:b8e7be62e9c072adc52ca7e0ff4cffd3687cc39e98171b07884c456104e3fc5c",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://f4ecb8bf069263ec2162a088a09e16a96cefc2ca6e8873d24634ff61f9e9978b",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:13Z"
                            }
                        },
                        "name": "hostpath-provisioner",
                        "ready": true,
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.216",
                "podIPs": [
                    {
                        "ip": "10.1.235.216"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "13b53d4acd95a09a896a19f39be35c348f30c1d64135b8935a711c2ca5ed0797",
                    "cni.projectcalico.org/podIP": "10.1.235.213/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.213/32"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generateName": "kubernetes-dashboard-dc96f9fc-",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "dc96f9fc"
                },
                "name": "kubernetes-dashboard-dc96f9fc-ztjk7",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kubernetes-dashboard-dc96f9fc",
                        "uid": "5c970445-1a5e-475c-8429-fe5df732b656"
                    }
                ],
                "resourceVersion": "1414",
                "uid": "61ca45cf-5465-45c9-b268-bc2b27e2edd4"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--auto-generate-certificates",
                            "--namespace=kube-system"
                        ],
                        "image": "kubernetesui/dashboard:v2.7.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 30
                        },
                        "name": "kubernetes-dashboard",
                        "ports": [
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 2001,
                            "runAsUser": 1001
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/certs",
                                "name": "kubernetes-dashboard-certs"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-s78hr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "serviceAccount": "kubernetes-dashboard",
                "serviceAccountName": "kubernetes-dashboard",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kubernetes-dashboard-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "kubernetes-dashboard-certs"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "tmp-volume"
                    },
                    {
                        "name": "kube-api-access-s78hr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://74a52d598e587b31ee253fbe333e14172caffc28b0c796538c0ded74247095d9",
                        "image": "docker.io/kubernetesui/dashboard:v2.7.0",
                        "imageID": "docker.io/kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://cfcf0c02d0649dfbcebd5050b3c6550c854acbe614118ccdd22e16935b203057",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:01:32Z"
                            }
                        },
                        "name": "kubernetes-dashboard",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.213",
                "podIPs": [
                    {
                        "ip": "10.1.235.213"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "7fd08f669ceedb274434c15cf7801517ada7783f4bd3e3d88600ae3f95a5ae93",
                    "cni.projectcalico.org/podIP": "10.1.235.215/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.215/32",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:01:12Z",
                "generateName": "console-66c4b79fbd-",
                "labels": {
                    "app": "console",
                    "pod-template-hash": "66c4b79fbd"
                },
                "name": "console-66c4b79fbd-zhmhc",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "console-66c4b79fbd",
                        "uid": "982fced7-5588-4b8a-921f-30c52d10b0a5"
                    }
                ],
                "resourceVersion": "1422",
                "uid": "722ecdd1-5f61-4251-9249-9eeb72c372df"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "server"
                        ],
                        "env": [
                            {
                                "name": "CONSOLE_OPERATOR_MODE",
                                "value": "on"
                            }
                        ],
                        "image": "minio/console:v0.20.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "console",
                        "ports": [
                            {
                                "containerPort": 9090,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9433,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6vqvf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "console-sa",
                "serviceAccountName": "console-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-6vqvf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:23Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:05:23Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://7d31135273781c2fa92d747dfb55162020550d469f07365b42dc6161d3e39fc0",
                        "image": "docker.io/minio/console:v0.20.3",
                        "imageID": "docker.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
                        "lastState": {},
                        "name": "console",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:23Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.215",
                "podIPs": [
                    {
                        "ip": "10.1.235.215"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "ff8a2ef2c94985a6cf860558433dd0c15abfdecaa9cbac81a8d6ab7c10d5daf0",
                    "cni.projectcalico.org/podIP": "10.1.235.210/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.210/32",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generateName": "minio-operator-67dcf6dd7c-",
                "labels": {
                    "name": "minio-operator",
                    "operator": "leader",
                    "pod-template-hash": "67dcf6dd7c"
                },
                "name": "minio-operator-67dcf6dd7c-wqwxm",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "minio-operator-67dcf6dd7c",
                        "uid": "79ceef73-10e0-44ec-9c35-4b0a881f511d"
                    }
                ],
                "resourceVersion": "1712",
                "uid": "43776f35-d252-438b-a4b4-e5fc75b11bae"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "name",
                                            "operator": "In",
                                            "values": [
                                                "minio-operator"
                                            ]
                                        }
                                    ]
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "CLUSTER_DOMAIN",
                                "value": "cluster.local"
                            }
                        ],
                        "image": "minio/operator:v4.5.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "minio-operator",
                        "resources": {
                            "requests": {
                                "cpu": "200m",
                                "ephemeral-storage": "500Mi",
                                "memory": "256Mi"
                            }
                        },
                        "securityContext": {
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2hpff",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "minio-operator",
                "serviceAccountName": "minio-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-2hpff",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://7696b1b3a6d78e980c0cc58d8b61575ca9f7f47f1433758f3f52609943787e29",
                        "image": "docker.io/minio/operator:v4.5.1",
                        "imageID": "docker.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://1a43c222b3932cc96fe31156e05bb3801a3f1760d136ac6a1f56e1320488f256",
                                "exitCode": 2,
                                "finishedAt": "2023-03-08T22:05:59Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:05:59Z"
                            }
                        },
                        "name": "minio-operator",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:41Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.210",
                "podIPs": [
                    {
                        "ip": "10.1.235.210"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "732cd9bc667d78e220653de17bdf9db4993df57de3bc880c76e1c605ca354c32",
                    "cni.projectcalico.org/containerID": "6ad5467e12f21549cbd3cbf2c7367d40bea80b4f09cf9e6ff87b56125718e52d",
                    "cni.projectcalico.org/podIP": "10.1.235.218/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.218/32"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "tempo-",
                "labels": {
                    "app.kubernetes.io/instance": "tempo",
                    "app.kubernetes.io/name": "tempo",
                    "controller-revision-hash": "tempo-8cc964586",
                    "statefulset.kubernetes.io/pod-name": "tempo-0"
                },
                "name": "tempo-0",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "tempo",
                        "uid": "f0ff8490-e4d1-492d-8cae-4860d878202f"
                    }
                ],
                "resourceVersion": "1737",
                "uid": "c0c5156c-7804-4506-bf90-4023b5c32d2e"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-config.file=/conf/tempo.yaml",
                            "-mem-ballast-size-mbs=1024"
                        ],
                        "image": "grafana/tempo:2.0.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "tempo",
                        "ports": [
                            {
                                "containerPort": 3100,
                                "name": "prom-metrics",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 6831,
                                "name": "jaeger-thrift-c",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 6832,
                                "name": "jaeger-thrift-b",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 14268,
                                "name": "jaeger-thrift-h",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 14250,
                                "name": "jaeger-grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9411,
                                "name": "zipkin",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 55680,
                                "name": "otlp-legacy",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 4317,
                                "name": "otlp-grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 55681,
                                "name": "otlp-http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 55678,
                                "name": "opencensus",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/conf",
                                "name": "tempo-conf"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-h4w7b",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--query.base-path=/",
                            "--grpc-storage-plugin.configuration-file=/conf/tempo-query.yaml"
                        ],
                        "image": "grafana/tempo-query:2.0.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "tempo-query",
                        "ports": [
                            {
                                "containerPort": 16686,
                                "name": "jaeger-ui",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 16687,
                                "name": "jaeger-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/conf",
                                "name": "tempo-query-conf"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-h4w7b",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "tempo-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tempo",
                "serviceAccountName": "tempo",
                "subdomain": "tempo-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "tempo-query"
                        },
                        "name": "tempo-query-conf"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "tempo"
                        },
                        "name": "tempo-conf"
                    },
                    {
                        "name": "kube-api-access-h4w7b",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://44494a1d54b8cb957ba5e8b8015f96314543e78f0277a65fa39d645b8628bbf0",
                        "image": "docker.io/grafana/tempo:2.0.1",
                        "imageID": "docker.io/grafana/tempo@sha256:c887c62e4103b0bf0411eff2e49825c786d4006f83094d3949c3c04c36cd9ee5",
                        "lastState": {},
                        "name": "tempo",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:18Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://ac34b3f93524ca1cc1d5d92866bad3c85308aeacf8930c2aa4ab6bdfefc99a7b",
                        "image": "docker.io/grafana/tempo-query:2.0.1",
                        "imageID": "docker.io/grafana/tempo-query@sha256:e3a930241e22c60e4ec14589ba4d3b70a019de6e866968fb48b4fb2a7aaec9e4",
                        "lastState": {},
                        "name": "tempo-query",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:44Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.218",
                "podIPs": [
                    {
                        "ip": "10.1.235.218"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "d7a627303bbb5f15aa7523d22ba90d3e1860fe9972dcb60d58c026a433fa216e",
                    "cni.projectcalico.org/podIP": "10.1.235.224/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.224/32",
                    "min.io/revision": "0"
                },
                "creationTimestamp": "2023-03-08T22:07:01Z",
                "generateName": "microk8s-ss-0-",
                "labels": {
                    "controller-revision-hash": "microk8s-ss-0-ff9494d4",
                    "statefulset.kubernetes.io/pod-name": "microk8s-ss-0-0",
                    "v1.min.io/console": "microk8s-console",
                    "v1.min.io/pool": "ss-0",
                    "v1.min.io/tenant": "microk8s"
                },
                "name": "microk8s-ss-0-0",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "microk8s-ss-0",
                        "uid": "2a9f019b-4575-408a-979d-cf6cdf5b7cde"
                    }
                ],
                "resourceVersion": "1931",
                "uid": "ec2cf6d2-b18a-40af-b4e0-803a6a7e7b82"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "labelSelector": {
                                    "matchExpressions": [
                                        {
                                            "key": "v1.min.io/tenant",
                                            "operator": "In",
                                            "values": [
                                                "microk8s"
                                            ]
                                        }
                                    ]
                                },
                                "topologyKey": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "server",
                            "--certs-dir",
                            "/tmp/certs",
                            "--console-address",
                            ":9090"
                        ],
                        "env": [
                            {
                                "name": "MINIO_ARGS",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "MINIO_ARGS",
                                        "name": "operator-webhook-secret"
                                    }
                                }
                            },
                            {
                                "name": "MINIO_CONFIG_ENV_FILE",
                                "value": "/tmp/minio-config/config.env"
                            },
                            {
                                "name": "MINIO_OPERATOR_VERSION",
                                "value": "v4.5.1"
                            },
                            {
                                "name": "MINIO_PROMETHEUS_JOB_ID",
                                "value": "minio-job"
                            },
                            {
                                "name": "MINIO_SERVER_URL",
                                "value": "http://minio.minio-operator.svc.cluster.local:80"
                            },
                            {
                                "name": "MINIO_UPDATE",
                                "value": "on"
                            },
                            {
                                "name": "MINIO_UPDATE_MINISIGN_PUBKEY",
                                "value": "RWTx5Zr1tiHQLwG9keckT0c45M3AGeHD6IvimQHpyRywVWGbP1aVSGav"
                            }
                        ],
                        "image": "minio/minio:RELEASE.2022-09-17T00-09-45Z",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "minio",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9090,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/export",
                                "name": "0"
                            },
                            {
                                "mountPath": "/tmp/certs",
                                "name": "microk8s-tls"
                            },
                            {
                                "mountPath": "/tmp/minio-config",
                                "name": "configuration"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-88pxd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "microk8s-ss-0-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1000,
                    "fsGroupChangePolicy": "OnRootMismatch",
                    "runAsGroup": 1000,
                    "runAsNonRoot": true,
                    "runAsUser": 1000
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "microk8s-hl",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "0",
                        "persistentVolumeClaim": {
                            "claimName": "0-microk8s-ss-0-0"
                        }
                    },
                    {
                        "name": "microk8s-tls",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "secret": {
                                        "items": [
                                            {
                                                "key": "public.crt",
                                                "path": "CAs/operator.crt"
                                            }
                                        ],
                                        "name": "operator-tls"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "configuration",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "secret": {
                                        "name": "microk8s-env-configuration"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "kube-api-access-88pxd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:07:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:07:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:07:17Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:07:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://e8cde95d4a917a6f91652f1f62e72a0a9aea8658e3932a8ebc3e686d12c06084",
                        "image": "docker.io/minio/minio:RELEASE.2022-09-17T00-09-45Z",
                        "imageID": "docker.io/minio/minio@sha256:a070152be47a56b9cfec85e99a8d64d39bcea371cd4b1e616157dbfe7d539080",
                        "lastState": {},
                        "name": "minio",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:07:17Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.224",
                "podIPs": [
                    {
                        "ip": "10.1.235.224"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:07:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "8d89257492b621788f9ac60fea7c443931dcfbc9b85aeca6b3eb380cc37fbfbb",
                    "cni.projectcalico.org/podIP": "10.1.235.225/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.225/32"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generateName": "argo-cd-argocd-redis-5c54d675d4-",
                "labels": {
                    "app.kubernetes.io/component": "redis",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-redis",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "6.2.6-alpine",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5c54d675d4"
                },
                "name": "argo-cd-argocd-redis-5c54d675d4-7tc5b",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-redis-5c54d675d4",
                        "uid": "933d0aa0-e76c-4b07-871a-67bd49b8597b"
                    }
                ],
                "resourceVersion": "2471",
                "uid": "b13ddc77-fb79-48e7-8174-e3a60bd091f5"
            },
            "spec": {
                "automountServiceAccountToken": false,
                "containers": [
                    {
                        "args": [
                            "--save",
                            "",
                            "--appendonly",
                            "no"
                        ],
                        "image": "redis:6.2.6-alpine",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "argo-cd-argocd-redis",
                        "ports": [
                            {
                                "containerPort": 6379,
                                "name": "redis",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true,
                    "runAsUser": 999
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:43Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://ed524854b5006c8e6cfcdaffbae6b13cc3f133c7e5c70315b84dbb16e4ab4146",
                        "image": "docker.io/library/redis:6.2.6-alpine",
                        "imageID": "docker.io/library/redis@sha256:132337b9d7744ffee4fae83f51de53c3530935ad3ba528b7110f2d805f55cbf5",
                        "lastState": {},
                        "name": "argo-cd-argocd-redis",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:09:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.225",
                "podIPs": [
                    {
                        "ip": "10.1.235.225"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "2374aa597a3fabe53c186dcadb38811ec9d77aad2bb4541f6511b39a6276545f",
                    "cni.projectcalico.org/podIP": "10.1.235.226/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.226/32"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generateName": "argo-cd-argocd-notifications-controller-7d978b7df-",
                "labels": {
                    "app.kubernetes.io/component": "notifications-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-notifications-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "7d978b7df"
                },
                "name": "argo-cd-argocd-notifications-controller-7d978b7df-2xvgp",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-notifications-controller-7d978b7df",
                        "uid": "a87adef3-92fa-450d-9c60-85b7f112bc37"
                    }
                ],
                "resourceVersion": "2608",
                "uid": "02fd2214-5741-4064-9434-cfa589535466"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "argocd-notifications",
                            "--loglevel=info",
                            "--namespace=argocd",
                            "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                            "--secret-name=argo-cd-argocd-notifications-controller-secret",
                            "--config-map-name=argo-cd-argocd-notifications-controller-cm"
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "notifications-controller",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/app/config/tls",
                                "name": "tls-certs"
                            },
                            {
                                "mountPath": "/app/config/reposerver/tls",
                                "name": "argocd-repo-server-tls"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ggmnq",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/app"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true
                },
                "serviceAccount": "argocd-notifications-controller",
                "serviceAccountName": "argocd-notifications-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-tls-certs-cm"
                        },
                        "name": "tls-certs"
                    },
                    {
                        "name": "argocd-repo-server-tls",
                        "secret": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tls.crt",
                                    "path": "tls.crt"
                                },
                                {
                                    "key": "tls.key",
                                    "path": "tls.key"
                                },
                                {
                                    "key": "ca.crt",
                                    "path": "ca.crt"
                                }
                            ],
                            "optional": true,
                            "secretName": "argocd-repo-server-tls"
                        }
                    },
                    {
                        "name": "kube-api-access-ggmnq",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://c9431fc65a502b80f2b694513822c706d5b3568df255dff0a330591196a059c6",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "notifications-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:09:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.226",
                "podIPs": [
                    {
                        "ip": "10.1.235.226"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "b9c65267c12a30c5c51a8f6e4d5aff8bf3d3a395ee90bf6e2d04e48165873207",
                    "cni.projectcalico.org/podIP": "10.1.235.227/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.227/32"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generateName": "argo-cd-argocd-applicationset-controller-5c9d544f47-",
                "labels": {
                    "app.kubernetes.io/component": "applicationset-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-applicationset-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v0.4.1",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5c9d544f47"
                },
                "name": "argo-cd-argocd-applicationset-controller-5c9d544f47-pnlpf",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-applicationset-controller-5c9d544f47",
                        "uid": "bbbd7dc0-7619-4534-8cbd-272b1436ac8f"
                    }
                ],
                "resourceVersion": "2638",
                "uid": "258caf20-0801-4f62-a5e1-df0096cfe26a"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "applicationset-controller",
                            "--metrics-addr=:8080",
                            "--probe-addr=:8081",
                            "--namespace=argocd",
                            "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                            "--policy=sync",
                            "--debug=false",
                            "--dry-run=false"
                        ],
                        "image": "quay.io/argoproj/argocd-applicationset:v0.4.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "applicationset-controller",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7000,
                                "name": "webhook",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/app/config/ssh",
                                "name": "ssh-known-hosts"
                            },
                            {
                                "mountPath": "/app/config/tls",
                                "name": "tls-certs"
                            },
                            {
                                "mountPath": "/app/config/gpg/source",
                                "name": "gpg-keys"
                            },
                            {
                                "mountPath": "/app/config/gpg/keys",
                                "name": "gpg-keyring"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-jssfj",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-cd-argocd-applicationset-controller",
                "serviceAccountName": "argo-cd-argocd-applicationset-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-ssh-known-hosts-cm"
                        },
                        "name": "ssh-known-hosts"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-tls-certs-cm"
                        },
                        "name": "tls-certs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-gpg-keys-cm"
                        },
                        "name": "gpg-keys"
                    },
                    {
                        "emptyDir": {},
                        "name": "gpg-keyring"
                    },
                    {
                        "name": "kube-api-access-jssfj",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:58Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:58Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://a389fc7725635c6f851672b6c2c0f5af564a71332f80c1f4a59a61f02066ba0d",
                        "image": "quay.io/argoproj/argocd-applicationset:v0.4.1",
                        "imageID": "quay.io/argoproj/argocd-applicationset@sha256:7433ff9dc5f4fccf13f71be514982740f32cd31707734ce8934f149d26163590",
                        "lastState": {},
                        "name": "applicationset-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:09:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.227",
                "podIPs": [
                    {
                        "ip": "10.1.235.227"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "d3c30a32f72a60e2f328fe7cc400f928f6962235bcf8d36d9fc1866782345223",
                    "cni.projectcalico.org/podIP": "10.1.235.228/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.228/32"
                },
                "creationTimestamp": "2023-03-08T22:09:39Z",
                "generateName": "argo-cd-argocd-dex-server-9dfff8587-",
                "labels": {
                    "app.kubernetes.io/component": "dex-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-dex-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.30.2",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "9dfff8587"
                },
                "name": "argo-cd-argocd-dex-server-9dfff8587-fbh52",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-dex-server-9dfff8587",
                        "uid": "91cabee2-4080-4099-9257-6a4bf4849030"
                    }
                ],
                "resourceVersion": "2784",
                "uid": "64d3c1d7-9a53-4900-bdc6-00fba0181549"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/shared/argocd-dex",
                            "rundex"
                        ],
                        "image": "ghcr.io/dexidp/dex:v2.30.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "dex-server",
                        "ports": [
                            {
                                "containerPort": 5556,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 5557,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 5558,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/shared",
                                "name": "static-files"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-n25vr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "command": [
                            "cp",
                            "-n",
                            "/usr/local/bin/argocd",
                            "/shared/argocd-dex"
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "copyutil",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/shared",
                                "name": "static-files"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-n25vr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argocd-dex-server",
                "serviceAccountName": "argocd-dex-server",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "emptyDir": {},
                        "name": "static-files"
                    },
                    {
                        "name": "kube-api-access-n25vr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:58Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:09Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:09Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0e87b9940c176a6ba3739894fbf780c4e3aeb6d82a4dd348ac2b649e5859ccc2",
                        "image": "ghcr.io/dexidp/dex:v2.30.2",
                        "imageID": "ghcr.io/dexidp/dex@sha256:27cf2e8644f2ea1ebc6de711b0ace4b5ee2d1f442e148eabbaa8c68308062475",
                        "lastState": {},
                        "name": "dex-server",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://372a03577a7d662f541d3f05513eeedd3ccb5888d32f743e23635ddbf9ab253d",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "copyutil",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://372a03577a7d662f541d3f05513eeedd3ccb5888d32f743e23635ddbf9ab253d",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:09:57Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:09:57Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.228",
                "podIPs": [
                    {
                        "ip": "10.1.235.228"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "e45e7d1d347a2b553015ee9f49bdff3faf8d86c2dcb48df3991c6fa660a0057a",
                    "cni.projectcalico.org/podIP": "10.1.235.235/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.235/32"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generateName": "gpu-operator-node-feature-discovery-worker-",
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "controller-revision-hash": "59f845bb49",
                    "pod-template-generation": "1",
                    "role": "worker"
                },
                "name": "gpu-operator-node-feature-discovery-worker-ptv6t",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "gpu-operator-node-feature-discovery-worker",
                        "uid": "43d82f72-fb2b-44cc-91ed-44ae9b2bed4f"
                    }
                ],
                "resourceVersion": "3254",
                "uid": "1700b15c-6eb3-4763-82cd-7f0ed5dabc37"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--server=gpu-operator-node-feature-discovery-master:8080"
                        ],
                        "command": [
                            "nfd-worker"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "worker",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host-boot",
                                "name": "host-boot",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host-etc/os-release",
                                "name": "host-os-release",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host-sys",
                                "name": "host-sys",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host-usr/lib",
                                "name": "host-usr-lib",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/node-feature-discovery/source.d/",
                                "name": "source-d",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/node-feature-discovery/features.d/",
                                "name": "features-d",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/node-feature-discovery",
                                "name": "nfd-worker-conf",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c7dph",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirstWithHostNet",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "node-feature-discovery",
                "serviceAccountName": "node-feature-discovery",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Equal"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Equal",
                        "value": "present"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/boot",
                            "type": ""
                        },
                        "name": "host-boot"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/os-release",
                            "type": ""
                        },
                        "name": "host-os-release"
                    },
                    {
                        "hostPath": {
                            "path": "/sys",
                            "type": ""
                        },
                        "name": "host-sys"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/lib",
                            "type": ""
                        },
                        "name": "host-usr-lib"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/node-feature-discovery/source.d/",
                            "type": ""
                        },
                        "name": "source-d"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/node-feature-discovery/features.d/",
                            "type": ""
                        },
                        "name": "features-d"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nfd-worker.conf",
                                    "path": "nfd-worker.conf"
                                }
                            ],
                            "name": "gpu-operator-node-feature-discovery-worker-conf"
                        },
                        "name": "nfd-worker-conf"
                    },
                    {
                        "name": "kube-api-access-c7dph",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://890ee4c2fa842c61011f94450ce34717bd0ccd72e8be23556368e417d76a1fdc",
                        "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                        "imageID": "k8s.gcr.io/nfd/node-feature-discovery@sha256:4aebf17c8b72ee91cb468a6f21dd9f0312c1fcfdf8c86341f7aee0ec2d5991d7",
                        "lastState": {},
                        "name": "worker",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:35Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.235",
                "podIPs": [
                    {
                        "ip": "10.1.235.235"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:29Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "01d1ed966a7b11b44789bdfbf94a5ebb56db4a29ab2bc900453d0465de647e07",
                    "cni.projectcalico.org/podIP": "10.1.235.238/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.238/32"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generateName": "nvidia-container-toolkit-daemonset-",
                "labels": {
                    "app": "nvidia-container-toolkit-daemonset",
                    "controller-revision-hash": "b84bdb588",
                    "pod-template-generation": "1"
                },
                "name": "nvidia-container-toolkit-daemonset-mbb9w",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nvidia-container-toolkit-daemonset",
                        "uid": "cf81ab82-9e28-40b1-a503-a60492eeed04"
                    }
                ],
                "resourceVersion": "3472",
                "uid": "189bd109-2e0f-4406-a907-f37122d3a632"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "[[ -f /run/nvidia/validations/host-driver-ready ]] \u0026\u0026 driver_root=/ || driver_root=/run/nvidia/driver; export NVIDIA_DRIVER_ROOT=$driver_root; exec nvidia-toolkit /usr/local/nvidia"
                        ],
                        "command": [
                            "bash",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "RUNTIME_ARGS",
                                "value": "--socket /runtime/sock-dir/containerd.sock --config /runtime/config-dir/containerd-template.toml"
                            },
                            {
                                "name": "CONTAINERD_CONFIG",
                                "value": "/var/snap/microk8s/current/args/containerd-template.toml"
                            },
                            {
                                "name": "CONTAINERD_SOCKET",
                                "value": "/var/snap/microk8s/common/run/containerd.sock"
                            },
                            {
                                "name": "CONTAINERD_SET_AS_DEFAULT",
                                "value": "1"
                            },
                            {
                                "name": "RUNTIME",
                                "value": "containerd"
                            },
                            {
                                "name": "CONTAINERD_RUNTIME_CLASS",
                                "value": "nvidia"
                            }
                        ],
                        "image": "nvcr.io/nvidia/k8s/container-toolkit:v1.11.0-ubuntu20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-container-toolkit-ctr",
                        "resources": {},
                        "securityContext": {
                            "privileged": true,
                            "seLinuxOptions": {
                                "level": "s0"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia",
                                "mountPropagation": "Bidirectional",
                                "name": "nvidia-run-path"
                            },
                            {
                                "mountPath": "/usr/local/nvidia",
                                "name": "toolkit-install-dir"
                            },
                            {
                                "mountPath": "/usr/share/containers/oci/hooks.d",
                                "name": "crio-hooks"
                            },
                            {
                                "mountPath": "/host",
                                "mountPropagation": "HostToContainer",
                                "name": "host-root",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/runtime/config-dir/",
                                "name": "containerd-config"
                            },
                            {
                                "mountPath": "/runtime/sock-dir/",
                                "name": "containerd-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-rqzsz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostPID": true,
                "initContainers": [
                    {
                        "args": [
                            "nvidia-validator"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "WITH_WAIT",
                                "value": "true"
                            },
                            {
                                "name": "COMPONENT",
                                "value": "driver"
                            }
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "driver-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true,
                            "seLinuxOptions": {
                                "level": "s0"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia/driver",
                                "mountPropagation": "HostToContainer",
                                "name": "driver-install-path"
                            },
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/host",
                                "mountPropagation": "HostToContainer",
                                "name": "host-root",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-rqzsz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "nvidia.com/gpu.deploy.container-toolkit": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-container-toolkit",
                "serviceAccountName": "nvidia-container-toolkit",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/run/nvidia",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "nvidia-run-path"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia/validations",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "run-nvidia-validations"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia/driver",
                            "type": ""
                        },
                        "name": "driver-install-path"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": ""
                        },
                        "name": "host-root"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/local/nvidia",
                            "type": ""
                        },
                        "name": "toolkit-install-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/run/containers/oci/hooks.d",
                            "type": ""
                        },
                        "name": "crio-hooks"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/args",
                            "type": ""
                        },
                        "name": "containerd-config"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/run",
                            "type": ""
                        },
                        "name": "containerd-socket"
                    },
                    {
                        "name": "kube-api-access-rqzsz",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:51Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:00Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:00Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://350cd9fd19bdaf7eb7c2026ff8ceef3caf4987a2dc0fceedbf08cc1f9060f704",
                        "image": "nvcr.io/nvidia/k8s/container-toolkit:v1.11.0-ubuntu20.04",
                        "imageID": "nvcr.io/nvidia/k8s/container-toolkit@sha256:c4ed1e0345f6d3e2eec37601f97495778ae54dc407db08ebead22a580ec96542",
                        "lastState": {},
                        "name": "nvidia-container-toolkit-ctr",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://1a4c20c8333788cc25ea86cd3766ad9fce39938042640acc63c46d81def9cced",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "driver-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://1a4c20c8333788cc25ea86cd3766ad9fce39938042640acc63c46d81def9cced",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:10:50Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:10:50Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.238",
                "podIPs": [
                    {
                        "ip": "10.1.235.238"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "5a5354f2bb4040baa2b7d08f614b9a20bee38840ea81974618ed4a1136fe8e99",
                    "cni.projectcalico.org/podIP": "10.1.235.240/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.240/32"
                },
                "creationTimestamp": "2023-03-08T22:10:48Z",
                "generateName": "gpu-feature-discovery-",
                "labels": {
                    "app": "gpu-feature-discovery",
                    "app.kubernetes.io/part-of": "nvidia-gpu",
                    "controller-revision-hash": "6f64589b4d",
                    "pod-template-generation": "1"
                },
                "name": "gpu-feature-discovery-6twpb",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "gpu-feature-discovery",
                        "uid": "867089ad-f959-4e0e-85d1-bf51e11c23ce"
                    }
                ],
                "resourceVersion": "3594",
                "uid": "2ac0c54d-af33-46d8-9b36-b699babf4e86"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "GFD_SLEEP_INTERVAL",
                                "value": "60s"
                            },
                            {
                                "name": "GFD_FAIL_ON_INIT_ERROR",
                                "value": "true"
                            },
                            {
                                "name": "GFD_MIG_STRATEGY",
                                "value": "single"
                            },
                            {
                                "name": "NVIDIA_MIG_MONITOR_DEVICES",
                                "value": "all"
                            }
                        ],
                        "image": "nvcr.io/nvidia/gpu-feature-discovery:v0.6.2-ubi8",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "gpu-feature-discovery",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/kubernetes/node-feature-discovery/features.d",
                                "name": "output-dir"
                            },
                            {
                                "mountPath": "/sys/class/dmi/id/product_name",
                                "name": "dmi-product-name"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5k55s",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "toolkit-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5k55s",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-gpu-feature-discovery",
                "serviceAccountName": "nvidia-gpu-feature-discovery",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/node-feature-discovery/features.d",
                            "type": ""
                        },
                        "name": "output-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/class/dmi/id/product_name",
                            "type": ""
                        },
                        "name": "dmi-product-name"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia",
                            "type": "Directory"
                        },
                        "name": "run-nvidia"
                    },
                    {
                        "name": "kube-api-access-5k55s",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:16Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:16Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d1b4c7b7fd668e1631f40212c08abf38337c502ad54c5a356a9945fa7d8f13aa",
                        "image": "nvcr.io/nvidia/gpu-feature-discovery:v0.6.2-ubi8",
                        "imageID": "nvcr.io/nvidia/gpu-feature-discovery@sha256:37821ea7829def707f819ac21122cea62efdbbd640679b6004e552fb9a1e17a3",
                        "lastState": {},
                        "name": "gpu-feature-discovery",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:11:16Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://df016c23306c85556c6e9fbcd28d03125c9744c7014e4678407953dbc6ab2601",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "toolkit-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://df016c23306c85556c6e9fbcd28d03125c9744c7014e4678407953dbc6ab2601",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:13Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:03Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.240",
                "podIPs": [
                    {
                        "ip": "10.1.235.240"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c4b04a73bdef98edbcfb62ad9c949f7067a62b88523c92c9d1c2e1c25e6313e3",
                    "cni.projectcalico.org/podIP": "",
                    "cni.projectcalico.org/podIPs": ""
                },
                "creationTimestamp": "2023-03-08T22:11:13Z",
                "generateName": "nvidia-cuda-validator-",
                "labels": {
                    "app": "nvidia-cuda-validator"
                },
                "name": "nvidia-cuda-validator-5sg26",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3609",
                "uid": "9a02fa17-2941-4d17-b474-d050b74ef3d2"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "echo cuda workload validation is successful"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-cuda-validator",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nvlth",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "vectorAdd"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cuda-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nvlth",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-operator-validator",
                "serviceAccountName": "nvidia-operator-validator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-nvlth",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:15Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:14Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:14Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:14Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5cfa6a0afefd7dd912ae09761ea7125869e5899a1f3cabff8687391eacf560fb",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "nvidia-cuda-validator",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5cfa6a0afefd7dd912ae09761ea7125869e5899a1f3cabff8687391eacf560fb",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:15Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://a48ecdbc82699bdfc1b385e18d7fb0e7c40f3b2fab8d0b930b2f644511260a6b",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "cuda-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://a48ecdbc82699bdfc1b385e18d7fb0e7c40f3b2fab8d0b930b2f644511260a6b",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:15Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:15Z"
                            }
                        }
                    }
                ],
                "phase": "Succeeded",
                "podIP": "10.1.235.243",
                "podIPs": [
                    {
                        "ip": "10.1.235.243"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:11:14Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "df799e34c873cf991f0ee5afed67e2bd552141dbd186f188502ee5fc87b69eeb",
                    "cni.projectcalico.org/podIP": "10.1.235.239/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.239/32"
                },
                "creationTimestamp": "2023-03-08T22:10:48Z",
                "generateName": "nvidia-dcgm-exporter-",
                "labels": {
                    "app": "nvidia-dcgm-exporter",
                    "controller-revision-hash": "674bfb647c",
                    "pod-template-generation": "1"
                },
                "name": "nvidia-dcgm-exporter-785hc",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nvidia-dcgm-exporter",
                        "uid": "20a12c27-e854-42d4-a034-db836f53e5f0"
                    }
                ],
                "resourceVersion": "3741",
                "uid": "5f03e820-cb99-4d41-bc83-26617ebbe30a"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DCGM_EXPORTER_LISTEN",
                                "value": ":9400"
                            },
                            {
                                "name": "DCGM_EXPORTER_KUBERNETES",
                                "value": "true"
                            },
                            {
                                "name": "DCGM_EXPORTER_COLLECTORS",
                                "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                            }
                        ],
                        "image": "nvcr.io/nvidia/k8s/dcgm-exporter:3.0.4-3.0.0-ubuntu20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-dcgm-exporter",
                        "ports": [
                            {
                                "containerPort": 9400,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kubelet/pod-resources",
                                "name": "pod-gpu-resources",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-g9tnw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "toolkit-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia",
                                "mountPropagation": "HostToContainer",
                                "name": "run-nvidia"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-g9tnw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "nvidia.com/gpu.deploy.dcgm-exporter": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-dcgm-exporter",
                "serviceAccountName": "nvidia-dcgm-exporter",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/lib/kubelet/pod-resources",
                            "type": ""
                        },
                        "name": "pod-gpu-resources"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia",
                            "type": ""
                        },
                        "name": "run-nvidia"
                    },
                    {
                        "name": "kube-api-access-g9tnw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:17Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:38Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:38Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://389f2bcc8c8e1fe945b24a271c249b833d49192c1d4b7350b13568e42fba7bcf",
                        "image": "nvcr.io/nvidia/k8s/dcgm-exporter:3.0.4-3.0.0-ubuntu20.04",
                        "imageID": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:952ec6be586dcff7c4b2936a20b7704c55b91be2b0ddb6d121ce72f5a833e804",
                        "lastState": {},
                        "name": "nvidia-dcgm-exporter",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:11:38Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://9acfd9b910b423ab319548cf0b44923ac28d3b0b6dd6e7076f66f22c89a1407b",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "toolkit-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://9acfd9b910b423ab319548cf0b44923ac28d3b0b6dd6e7076f66f22c89a1407b",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:17Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:02Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.239",
                "podIPs": [
                    {
                        "ip": "10.1.235.239"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-ndm-",
                "labels": {
                    "app": "openebs",
                    "component": "ndm",
                    "controller-revision-hash": "8547b55f9f",
                    "name": "openebs-ndm",
                    "openebs.io/component-name": "ndm",
                    "openebs.io/version": "3.3.0",
                    "pod-template-generation": "1",
                    "release": "openebs"
                },
                "name": "openebs-ndm-scmxj",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "openebs-ndm",
                        "uid": "7add4983-29e1-4940-b299-e6d76801b048"
                    }
                ],
                "resourceVersion": "5879",
                "uid": "d9e6a4ad-e04c-43a0-bc17-3eb15c3c7884"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "-v=4",
                            "--feature-gates=GPTBasedUUID"
                        ],
                        "env": [
                            {
                                "name": "NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "SPARSE_FILE_DIR",
                                "value": "/var/snap/microk8s/common/var/openebs/sparse"
                            },
                            {
                                "name": "SPARSE_FILE_SIZE",
                                "value": "10737418240"
                            },
                            {
                                "name": "SPARSE_FILE_COUNT",
                                "value": "0"
                            }
                        ],
                        "image": "openebs/node-disk-manager:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "pgrep",
                                    "ndm"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 30,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "openebs-ndm",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host/node-disk-manager.config",
                                "name": "config",
                                "readOnly": true,
                                "subPath": "node-disk-manager.config"
                            },
                            {
                                "mountPath": "/run/udev",
                                "name": "udev"
                            },
                            {
                                "mountPath": "/host/proc",
                                "name": "procmount",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/dev",
                                "name": "devmount"
                            },
                            {
                                "mountPath": "/var/openebs/ndm",
                                "name": "basepath"
                            },
                            {
                                "mountPath": "/var/snap/microk8s/common/var/openebs/sparse",
                                "name": "sparsepath"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ksqcq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs",
                "serviceAccountName": "openebs",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "openebs-ndm-config"
                        },
                        "name": "config"
                    },
                    {
                        "hostPath": {
                            "path": "/run/udev",
                            "type": "Directory"
                        },
                        "name": "udev"
                    },
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": "Directory"
                        },
                        "name": "procmount"
                    },
                    {
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        },
                        "name": "devmount"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/openebs/ndm",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "basepath"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/openebs/sparse",
                            "type": ""
                        },
                        "name": "sparsepath"
                    },
                    {
                        "name": "kube-api-access-ksqcq",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:27Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://f8534212e60e009efd1eb212ed09bd3acafbbcd8c2c7d4c549f03972c99d0018",
                        "image": "docker.io/openebs/node-disk-manager:2.0.0",
                        "imageID": "docker.io/openebs/node-disk-manager@sha256:1a032535fc6c1cb070dcea54933da278fe294e58d542be8791fa12201213e4ad",
                        "lastState": {},
                        "name": "openebs-ndm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:26Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "192.168.1.55",
                "podIPs": [
                    {
                        "ip": "192.168.1.55"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "b1d6c59d5c73003f51b1b4da02c6a3e0e357ca28d03c35e4da8851b5f1b0115b",
                    "cni.projectcalico.org/podIP": "10.1.235.244/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.244/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-jiva-operator-594fdd69b9-",
                "labels": {
                    "chart": "jiva-3.3.0",
                    "component": "jiva-operator",
                    "heritage": "Helm",
                    "name": "jiva-operator",
                    "openebs.io/component-name": "jiva-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "594fdd69b9",
                    "release": "openebs"
                },
                "name": "openebs-jiva-operator-594fdd69b9-c8jzq",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-jiva-operator-594fdd69b9",
                        "uid": "7ea70538-2654-40a5-a6e8-7f14e24c5ae4"
                    }
                ],
                "resourceVersion": "5910",
                "uid": "608848b4-e761-43a1-9935-ecdec32bf59a"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "jiva-operator"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "OPERATOR_NAME",
                                "value": "jiva-operator"
                            },
                            {
                                "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_JIVA_CONTROLLER_IMAGE",
                                "value": "openebs/jiva:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_JIVA_REPLICA_IMAGE",
                                "value": "openebs/jiva:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_MAYA_EXPORTER_IMAGE",
                                "value": "openebs/m-exporter:3.3.0"
                            }
                        ],
                        "image": "openebs/jiva-operator:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "openebs-jiva-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l82wl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-jiva-operator",
                "serviceAccountName": "openebs-jiva-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-l82wl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://ec389537817f5ff8505809335f0482fce2ed57541d5fed0843ad2c11d99c4d83",
                        "image": "docker.io/openebs/jiva-operator:3.3.0",
                        "imageID": "docker.io/openebs/jiva-operator@sha256:7427822abda06817f0901f9ae411626d2de52394765e3bc5713cef9bb220d479",
                        "lastState": {},
                        "name": "openebs-jiva-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.244",
                "podIPs": [
                    {
                        "ip": "10.1.235.244"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c80a7bf2e8790896f5e0db7cbed89a6256e0b771d31a9bc124b4ad0e171d657b",
                    "cni.projectcalico.org/podIP": "10.1.235.245/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.245/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-localpv-provisioner-99449bb55-",
                "labels": {
                    "app": "openebs",
                    "component": "localpv-provisioner",
                    "name": "openebs-localpv-provisioner",
                    "openebs.io/component-name": "openebs-localpv-provisioner",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "99449bb55",
                    "release": "openebs"
                },
                "name": "openebs-localpv-provisioner-99449bb55-z9ggd",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-localpv-provisioner-99449bb55",
                        "uid": "85f86f13-64d8-40c4-9780-80f152789e95"
                    }
                ],
                "resourceVersion": "5931",
                "uid": "3e8b8f03-b2b7-4180-adc8-518087c5ed77"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--bd-time-out=$(BDC_BD_BIND_RETRIES)"
                        ],
                        "env": [
                            {
                                "name": "BDC_BD_BIND_RETRIES",
                                "value": "12"
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "value": "openebs"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                "value": "true"
                            },
                            {
                                "name": "OPENEBS_IO_BASE_PATH",
                                "value": "/var/snap/microk8s/common/var/openebs/local"
                            },
                            {
                                "name": "OPENEBS_IO_HELPER_IMAGE",
                                "value": "openebs/linux-utils:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_INSTALLER_TYPE",
                                "value": "charts-helm"
                            },
                            {
                                "name": "LEADER_ELECTION_ENABLED",
                                "value": "true"
                            }
                        ],
                        "image": "openebs/provisioner-localpv:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "sh",
                                    "-c",
                                    "test `pgrep -c \"^provisioner-loc.*\"` = 1"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 30,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "openebs-localpv-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-76pcr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs",
                "serviceAccountName": "openebs",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-76pcr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:34Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:34Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://38b15fef2127a7820ff5274b3982b7fb2678b8ec05516b602d19878cfa91a676",
                        "image": "docker.io/openebs/provisioner-localpv:3.3.0",
                        "imageID": "docker.io/openebs/provisioner-localpv@sha256:9944beedeb5ad33b1013d62da026c3ac31f29238b378335e40ded2dcfe2c56f4",
                        "lastState": {},
                        "name": "openebs-localpv-provisioner",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:33Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.245",
                "podIPs": [
                    {
                        "ip": "10.1.235.245"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "0665941976fb66effa993e69e31e5f855d4d90fef9295323df2c7c5539c2e507",
                    "cni.projectcalico.org/podIP": "10.1.235.247/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.247/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-cstor-cvc-operator-7946b467f5-",
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "cvc-operator",
                    "heritage": "Helm",
                    "name": "cvc-operator",
                    "openebs.io/component-name": "cvc-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "7946b467f5",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cvc-operator-7946b467f5-hckdw",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-cstor-cvc-operator-7946b467f5",
                        "uid": "92ff0287-1c71-4d57-912a-714801108f88"
                    }
                ],
                "resourceVersion": "5968",
                "uid": "395f343c-83b1-48e7-84c2-d5e18f71ea4a"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--leader-election=false",
                            "--bind=$(OPENEBS_CVC_POD_IP)"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_IO_BASE_DIR",
                                "value": "/var/openebs"
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_CVC_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_CSTOR_TARGET_IMAGE",
                                "value": "openebs/cstor-istgt:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE",
                                "value": "openebs/cstor-volume-manager:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_VOLUME_MONITOR_IMAGE",
                                "value": "openebs/m-exporter:3.3.0"
                            }
                        ],
                        "image": "openebs/cvc-operator:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "openebs-cstor-cvc-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dpxrk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-cstor-operator",
                "serviceAccountName": "openebs-cstor-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-dpxrk",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://6bcf7f72f256d6e5cac70e02d0398cb363133dc0a5db7281a92810fbe00f1f41",
                        "image": "docker.io/openebs/cvc-operator:3.3.0",
                        "imageID": "docker.io/openebs/cvc-operator@sha256:7ee9cb6ec63d2a4bcac913bc8c9062ec3a8c74f7db8d56919fa414b41822bf69",
                        "lastState": {},
                        "name": "openebs-cstor-cvc-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:39Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.247",
                "podIPs": [
                    {
                        "ip": "10.1.235.247"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "18d957ae448cd4b2e2ecf43c1405b476bf7a3d539ce59f03f167965b0294ed8f",
                    "cni.projectcalico.org/podIP": "10.1.235.248/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.248/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-cstor-cspc-operator-7dd775b4b8-",
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "cspc-operator",
                    "heritage": "Helm",
                    "name": "cspc-operator",
                    "openebs.io/component-name": "cspc-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "7dd775b4b8",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cspc-operator-7dd775b4b8-fh22j",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-cstor-cspc-operator-7dd775b4b8",
                        "uid": "6e290c39-abb1-43c4-9220-02ee03e9762f"
                    }
                ],
                "resourceVersion": "5990",
                "uid": "051a9d4f-b500-42d0-94d2-70f4e8232e10"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "CSPC_OPERATOR_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_BASE_DIR",
                                "value": "/var/openebs"
                            },
                            {
                                "name": "OPENEBS_IO_CSTOR_POOL_SPARSE_DIR",
                                "value": "/var/openebs/sparse"
                            },
                            {
                                "name": "OPENEBS_IO_CSPI_MGMT_IMAGE",
                                "value": "openebs/cstor-pool-manager:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_CSTOR_POOL_IMAGE",
                                "value": "openebs/cstor-pool:3.3.0"
                            },
                            {
                                "name": "OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE",
                                "value": "openebs/m-exporter:3.3.0"
                            },
                            {
                                "name": "RESYNC_INTERVAL",
                                "value": "30"
                            }
                        ],
                        "image": "openebs/cspc-operator:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "openebs-cstor-cspc-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5p9bv",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-cstor-operator",
                "serviceAccountName": "openebs-cstor-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-5p9bv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:43Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://1d65613f346f6d729c4731835bef496568f556b18aa92fdb074230548f586b85",
                        "image": "docker.io/openebs/cspc-operator:3.3.0",
                        "imageID": "docker.io/openebs/cspc-operator@sha256:2d86574415ba401176ca5a1f12505fad22cbe50f6720c3bbe9d7f5c6ca9fe3eb",
                        "lastState": {},
                        "name": "openebs-cstor-cspc-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:42Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.248",
                "podIPs": [
                    {
                        "ip": "10.1.235.248"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "a2e03021b776a91c41bccab0a70f243087c298ba266b79ef33bb49762b064cfc",
                    "cni.projectcalico.org/podIP": "10.1.235.249/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.249/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-cstor-admission-server-f5d57f788-",
                "labels": {
                    "app": "cstor-admission-webhook",
                    "chart": "cstor-3.3.0",
                    "component": "cstor-admission-webhook",
                    "heritage": "Helm",
                    "openebs.io/component-name": "cstor-admission-webhook",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "f5d57f788",
                    "release": "openebs"
                },
                "name": "openebs-cstor-admission-server-f5d57f788-wgrqv",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-cstor-admission-server-f5d57f788",
                        "uid": "73a08feb-bb6e-4edd-9a88-1ec2dae38ba0"
                    }
                ],
                "resourceVersion": "6014",
                "uid": "8e632451-107c-4512-af4b-fd3d7b60a6ad"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-alsologtostderr",
                            "-v=2",
                            "2\u003e\u00261"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "ADMISSION_WEBHOOK_FAILURE_POLICY",
                                "value": "Fail"
                            }
                        ],
                        "image": "openebs/cstor-webhook:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "openebs-cstor-admission-webhook",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mxz2k",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-cstor-operator",
                "serviceAccountName": "openebs-cstor-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-mxz2k",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://eaadc4c186e830298edb8367afda88f79053e0b8b2daa3e99f261cba2975ec6e",
                        "image": "docker.io/openebs/cstor-webhook:3.3.0",
                        "imageID": "docker.io/openebs/cstor-webhook@sha256:e98298d59b1c5d0abb7aca969dc8f589ddb782252238c326b242d4656bb99581",
                        "lastState": {},
                        "name": "openebs-cstor-admission-webhook",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:46Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.249",
                "podIPs": [
                    {
                        "ip": "10.1.235.249"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:18:22Z",
                "generateName": "openebs-jiva-csi-node-",
                "labels": {
                    "chart": "jiva-3.3.0",
                    "component": "openebs-jiva-csi-node",
                    "controller-revision-hash": "7d998d5fdb",
                    "heritage": "Helm",
                    "name": "openebs-jiva-csi-node",
                    "openebs.io/component-name": "openebs-jiva-csi-node",
                    "openebs.io/version": "3.3.0",
                    "pod-template-generation": "1",
                    "release": "openebs"
                },
                "name": "openebs-jiva-csi-node-pl2tj",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "openebs-jiva-csi-node",
                        "uid": "2005e698-1fdd-40f3-96f6-21e89bf80047"
                    }
                ],
                "resourceVersion": "6190",
                "uid": "b8a183d3-8d21-4a39-a1ca-55fd8da83326"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/plugin/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/snap/microk8s/common/var/lib/kubelet/plugins/jiva.csi.openebs.io/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "NODE_DRIVER",
                                "value": "openebs-jiva-csi"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "rm -rf /registration/jiva.csi.openebs.io /registration/jiva.csi.openebs.io-reg.sock"
                                    ]
                                }
                            }
                        },
                        "name": "csi-node-driver-registrar",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/plugin",
                                "name": "plugin-dir"
                            },
                            {
                                "mountPath": "/registration",
                                "name": "registration-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r8qnv",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--name=jiva.csi.openebs.io",
                            "--nodeid=$(OPENEBS_NODE_ID)",
                            "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                            "--plugin=$(OPENEBS_NODE_DRIVER)",
                            "--enableiscsidebug=true",
                            "--retrycount=20",
                            "--metricsBindAddress=:9505"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_NODE_ID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_CSI_ENDPOINT",
                                "value": "unix:///plugin/csi.sock"
                            },
                            {
                                "name": "OPENEBS_NODE_DRIVER",
                                "value": "node"
                            },
                            {
                                "name": "OPENEBS_CSI_API_URL",
                                "value": "https://openebs.io"
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "REMOUNT",
                                "value": "true"
                            }
                        ],
                        "image": "openebs/jiva-csi:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "jiva-csi-plugin",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/plugin",
                                "name": "plugin-dir"
                            },
                            {
                                "mountPath": "/dev",
                                "name": "device-dir"
                            },
                            {
                                "mountPath": "/var/snap/microk8s/common/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional",
                                "name": "pods-mount-dir"
                            },
                            {
                                "mountPath": "/host",
                                "mountPropagation": "HostToContainer",
                                "name": "host-root"
                            },
                            {
                                "mountPath": "/sbin/iscsiadm",
                                "name": "chroot-iscsiadm",
                                "subPath": "iscsiadm"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r8qnv",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--csi-address=/plugin/csi.sock"
                        ],
                        "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "liveness-probe",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/plugin",
                                "name": "plugin-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r8qnv",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 900001000,
                "priorityClassName": "openebs-jiva-csi-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-jiva-csi-node-sa",
                "serviceAccountName": "openebs-jiva-csi-node-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        },
                        "name": "device-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "registration-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins/jiva.csi.openebs.io/",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "plugin-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/",
                            "type": "Directory"
                        },
                        "name": "pods-mount-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 365,
                            "name": "openebs-jiva-csi-iscsiadm"
                        },
                        "name": "chroot-iscsiadm"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": "Directory"
                        },
                        "name": "host-root"
                    },
                    {
                        "name": "kube-api-access-r8qnv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:12Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:12Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://e5312bae76def241822427d3a6fe2fa04dd449f121142b7013cf8d2995590dac",
                        "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f9bcee63734b7b01555ee8fc8fb01ac2922478b2c8934bf8d468dd2916edc405",
                        "lastState": {},
                        "name": "csi-node-driver-registrar",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://13366df3f98fab5b7e74ac61307f6c680461071a06fa6a0cac6a91aec66a87a5",
                        "image": "docker.io/openebs/jiva-csi:3.3.0",
                        "imageID": "docker.io/openebs/jiva-csi@sha256:12295107e773ee6f13a6d781c02b63478e72d18a6ed899612718213a2c9796d5",
                        "lastState": {},
                        "name": "jiva-csi-plugin",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:04Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://7ae35cc33d5e8879a22639eb89e5a427f7b4afe30d175f1108b838102c12cc56",
                        "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                        "imageID": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
                        "lastState": {},
                        "name": "liveness-probe",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "192.168.1.55",
                "podIPs": [
                    {
                        "ip": "192.168.1.55"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "8806cd86a67a75febec8045fcce1b203f9388cd467ed6366e66671160b30f32f",
                    "cni.projectcalico.org/podIP": "10.1.235.250/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.250/32"
                },
                "creationTimestamp": "2023-03-08T22:18:22Z",
                "generateName": "openebs-cstor-csi-controller-",
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "openebs-cstor-csi-controller",
                    "controller-revision-hash": "openebs-cstor-csi-controller-569b775c89",
                    "heritage": "Helm",
                    "name": "openebs-cstor-csi-controller",
                    "openebs.io/component-name": "openebs-cstor-csi-controller",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs",
                    "statefulset.kubernetes.io/pod-name": "openebs-cstor-csi-controller-0"
                },
                "name": "openebs-cstor-csi-controller-0",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "openebs-cstor-csi-controller",
                        "uid": "a41a2a65-1d2a-4107-8146-97289355a33f"
                    }
                ],
                "resourceVersion": "6209",
                "uid": "68f2e789-ea59-4557-add4-8646ac99d271"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)",
                            "--leader-election"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-resizer",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--csi-address=$(ADDRESS)"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-snapshotter",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--v=5",
                            "--leader-election=false"
                        ],
                        "image": "k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "snapshot-controller",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--v=5",
                            "--feature-gates=Topology=true",
                            "--extra-create-metadata=true",
                            "--metrics-address=:22011",
                            "--timeout=250s",
                            "--default-fstype=ext4"
                        ],
                        "env": [
                            {
                                "name": "MY_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-attacher",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                            "--url=$(OPENEBS_CSI_API_URL)",
                            "--plugin=$(OPENEBS_CONTROLLER_DRIVER)"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_CONTROLLER_DRIVER",
                                "value": "controller"
                            },
                            {
                                "name": "OPENEBS_CSI_ENDPOINT",
                                "value": "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                            },
                            {
                                "name": "OPENEBS_CSI_API_URL",
                                "value": "https://openebs.io"
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_INSTALLER_TYPE",
                                "value": "cstor-helm"
                            },
                            {
                                "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                "value": "true"
                            }
                        ],
                        "image": "openebs/cstor-csi-driver:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cstor-csi-plugin",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-5b7k5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "openebs-cstor-csi-controller-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 900000000,
                "priorityClassName": "openebs-cstor-csi-controller-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-cstor-csi-controller-sa",
                "serviceAccountName": "openebs-cstor-csi-controller-sa",
                "subdomain": "openebs-csi",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "socket-dir"
                    },
                    {
                        "name": "kube-api-access-5b7k5",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://f365b198d4c6c2681deb6d186d8deffbed8672dd0953baba06d4f38b08a2d00a",
                        "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09",
                        "lastState": {},
                        "name": "csi-attacher",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:12Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://9ee84d40aa06d56fe71cec020dc60ecaf72d239188a451a09f69c106ff09c05f",
                        "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:6477988532358148d2e98f7c747db4e9250bbc7ad2664bf666348abf9ee1f5aa",
                        "lastState": {},
                        "name": "csi-provisioner",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:07Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://4ae9d5db2190f1ac44fb372f1be1e386cfd351a65219a822b568e7de1081cd34",
                        "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
                        "lastState": {},
                        "name": "csi-resizer",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://6667e652b057a8ea12376c2324a02a2f618a8f5415ee1159347533c1e849cb6b",
                        "image": "k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3",
                        "imageID": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
                        "lastState": {},
                        "name": "csi-snapshotter",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:57Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://1a98b5cbae9477b3e734acef6fe49cbf45d2c707376eba25ce051a2a8f8e78c9",
                        "image": "docker.io/openebs/cstor-csi-driver:3.3.0",
                        "imageID": "docker.io/openebs/cstor-csi-driver@sha256:7a0736cfe516bac5e280e5129b89d4f13e203822aed4febf64ff7f252f948e19",
                        "lastState": {},
                        "name": "cstor-csi-plugin",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:13Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://2f81d4737630e314b8b5ba98b210c438024a52fbea6ce9a4e3f2c0d86de0f874",
                        "image": "k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3",
                        "imageID": "k8s.gcr.io/sig-storage/snapshot-controller@sha256:7092470172782a926e819a75344aff15cfbdb603f7ec75c117ba499dd93c2cd8",
                        "lastState": {},
                        "name": "snapshot-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.250",
                "podIPs": [
                    {
                        "ip": "10.1.235.250"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "ea8e9ed2031a0859b1b883c575519046f87f370a8adf9f6d9ffb36a0ec3af64b",
                    "cni.projectcalico.org/podIP": "10.1.235.251/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.251/32"
                },
                "creationTimestamp": "2023-03-08T22:18:22Z",
                "generateName": "openebs-jiva-csi-controller-",
                "labels": {
                    "chart": "jiva-3.3.0",
                    "component": "openebs-jiva-csi-controller",
                    "controller-revision-hash": "openebs-jiva-csi-controller-945f88576",
                    "heritage": "Helm",
                    "name": "openebs-jiva-csi-controller",
                    "openebs.io/component-name": "openebs-jiva-csi-controller",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs",
                    "statefulset.kubernetes.io/pod-name": "openebs-jiva-csi-controller-0"
                },
                "name": "openebs-jiva-csi-controller-0",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "openebs-jiva-csi-controller",
                        "uid": "0afcd66f-b028-4516-a7e5-5728909ca528"
                    }
                ],
                "resourceVersion": "6211",
                "uid": "11d2320d-5b42-4935-b93d-d6fed034994e"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)",
                            "--leader-election"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-resizer",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6s7zr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--v=5",
                            "--feature-gates=Topology=true",
                            "--extra-create-metadata=true",
                            "--metrics-address=:22011",
                            "--timeout=250s",
                            "--default-fstype=ext4"
                        ],
                        "env": [
                            {
                                "name": "MY_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6s7zr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "csi-attacher",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6s7zr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--endpoint=$(OPENEBS_JIVA_CSI_ENDPOINT)",
                            "--plugin=$(OPENEBS_JIVA_CSI_CONTROLLER)",
                            "--name=jiva.csi.openebs.io",
                            "--nodeid=$(OPENEBS_NODEID)"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_JIVA_CSI_CONTROLLER",
                                "value": "controller"
                            },
                            {
                                "name": "OPENEBS_JIVA_CSI_ENDPOINT",
                                "value": "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                            },
                            {
                                "name": "OPENEBS_CSI_API_URL",
                                "value": "https://openebs.io"
                            },
                            {
                                "name": "OPENEBS_NODEID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_IO_INSTALLER_TYPE",
                                "value": "jiva-helm"
                            },
                            {
                                "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                "value": "true"
                            }
                        ],
                        "image": "openebs/jiva-csi:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "jiva-csi-plugin",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6s7zr",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--csi-address=/csi/csi.sock"
                        ],
                        "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "liveness-probe",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/csi",
                                "name": "socket-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6s7zr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "openebs-jiva-csi-controller-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 900000000,
                "priorityClassName": "openebs-jiva-csi-controller-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-jiva-csi-controller-sa",
                "serviceAccountName": "openebs-jiva-csi-controller-sa",
                "subdomain": "openebs-csi",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "socket-dir"
                    },
                    {
                        "name": "kube-api-access-6s7zr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:19:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://2980ef68acfa1a3e4b4b2af0d31bb50b764bf5d85dd6c14df1e52efbe6b08479",
                        "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-attacher@sha256:50c3cfd458fc8e0bf3c8c521eac39172009382fc66dc5044a330d137c6ed0b09",
                        "lastState": {},
                        "name": "csi-attacher",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:10Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://89434912dc2e6503d4c8b3e1766b06baf3d814f77c15d67f3fcf462ce21c1728",
                        "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:6477988532358148d2e98f7c747db4e9250bbc7ad2664bf666348abf9ee1f5aa",
                        "lastState": {},
                        "name": "csi-provisioner",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:00Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://250ec9e096106106a25165034da1df8b13c5fbcbc1557cd85b4403d9747adc81",
                        "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
                        "lastState": {},
                        "name": "csi-resizer",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://8f1592e51a3d1a24cd0b8f38b5e8fcba4f047a46f46ab6f29ed842571b60e453",
                        "image": "docker.io/openebs/jiva-csi:3.3.0",
                        "imageID": "docker.io/openebs/jiva-csi@sha256:12295107e773ee6f13a6d781c02b63478e72d18a6ed899612718213a2c9796d5",
                        "lastState": {},
                        "name": "jiva-csi-plugin",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:10Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://fcf8068b5424e9971b55dc47e5b3eb87b2d0bfb9ca0f517ee786b32d44914267",
                        "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                        "imageID": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
                        "lastState": {},
                        "name": "liveness-probe",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:19:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.251",
                "podIPs": [
                    {
                        "ip": "10.1.235.251"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "20f0600ee9c4216597b614396c5696479faaa78d45d2f188bddaf1f9c020cc05",
                    "cni.projectcalico.org/podIP": "10.1.235.208/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.208/32",
                    "kubectl.kubernetes.io/restartedAt": "2023-03-08T13:59:07-08:00"
                },
                "creationTimestamp": "2023-03-08T21:59:07Z",
                "generateName": "calico-kube-controllers-69d6f7455c-",
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "69d6f7455c"
                },
                "name": "calico-kube-controllers-69d6f7455c-bhmxt",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "calico-kube-controllers-69d6f7455c",
                        "uid": "2a6ecd23-1ca6-41ae-a438-84e369b191f0"
                    }
                ],
                "resourceVersion": "7422",
                "uid": "6ebabaf8-ca4a-49cc-8478-1ed853d40755"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "ENABLED_CONTROLLERS",
                                "value": "node"
                            },
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            }
                        ],
                        "image": "docker.io/calico/kube-controllers:v3.23.5",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-l"
                                ]
                            },
                            "failureThreshold": 6,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "calico-kube-controllers",
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/check-status",
                                    "-r"
                                ]
                            },
                            "failureThreshold": 3,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-t88hc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "calico-kube-controllers",
                "serviceAccountName": "calico-kube-controllers",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-t88hc",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b5188c63c096cc254be66400afb5390682dce268ef55ef8a0889666ce92567be",
                        "image": "docker.io/calico/kube-controllers:v3.23.5",
                        "imageID": "docker.io/calico/kube-controllers@sha256:58cc91c551e9e941a752e205eefed1c8da56f97a51e054b3d341b67bb7bf27eb",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://1d8fbab9856bebb6b56b32fd5a855e5e2ed356ad953d4b00f0ea860f899751ea",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T21:59:32Z"
                            }
                        },
                        "name": "calico-kube-controllers",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.208",
                "podIPs": [
                    {
                        "ip": "10.1.235.208"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T21:59:15Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/restartedAt": "2023-03-08T13:59:07-08:00"
                },
                "creationTimestamp": "2023-03-08T21:59:07Z",
                "generateName": "calico-node-",
                "labels": {
                    "controller-revision-hash": "5bdcfbd758",
                    "k8s-app": "calico-node",
                    "pod-template-generation": "2"
                },
                "name": "calico-node-rgr7m",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "calico-node",
                        "uid": "8e47c25b-d91f-42c8-9da7-0baeeb80dab0"
                    }
                ],
                "resourceVersion": "7428",
                "uid": "8a04a148-78c3-4b03-bbe2-740d5412dbaa"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "DATASTORE_TYPE",
                                "value": "kubernetes"
                            },
                            {
                                "name": "WAIT_FOR_DATASTORE",
                                "value": "true"
                            },
                            {
                                "name": "NODENAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "calico_backend",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "CLUSTER_TYPE",
                                "value": "k8s,bgp"
                            },
                            {
                                "name": "IP",
                                "value": "autodetect"
                            },
                            {
                                "name": "IP_AUTODETECTION_METHOD",
                                "value": "first-found"
                            },
                            {
                                "name": "CALICO_IPV4POOL_VXLAN",
                                "value": "Always"
                            },
                            {
                                "name": "CALICO_IPV6POOL_VXLAN",
                                "value": "Never"
                            },
                            {
                                "name": "FELIX_IPINIPMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "veth_mtu",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_VXLANMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "veth_mtu",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "FELIX_WIREGUARDMTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "veth_mtu",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_IPV4POOL_CIDR",
                                "value": "10.1.0.0/16"
                            },
                            {
                                "name": "CALICO_DISABLE_FILE_LOGGING",
                                "value": "true"
                            },
                            {
                                "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                "value": "ACCEPT"
                            },
                            {
                                "name": "FELIX_IPV6SUPPORT",
                                "value": "false"
                            },
                            {
                                "name": "FELIX_HEALTHENABLED",
                                "value": "true"
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "docker.io/calico/node:v3.23.5",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/calico-node",
                                        "-shutdown"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-live"
                                ]
                            },
                            "failureThreshold": 6,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "name": "calico-node",
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/calico-node",
                                    "-felix-ready"
                                ]
                            },
                            "failureThreshold": 3,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 10
                        },
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "cni-net-dir"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/var/run/calico",
                                "name": "var-run-calico"
                            },
                            {
                                "mountPath": "/var/lib/calico",
                                "name": "var-lib-calico"
                            },
                            {
                                "mountPath": "/var/run/nodeagent",
                                "name": "policysync"
                            },
                            {
                                "mountPath": "/var/log/calico/cni",
                                "name": "cni-log-dir",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k9p7w",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "initContainers": [
                    {
                        "command": [
                            "/opt/cni/bin/calico-ipam",
                            "-upgrade"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CALICO_NETWORKING_BACKEND",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "calico_backend",
                                        "name": "calico-config"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "docker.io/calico/cni:v3.23.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "upgrade-ipam",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/cni/networks",
                                "name": "host-local-net-dir"
                            },
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "cni-bin-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k9p7w",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "command": [
                            "/opt/cni/bin/install"
                        ],
                        "env": [
                            {
                                "name": "CNI_CONF_NAME",
                                "value": "10-calico.conflist"
                            },
                            {
                                "name": "CNI_NETWORK_CONFIG",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "cni_network_config",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "CNI_MTU",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "veth_mtu",
                                        "name": "calico-config"
                                    }
                                }
                            },
                            {
                                "name": "SLEEP",
                                "value": "false"
                            },
                            {
                                "name": "CNI_NET_DIR",
                                "value": "/var/snap/microk8s/current/args/cni-network"
                            }
                        ],
                        "envFrom": [
                            {
                                "configMapRef": {
                                    "name": "kubernetes-services-endpoint",
                                    "optional": true
                                }
                            }
                        ],
                        "image": "docker.io/calico/cni:v3.23.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "install-cni",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host/opt/cni/bin",
                                "name": "cni-bin-dir"
                            },
                            {
                                "mountPath": "/host/etc/cni/net.d",
                                "name": "cni-net-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k9p7w",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "calico-node",
                "serviceAccountName": "calico-node",
                "terminationGracePeriodSeconds": 0,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "operator": "Exists"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/run/calico",
                            "type": ""
                        },
                        "name": "var-run-calico"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/lib/calico",
                            "type": ""
                        },
                        "name": "var-lib-calico"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/fs/",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "sys-fs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/opt/cni/bin",
                            "type": ""
                        },
                        "name": "cni-bin-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/args/cni-network",
                            "type": ""
                        },
                        "name": "cni-net-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/log/calico/cni",
                            "type": ""
                        },
                        "name": "cni-log-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/lib/cni/networks",
                            "type": ""
                        },
                        "name": "host-local-net-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/current/var/run/nodeagent",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "policysync"
                    },
                    {
                        "name": "kube-api-access-k9p7w",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:07Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://390e6ca9f6f62003656350a3b5a5f9e6dbd326e2480f4ab164459baac95bc037",
                        "image": "docker.io/calico/node:v3.23.5",
                        "imageID": "docker.io/calico/node@sha256:b7f4f7a0ce463de5d294fdf2bb13f61035ec6e3e5ee05dd61dcc8e79bc29d934",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://613e1bfcbaf3efcdd7994569bdf503d6d0b432ed6263ddd34aeae77c7f299bc5",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T21:59:20Z"
                            }
                        },
                        "name": "calico-node",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://4c2e0c5f475cf42df481e74e1dc63c411a55119bc8ae19a61c6a63ffbb20d096",
                        "image": "docker.io/calico/cni:v3.23.5",
                        "imageID": "docker.io/calico/cni@sha256:7ca5c455cff6c0d661e33918d95a1133afb450411dbfb7e4369a9ecf5e0212dc",
                        "lastState": {},
                        "name": "upgrade-ipam",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://4c2e0c5f475cf42df481e74e1dc63c411a55119bc8ae19a61c6a63ffbb20d096",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:05:11Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:05:11Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://faf068ba3ae2b92a98da6ca0efa3ffb19fecf15c2df4f117bfe1c3c5b08c5d9b",
                        "image": "docker.io/calico/cni:v3.23.5",
                        "imageID": "docker.io/calico/cni@sha256:7ca5c455cff6c0d661e33918d95a1133afb450411dbfb7e4369a9ecf5e0212dc",
                        "lastState": {},
                        "name": "install-cni",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://faf068ba3ae2b92a98da6ca0efa3ffb19fecf15c2df4f117bfe1c3c5b08c5d9b",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:05:12Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:05:11Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "192.168.1.55",
                "podIPs": [
                    {
                        "ip": "192.168.1.55"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T21:59:07Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generateName": "kube-prom-stack-prometheus-node-exporter-",
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "prometheus-node-exporter",
                    "app.kubernetes.io/part-of": "prometheus-node-exporter",
                    "app.kubernetes.io/version": "1.5.0",
                    "controller-revision-hash": "f466c9548",
                    "helm.sh/chart": "prometheus-node-exporter-4.14.0",
                    "jobLabel": "node-exporter",
                    "pod-template-generation": "1",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-prometheus-node-exporter-2hfml",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-prom-stack-prometheus-node-exporter",
                        "uid": "5ef7244e-01a2-462c-af38-39eb3fdd7496"
                    }
                ],
                "resourceVersion": "7432",
                "uid": "18b80fdc-0961-422f-828d-3823f1cd8a84"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "automountServiceAccountToken": false,
                "containers": [
                    {
                        "args": [
                            "--path.procfs=/host/proc",
                            "--path.sysfs=/host/sys",
                            "--path.rootfs=/host/root",
                            "--path.udev.data=/host/root/run/udev/data",
                            "--web.listen-address=[$(HOST_IP)]:9100",
                            "--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)",
                            "--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
                        ],
                        "env": [
                            {
                                "name": "HOST_IP",
                                "value": "0.0.0.0"
                            }
                        ],
                        "image": "quay.io/prometheus/node-exporter:v1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 9100,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "node-exporter",
                        "ports": [
                            {
                                "containerPort": 9100,
                                "hostPort": 9100,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 9100,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host/proc",
                                "name": "proc",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/sys",
                                "name": "sys",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/host/root",
                                "mountPropagation": "HostToContainer",
                                "name": "root",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "hostPID": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 65534,
                    "runAsGroup": 65534,
                    "runAsNonRoot": true,
                    "runAsUser": 65534
                },
                "serviceAccount": "kube-prom-stack-prometheus-node-exporter",
                "serviceAccountName": "kube-prom-stack-prometheus-node-exporter",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/proc",
                            "type": ""
                        },
                        "name": "proc"
                    },
                    {
                        "hostPath": {
                            "path": "/sys",
                            "type": ""
                        },
                        "name": "sys"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": ""
                        },
                        "name": "root"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:43Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:43Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b1eb124a5051dc768f09ac780590808725d20baba1c7f5d7c879e20df3ce40d4",
                        "image": "quay.io/prometheus/node-exporter:v1.5.0",
                        "imageID": "quay.io/prometheus/node-exporter@sha256:39c642b2b337e38c18e80266fb14383754178202f40103646337722a594d984c",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://89360a179f543db08f9abc5a006c2a2bb19c46af953f4be95475509664fdf3a3",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:14Z"
                            }
                        },
                        "name": "node-exporter",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:09Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "192.168.1.55",
                "podIPs": [
                    {
                        "ip": "192.168.1.55"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "8513c6dec898b2da52aae0a2d13648bfac3d3b2b459d63734e38aa1503dae05c",
                    "cni.projectcalico.org/containerID": "fc6c5d03801ef5cdb994fea077c19dc3932286f7fc8487d2078228d4b900cad6",
                    "cni.projectcalico.org/podIP": "10.1.235.220/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.220/32",
                    "prometheus.io/port": "http-metrics",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "loki-",
                "labels": {
                    "app": "loki",
                    "controller-revision-hash": "loki-655c6d66f4",
                    "name": "loki",
                    "release": "loki",
                    "statefulset.kubernetes.io/pod-name": "loki-0"
                },
                "name": "loki-0",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "loki",
                        "uid": "90d8db80-5b14-4c75-b37a-2ed25b42375d"
                    }
                ],
                "resourceVersion": "7443",
                "uid": "087ad5d4-5f8a-4da5-857f-21e95bc5faa5"
            },
            "spec": {
                "affinity": {},
                "containers": [
                    {
                        "args": [
                            "-config.file=/etc/loki/loki.yaml"
                        ],
                        "image": "grafana/loki:2.6.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": "http-metrics",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 45,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "loki",
                        "ports": [
                            {
                                "containerPort": 3100,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9095,
                                "name": "grpc",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 7946,
                                "name": "memberlist-port",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": "http-metrics",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 45,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/etc/loki",
                                "name": "config"
                            },
                            {
                                "mountPath": "/data",
                                "name": "storage"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-86sqt",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "loki-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 10001,
                    "runAsGroup": 10001,
                    "runAsNonRoot": true,
                    "runAsUser": 10001
                },
                "serviceAccount": "loki",
                "serviceAccountName": "loki",
                "subdomain": "loki-headless",
                "terminationGracePeriodSeconds": 4800,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp"
                    },
                    {
                        "name": "config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "loki"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "storage"
                    },
                    {
                        "name": "kube-api-access-86sqt",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:38Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:38Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://143ae9f7be71046eb7919bafcd44db025077b869b70c2e76822eaa171570e73b",
                        "image": "docker.io/grafana/loki:2.6.1",
                        "imageID": "docker.io/grafana/loki@sha256:1ee60f980950b00e505bd564b40f720132a0653b110e993043bb5940673d060a",
                        "lastState": {},
                        "name": "loki",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.220",
                "podIPs": [
                    {
                        "ip": "10.1.235.220"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "d9994ea0bbf05db516c8de1306c18f77f09000d8c7738fd9e09ec1a3266e262e",
                    "cni.projectcalico.org/podIP": "10.1.235.241/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.241/32"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generateName": "nvidia-device-plugin-daemonset-",
                "labels": {
                    "app": "nvidia-device-plugin-daemonset",
                    "controller-revision-hash": "864db779c5",
                    "pod-template-generation": "1"
                },
                "name": "nvidia-device-plugin-daemonset-h28rd",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nvidia-device-plugin-daemonset",
                        "uid": "a77aac12-c0c5-4bf9-9284-691034f38668"
                    }
                ],
                "resourceVersion": "7458",
                "uid": "0a85b79e-b1a6-421c-9da2-1407754b4cc7"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "[[ -f /run/nvidia/validations/host-driver-ready ]] \u0026\u0026 driver_root=/ || driver_root=/run/nvidia/driver; export NVIDIA_DRIVER_ROOT=$driver_root; exec nvidia-device-plugin;"
                        ],
                        "command": [
                            "bash",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "PASS_DEVICE_SPECS",
                                "value": "true"
                            },
                            {
                                "name": "FAIL_ON_INIT_ERROR",
                                "value": "true"
                            },
                            {
                                "name": "DEVICE_LIST_STRATEGY",
                                "value": "envvar"
                            },
                            {
                                "name": "DEVICE_ID_STRATEGY",
                                "value": "uuid"
                            },
                            {
                                "name": "NVIDIA_VISIBLE_DEVICES",
                                "value": "all"
                            },
                            {
                                "name": "NVIDIA_DRIVER_CAPABILITIES",
                                "value": "all"
                            },
                            {
                                "name": "MIG_STRATEGY",
                                "value": "single"
                            },
                            {
                                "name": "NVIDIA_MIG_MONITOR_DEVICES",
                                "value": "all"
                            }
                        ],
                        "image": "nvcr.io/nvidia/k8s-device-plugin:v0.12.3-ubi8",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-device-plugin",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kubelet/device-plugins",
                                "name": "device-plugin"
                            },
                            {
                                "mountPath": "/run/nvidia",
                                "mountPropagation": "HostToContainer",
                                "name": "run-nvidia"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-sdtnl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "toolkit-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia",
                                "mountPropagation": "HostToContainer",
                                "name": "run-nvidia"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-sdtnl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "nvidia.com/gpu.deploy.device-plugin": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-device-plugin",
                "serviceAccountName": "nvidia-device-plugin",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/lib/kubelet/device-plugins",
                            "type": ""
                        },
                        "name": "device-plugin"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia",
                            "type": "Directory"
                        },
                        "name": "run-nvidia"
                    },
                    {
                        "name": "kube-api-access-sdtnl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:11:16Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://4ae8f6efb1ac7c3831ca00aa8041af8c79fd85bd3836a81cf314816853e43b41",
                        "image": "nvcr.io/nvidia/k8s-device-plugin:v0.12.3-ubi8",
                        "imageID": "nvcr.io/nvidia/k8s-device-plugin@sha256:d1c61116647bb9388eb3c4e31848dd6038458b7ba33c0eb3b659d96739eceb73",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://dfddb4e298b49438215b2833e2aaba1af02dbd5c407d0401e0038e4ba6a0e5d8",
                                "exitCode": 1,
                                "finishedAt": "2023-03-08T22:22:02Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:22:02Z"
                            }
                        },
                        "name": "nvidia-device-plugin",
                        "ready": true,
                        "restartCount": 8,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:22:46Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://1f7888c0ef564ad52d7763ae09626d92b219dcf5dc76cdc67dfdc57a3cc15c6f",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "toolkit-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://1f7888c0ef564ad52d7763ae09626d92b219dcf5dc76cdc67dfdc57a3cc15c6f",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:16Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:11Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.241",
                "podIPs": [
                    {
                        "ip": "10.1.235.241"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "1542377d302da873522fa0d9aee1d6b75ac8674e9d722ca12edebe399922e135",
                    "cni.projectcalico.org/podIP": "10.1.235.219/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.219/32",
                    "kubectl.kubernetes.io/default-container": "alertmanager"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "alertmanager-kube-prom-stack-kube-prome-alertmanager-",
                "labels": {
                    "alertmanager": "kube-prom-stack-kube-prome-alertmanager",
                    "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-alertmanager",
                    "app.kubernetes.io/managed-by": "prometheus-operator",
                    "app.kubernetes.io/name": "alertmanager",
                    "app.kubernetes.io/version": "0.25.0",
                    "controller-revision-hash": "alertmanager-kube-prom-stack-kube-prome-alertmanager-5446cbcc6c",
                    "statefulset.kubernetes.io/pod-name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-0"
                },
                "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-0",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager",
                        "uid": "c06c73ea-72d8-4271-bbe3-41d3e0abd7ba"
                    }
                ],
                "resourceVersion": "7463",
                "uid": "5bfe1404-03eb-4e60-95da-5bf1591a1251"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--config.file=/etc/alertmanager/config_out/alertmanager.env.yaml",
                            "--storage.path=/alertmanager",
                            "--data.retention=120h",
                            "--cluster.listen-address=",
                            "--web.listen-address=:9093",
                            "--web.external-url=http://kube-prom-stack-kube-prome-alertmanager.observability:9093",
                            "--web.route-prefix=/",
                            "--cluster.peer=alertmanager-kube-prom-stack-kube-prome-alertmanager-0.alertmanager-operated:9094",
                            "--cluster.reconnect-timeout=5m",
                            "--web.config.file=/etc/alertmanager/web_config/web-config.yaml"
                        ],
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/prometheus/alertmanager:v0.25.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 10,
                            "httpGet": {
                                "path": "/-/healthy",
                                "port": "http-web",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "name": "alertmanager",
                        "ports": [
                            {
                                "containerPort": 9093,
                                "name": "http-web",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9094,
                                "name": "mesh-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9094,
                                "name": "mesh-udp",
                                "protocol": "UDP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 10,
                            "httpGet": {
                                "path": "/-/ready",
                                "port": "http-web",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 3,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {
                            "requests": {
                                "memory": "200Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/alertmanager/config",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/alertmanager/config_out",
                                "name": "config-out",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/alertmanager/certs",
                                "name": "tls-assets",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/alertmanager",
                                "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-db"
                            },
                            {
                                "mountPath": "/etc/alertmanager/web_config/web-config.yaml",
                                "name": "web-config",
                                "readOnly": true,
                                "subPath": "web-config.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c89dw",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--listen-address=:8080",
                            "--reload-url=http://127.0.0.1:9093/-/reload",
                            "--config-file=/etc/alertmanager/config/alertmanager.yaml.gz",
                            "--config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml"
                        ],
                        "command": [
                            "/bin/prometheus-config-reloader"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "SHARD",
                                "value": "-1"
                            }
                        ],
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "config-reloader",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "reloader-web",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/alertmanager/config",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/alertmanager/config_out",
                                "name": "config-out"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c89dw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "alertmanager-kube-prom-stack-kube-prome-alertmanager-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 2000,
                    "runAsGroup": 2000,
                    "runAsNonRoot": true,
                    "runAsUser": 1000
                },
                "serviceAccount": "kube-prom-stack-kube-prome-alertmanager",
                "serviceAccountName": "kube-prom-stack-kube-prome-alertmanager",
                "subdomain": "alertmanager-operated",
                "terminationGracePeriodSeconds": 120,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "config-volume",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "alertmanager-kube-prom-stack-kube-prome-alertmanager-generated"
                        }
                    },
                    {
                        "name": "tls-assets",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "secret": {
                                        "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-tls-assets-0"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "config-out"
                    },
                    {
                        "name": "web-config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "alertmanager-kube-prom-stack-kube-prome-alertmanager-web-config"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-db"
                    },
                    {
                        "name": "kube-api-access-c89dw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b79445b9de19028ebee9997424282c4cdc5ab645fdce2dbe5349fccda5c0ff7f",
                        "image": "quay.io/prometheus/alertmanager:v0.25.0",
                        "imageID": "quay.io/prometheus/alertmanager@sha256:fd4d9a3dd1fd0125108417be21be917f19cc76262347086509a0d43f29b80e98",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://814111ac61639c2bd6b3b8c43357cf4992b1c1ad96e85b6d3881783d1e5cd1c7",
                                "exitCode": 1,
                                "finishedAt": "2023-03-08T22:06:27Z",
                                "message": "ts=2023-03-08T22:06:27.446Z caller=main.go:240 level=info msg=\"Starting Alertmanager\" version=\"(version=0.25.0, branch=HEAD, revision=258fab7cdd551f2cf251ed0348f0ad7289aee789)\"\nts=2023-03-08T22:06:27.446Z caller=main.go:241 level=info build_context=\"(go=go1.19.4, user=root@abe866dd5717, date=20221222-14:51:36)\"\nts=2023-03-08T22:06:27.492Z caller=coordinator.go:113 level=info component=configuration msg=\"Loading configuration file\" file=/etc/alertmanager/config_out/alertmanager.env.yaml\nts=2023-03-08T22:06:27.492Z caller=coordinator.go:118 level=error component=configuration msg=\"Loading configuration file failed\" file=/etc/alertmanager/config_out/alertmanager.env.yaml err=\"open /etc/alertmanager/config_out/alertmanager.env.yaml: no such file or directory\"\n",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:06:27Z"
                            }
                        },
                        "name": "alertmanager",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:45Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://b85a1358a3f57674420d3bd1eb4ea50b48bd7ea1c1579d47a6d4bcab1fadcc64",
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:3f976422884ec7744f69084da7736927eb634914a0c035d5a865cf6a6b8eb1b0",
                        "lastState": {},
                        "name": "config-reloader",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:44Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.219",
                "podIPs": [
                    {
                        "ip": "10.1.235.219"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "0624e61dca3a1ca6640b62998c458d42e9b4bf1eea36de5c11a82c7165692e45",
                    "cni.projectcalico.org/podIP": "10.1.235.206/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.206/32",
                    "priorityClassName": "system-cluster-critical"
                },
                "creationTimestamp": "2023-03-08T21:59:37Z",
                "generateName": "coredns-6f5f9b5d74-",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "6f5f9b5d74"
                },
                "name": "coredns-6f5f9b5d74-7rcwv",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-6f5f9b5d74",
                        "uid": "5e6aa281-1a06-4594-977f-628e5f78d10f"
                    }
                ],
                "resourceVersion": "7474",
                "uid": "a7a5bf32-e7a2-4f6f-ade7-99f3a06c78c0"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "image": "coredns/coredns:1.9.3",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-j9m22",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-j9m22",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:37Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T21:59:37Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://85116663a861a2a205354f8e99ed4c17056addcb3aff8829f7d286892c384ce1",
                        "image": "docker.io/coredns/coredns:1.9.3",
                        "imageID": "docker.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://0b65a65005dc5770e3283ccb045b78c95f721e9f084a8dc14918140b4038e245",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T21:59:41Z"
                            }
                        },
                        "name": "coredns",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.206",
                "podIPs": [
                    {
                        "ip": "10.1.235.206"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T21:59:37Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "069147253943fb8a17921c5b654f3882a9795a1d27a9a0dfff51fb371ff27e5d",
                    "cni.projectcalico.org/podIP": "10.1.235.234/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.234/32",
                    "prometheus.io/path": "/stats/prometheus",
                    "prometheus.io/port": "15020",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generateName": "istio-ingressgateway-5f57c68988-",
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "pod-template-hash": "5f57c68988",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-ingressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istio-ingressgateway-5f57c68988-v54sd",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-ingressgateway-5f57c68988",
                        "uid": "95201bcc-5d31-49ea-af44-bbb277fbb6ec"
                    }
                ],
                "resourceVersion": "7477",
                "uid": "660e0d61-9a58-4d51-92c0-d3a839fbd744"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {}
                },
                "containers": [
                    {
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--proxyLogLevel=warning",
                            "--proxyComponentLogLevel=misc:error",
                            "--log_output_level=default:info"
                        ],
                        "env": [
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "CA_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_MESH_ID",
                                "value": "cluster.local"
                            },
                            {
                                "name": "TRUST_DOMAIN",
                                "value": "cluster.local"
                            },
                            {
                                "name": "ISTIO_META_UNPRIVILEGED_POD",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.15.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 15021,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 31400,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 30,
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15021,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                "name": "workload-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/credential-uds",
                                "name": "credential-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                "name": "workload-certs"
                            },
                            {
                                "mountPath": "/etc/istio/proxy",
                                "name": "istio-envoy"
                            },
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/istio",
                                "name": "istiod-ca-cert"
                            },
                            {
                                "mountPath": "/var/run/secrets/tokens",
                                "name": "istio-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/lib/istio/data",
                                "name": "istio-data"
                            },
                            {
                                "mountPath": "/etc/istio/pod",
                                "name": "podinfo"
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-certs",
                                "name": "ingressgateway-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-ca-certs",
                                "name": "ingressgateway-ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ckhr6",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1337,
                    "runAsGroup": 1337,
                    "runAsNonRoot": true,
                    "runAsUser": 1337
                },
                "serviceAccount": "istio-ingressgateway-service-account",
                "serviceAccountName": "istio-ingressgateway-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "workload-socket"
                    },
                    {
                        "emptyDir": {},
                        "name": "credential-socket"
                    },
                    {
                        "emptyDir": {},
                        "name": "workload-certs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-ca-root-cert"
                        },
                        "name": "istiod-ca-cert"
                    },
                    {
                        "downwardAPI": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.labels"
                                    },
                                    "path": "labels"
                                },
                                {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.annotations"
                                    },
                                    "path": "annotations"
                                }
                            ]
                        },
                        "name": "podinfo"
                    },
                    {
                        "emptyDir": {},
                        "name": "istio-envoy"
                    },
                    {
                        "emptyDir": {},
                        "name": "istio-data"
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio",
                            "optional": true
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "ingressgateway-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-certs"
                        }
                    },
                    {
                        "name": "ingressgateway-ca-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-ca-certs"
                        }
                    },
                    {
                        "name": "kube-api-access-ckhr6",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:49Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:49Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://3bd298d15da8abb417575ba4e5451848c94d8310aae22c573d9921a008aa6fb0",
                        "image": "docker.io/istio/proxyv2:1.15.3",
                        "imageID": "docker.io/istio/proxyv2@sha256:de42717d56b022c5f469a892cdff28ae045476c59ad818ca2732bac51d076b19",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.234",
                "podIPs": [
                    {
                        "ip": "10.1.235.234"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:10:08Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c15f5b2b51e1ef659a97662edc2254dbd920e92fbc9bdf342022de9f6fded2e4",
                    "cni.projectcalico.org/podIP": "10.1.235.230/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.230/32"
                },
                "creationTimestamp": "2023-03-08T22:09:39Z",
                "generateName": "argo-cd-argocd-application-controller-",
                "labels": {
                    "app.kubernetes.io/component": "application-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-application-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "controller-revision-hash": "argo-cd-argocd-application-controller-764bf84f77",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "statefulset.kubernetes.io/pod-name": "argo-cd-argocd-application-controller-0"
                },
                "name": "argo-cd-argocd-application-controller-0",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "argo-cd-argocd-application-controller",
                        "uid": "ae35f9d4-5519-4761-956f-bbd93d585937"
                    }
                ],
                "resourceVersion": "7485",
                "uid": "4b46fbbd-43ed-4003-bb51-63d74e104bf5"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "argocd-application-controller",
                            "--status-processors",
                            "20",
                            "--operation-processors",
                            "10",
                            "--app-resync",
                            "180",
                            "--self-heal-timeout-seconds",
                            "5",
                            "--repo-server",
                            "argo-cd-argocd-repo-server:8081",
                            "--repo-server-timeout-seconds",
                            "60",
                            "--logformat",
                            "text",
                            "--loglevel",
                            "info",
                            "--redis",
                            "argo-cd-argocd-redis:6379"
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "application-controller",
                        "ports": [
                            {
                                "containerPort": 8082,
                                "name": "controller",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 8082
                            },
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/home/argocd",
                                "name": "argocd-home"
                            },
                            {
                                "mountPath": "/app/config/controller/tls",
                                "name": "argocd-repo-server-tls"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dmlm8",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/home/argocd"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "argo-cd-argocd-application-controller-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argocd-application-controller",
                "serviceAccountName": "argocd-application-controller",
                "subdomain": "argo-cd-argocd-application-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "argocd-home"
                    },
                    {
                        "name": "argocd-repo-server-tls",
                        "secret": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tls.crt",
                                    "path": "tls.crt"
                                },
                                {
                                    "key": "tls.key",
                                    "path": "tls.key"
                                },
                                {
                                    "key": "ca.crt",
                                    "path": "ca.crt"
                                }
                            ],
                            "optional": true,
                            "secretName": "argocd-repo-server-tls"
                        }
                    },
                    {
                        "name": "kube-api-access-dmlm8",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://c4693008bd1c293e275ae1c7acfe9c14c45834f91bd7f25c0a3ae217cbc03533",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "application-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:09:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.230",
                "podIPs": [
                    {
                        "ip": "10.1.235.230"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "92d931fec4379add8274a74726475d18912ecfee372e0cfdf31619ba0398642f",
                    "cni.projectcalico.org/podIP": "10.1.235.231/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.231/32"
                },
                "creationTimestamp": "2023-03-08T22:09:39Z",
                "generateName": "argo-cd-argocd-repo-server-5f67c7b647-",
                "labels": {
                    "app.kubernetes.io/component": "repo-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-repo-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5f67c7b647"
                },
                "name": "argo-cd-argocd-repo-server-5f67c7b647-h2tq5",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-repo-server-5f67c7b647",
                        "uid": "d91faa55-bc0d-49b2-b99f-0741c1b51116"
                    }
                ],
                "resourceVersion": "7486",
                "uid": "2c1769bb-6f87-4325-b858-5ebb6983271f"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "argocd-repo-server",
                            "--redis",
                            "argo-cd-argocd-redis:6379",
                            "--logformat",
                            "text",
                            "--loglevel",
                            "info"
                        ],
                        "command": [
                            "entrypoint.sh"
                        ],
                        "env": [
                            {
                                "name": "HELM_CACHE_HOME",
                                "value": "/helm-working-dir"
                            },
                            {
                                "name": "HELM_CONFIG_HOME",
                                "value": "/helm-working-dir"
                            },
                            {
                                "name": "HELM_DATA_HOME",
                                "value": "/helm-working-dir"
                            }
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 8081
                            },
                            "timeoutSeconds": 1
                        },
                        "name": "repo-server",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "repo-server",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 8081
                            },
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/app/config/gpg/source",
                                "name": "gpg-keys"
                            },
                            {
                                "mountPath": "/app/config/gpg/keys",
                                "name": "gpg-keyring"
                            },
                            {
                                "mountPath": "/app/config/ssh",
                                "name": "ssh-known-hosts"
                            },
                            {
                                "mountPath": "/app/config/tls",
                                "name": "tls-certs"
                            },
                            {
                                "mountPath": "/app/config/reposerver/tls",
                                "name": "argocd-repo-server-tls"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/helm-working-dir",
                                "name": "helm-working-dir"
                            },
                            {
                                "mountPath": "/home/argocd/cmp-server/plugins",
                                "name": "plugins"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-m6m2p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "command": [
                            "cp",
                            "-n",
                            "/usr/local/bin/argocd",
                            "/var/run/argocd/argocd-cmp-server"
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "copyutil",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/argocd",
                                "name": "var-files"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-m6m2p",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-cd-argocd-repo-server",
                "serviceAccountName": "argo-cd-argocd-repo-server",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-gpg-keys-cm"
                        },
                        "name": "gpg-keys"
                    },
                    {
                        "emptyDir": {},
                        "name": "gpg-keyring"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-ssh-known-hosts-cm"
                        },
                        "name": "ssh-known-hosts"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-tls-certs-cm"
                        },
                        "name": "tls-certs"
                    },
                    {
                        "emptyDir": {},
                        "name": "helm-working-dir"
                    },
                    {
                        "name": "argocd-repo-server-tls",
                        "secret": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tls.crt",
                                    "path": "tls.crt"
                                },
                                {
                                    "key": "tls.key",
                                    "path": "tls.key"
                                },
                                {
                                    "key": "ca.crt",
                                    "path": "ca.crt"
                                }
                            ],
                            "optional": true,
                            "secretName": "argocd-repo-server-tls"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "emptyDir": {},
                        "name": "var-files"
                    },
                    {
                        "emptyDir": {},
                        "name": "plugins"
                    },
                    {
                        "name": "kube-api-access-m6m2p",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:00Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d583b683dc4eabf93ce60b125044f9b334310162f7aebe97bf6bcb6aa20f2fe4",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "repo-server",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://5e032efdfce8c55da56cd2dd3d2e16275f0be0ca4776b8756a2c2ff2fdfd46f6",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "copyutil",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5e032efdfce8c55da56cd2dd3d2e16275f0be0ca4776b8756a2c2ff2fdfd46f6",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:09:59Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:09:59Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.231",
                "podIPs": [
                    {
                        "ip": "10.1.235.231"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "21b9c87a02446d51a5d2b81b6bda09b713d24f920fb1451617f619d19a7b9b2f",
                    "cni.projectcalico.org/podIP": "10.1.235.246/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.246/32"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generateName": "openebs-ndm-operator-74fc47c6cc-",
                "labels": {
                    "app": "openebs",
                    "component": "ndm-operator",
                    "name": "ndm-operator",
                    "openebs.io/component-name": "ndm-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "74fc47c6cc",
                    "release": "openebs"
                },
                "name": "openebs-ndm-operator-74fc47c6cc-2x4ts",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "openebs-ndm-operator-74fc47c6cc",
                        "uid": "977794ab-283b-4d16-a2d3-869b9fcb0f4b"
                    }
                ],
                "resourceVersion": "7489",
                "uid": "cb6c0f7c-9c6d-4ff4-8cf9-8f9711842ea4"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "WATCH_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "OPERATOR_NAME",
                                "value": "node-disk-operator"
                            },
                            {
                                "name": "CLEANUP_JOB_IMAGE",
                                "value": "openebs/linux-utils:3.3.0"
                            }
                        ],
                        "image": "openebs/node-disk-operator:2.0.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8585,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "openebs-ndm-operator",
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8585,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2kp66",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs",
                "serviceAccountName": "openebs",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-2kp66",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0f83727e4f549f3cd11aabd57c6a658fd2fd60763f5f6190d9784e03e0805c83",
                        "image": "docker.io/openebs/node-disk-operator:2.0.0",
                        "imageID": "docker.io/openebs/node-disk-operator@sha256:60fdfea034ee6df8f3956b7fc09d0bbbd66849d98efc128557afdcbcde28e938",
                        "lastState": {},
                        "name": "openebs-ndm-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:36Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.246",
                "podIPs": [
                    {
                        "ip": "10.1.235.246"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "60947034e066545907edba4161f3d1f9823e730437eb2883446cc81b624e4086",
                    "checksum/dashboards-json-config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                    "checksum/sc-dashboard-provider-config": "2a79bd8307ccae3521afb43ea4a5f1f0d2deda4b6481f8b131efe44277bc502f",
                    "checksum/secret": "3d5dc20ad0dbb3f93006527887f0d3ffa2a535c06d911c586facc0d7d9421902",
                    "cni.projectcalico.org/containerID": "dbe1460bdb0794d5c503bf785737461fc20c8e9c8b0af11fd41b43981ef22e6c",
                    "cni.projectcalico.org/podIP": "10.1.235.211/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.211/32"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generateName": "kube-prom-stack-grafana-55cdcd77fb-",
                "labels": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/name": "grafana",
                    "pod-template-hash": "55cdcd77fb"
                },
                "name": "kube-prom-stack-grafana-55cdcd77fb-4rw58",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kube-prom-stack-grafana-55cdcd77fb",
                        "uid": "8f8c6196-a101-4325-97e1-e3c4bb8829fc"
                    }
                ],
                "resourceVersion": "7491",
                "uid": "1f4099c1-e77f-429f-a3e6-39d65a99acff"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "env": [
                            {
                                "name": "METHOD",
                                "value": "WATCH"
                            },
                            {
                                "name": "LABEL",
                                "value": "grafana_dashboard"
                            },
                            {
                                "name": "LABEL_VALUE",
                                "value": "1"
                            },
                            {
                                "name": "FOLDER",
                                "value": "/tmp/dashboards"
                            },
                            {
                                "name": "RESOURCE",
                                "value": "both"
                            },
                            {
                                "name": "REQ_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-user",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "REQ_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-password",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "REQ_URL",
                                "value": "http://localhost:3000/api/admin/provisioning/dashboards/reload"
                            },
                            {
                                "name": "REQ_METHOD",
                                "value": "POST"
                            }
                        ],
                        "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "grafana-sc-dashboard",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/dashboards",
                                "name": "sc-dashboard-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ghfhg",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "env": [
                            {
                                "name": "METHOD",
                                "value": "WATCH"
                            },
                            {
                                "name": "LABEL",
                                "value": "grafana_datasource"
                            },
                            {
                                "name": "LABEL_VALUE",
                                "value": "1"
                            },
                            {
                                "name": "FOLDER",
                                "value": "/etc/grafana/provisioning/datasources"
                            },
                            {
                                "name": "RESOURCE",
                                "value": "both"
                            },
                            {
                                "name": "REQ_USERNAME",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-user",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "REQ_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-password",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "REQ_URL",
                                "value": "http://localhost:3000/api/admin/provisioning/datasources/reload"
                            },
                            {
                                "name": "REQ_METHOD",
                                "value": "POST"
                            }
                        ],
                        "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "grafana-sc-datasources",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/grafana/provisioning/datasources",
                                "name": "sc-datasources-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ghfhg",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "env": [
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "GF_SECURITY_ADMIN_USER",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-user",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "GF_SECURITY_ADMIN_PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "admin-password",
                                        "name": "kube-prom-stack-grafana"
                                    }
                                }
                            },
                            {
                                "name": "GF_PATHS_DATA",
                                "value": "/var/lib/grafana/"
                            },
                            {
                                "name": "GF_PATHS_LOGS",
                                "value": "/var/log/grafana"
                            },
                            {
                                "name": "GF_PATHS_PLUGINS",
                                "value": "/var/lib/grafana/plugins"
                            },
                            {
                                "name": "GF_PATHS_PROVISIONING",
                                "value": "/etc/grafana/provisioning"
                            }
                        ],
                        "image": "grafana/grafana:9.3.8",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 10,
                            "httpGet": {
                                "path": "/api/health",
                                "port": 3000,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 30
                        },
                        "name": "grafana",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "name": "grafana",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9094,
                                "name": "gossip-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9094,
                                "name": "gossip-udp",
                                "protocol": "UDP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/health",
                                "port": 3000,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/grafana/grafana.ini",
                                "name": "config",
                                "subPath": "grafana.ini"
                            },
                            {
                                "mountPath": "/var/lib/grafana",
                                "name": "storage"
                            },
                            {
                                "mountPath": "/tmp/dashboards",
                                "name": "sc-dashboard-volume"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml",
                                "name": "sc-dashboard-provider",
                                "subPath": "provider.yaml"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/datasources",
                                "name": "sc-datasources-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ghfhg",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 472,
                    "runAsGroup": 472,
                    "runAsUser": 472
                },
                "serviceAccount": "kube-prom-stack-grafana",
                "serviceAccountName": "kube-prom-stack-grafana",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kube-prom-stack-grafana"
                        },
                        "name": "config"
                    },
                    {
                        "emptyDir": {},
                        "name": "storage"
                    },
                    {
                        "emptyDir": {},
                        "name": "sc-dashboard-volume"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kube-prom-stack-grafana-config-dashboards"
                        },
                        "name": "sc-dashboard-provider"
                    },
                    {
                        "emptyDir": {},
                        "name": "sc-datasources-volume"
                    },
                    {
                        "name": "kube-api-access-ghfhg",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://986d106cab859db6da5ab255666f2f56356390108e4a0ef569ca48ab2595ad91",
                        "image": "docker.io/grafana/grafana:9.3.8",
                        "imageID": "docker.io/grafana/grafana@sha256:a49f7d74630f47507e7e1ba92f6204f3c7b525d17108a90d489294030a9d507a",
                        "lastState": {},
                        "name": "grafana",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:19Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://3a90f61637fa001bbccd707077b4e0fce6d3e1156f72dff09042352d15d490f6",
                        "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                        "imageID": "quay.io/kiwigrid/k8s-sidecar@sha256:eaa478cdd0b8e1be7a4813bc1b01948b838e2feaa6d999e60c997dc823013824",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://9bbba6b92276125e6e5b00f00b1c8702ef6e0069d878f74f9d7ef06eb87ba370",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:22Z"
                            }
                        },
                        "name": "grafana-sc-dashboard",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:13Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://e6dfc2633d9fc05a8efd16b1da4d760377345ab40685997c942cac0e325bbaf9",
                        "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                        "imageID": "quay.io/kiwigrid/k8s-sidecar@sha256:eaa478cdd0b8e1be7a4813bc1b01948b838e2feaa6d999e60c997dc823013824",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://a71cce2f497e9c63e447067fcff4143424e7331fe3504de8c844fbf43a5c4a50",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:22Z"
                            }
                        },
                        "name": "grafana-sc-datasources",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.211",
                "podIPs": [
                    {
                        "ip": "10.1.235.211"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "d7a0a088ada4c17529f8ff218fde4ef28fff1b0edd3676111c0f36805d0f6f1c",
                    "cni.projectcalico.org/podIP": "10.1.235.207/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.207/32"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generateName": "kube-prom-stack-kube-state-metrics-8577f76959-",
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "app.kubernetes.io/part-of": "kube-state-metrics",
                    "app.kubernetes.io/version": "2.8.1",
                    "helm.sh/chart": "kube-state-metrics-5.0.0",
                    "pod-template-hash": "8577f76959",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-state-metrics-8577f76959-lx5tb",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kube-prom-stack-kube-state-metrics-8577f76959",
                        "uid": "3f4c8a3b-cf99-4d32-9130-865e16cb1805"
                    }
                ],
                "resourceVersion": "7494",
                "uid": "f8fbf3fe-e519-4e6f-8063-d847d1905a7c"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--port=8080",
                            "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments"
                        ],
                        "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "kube-state-metrics",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hthff",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 65534,
                    "runAsGroup": 65534,
                    "runAsUser": 65534
                },
                "serviceAccount": "kube-prom-stack-kube-state-metrics",
                "serviceAccountName": "kube-prom-stack-kube-state-metrics",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-hthff",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:40Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:40Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://4ebe2fe2174b24f38b64ca4831ae5ab13dd902d355e590f8c2c9f2571fc1cc58",
                        "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.1",
                        "imageID": "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:955869d5ae91ee4f46f07f27db43eeb10ba93586ecd921a8c05e4b196fb63322",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://044e9b4cc24f2ff96e82a539b05f8a314946f5323dd0d03e40c2affed170ba92",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:02:26Z"
                            }
                        },
                        "name": "kube-state-metrics",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.207",
                "podIPs": [
                    {
                        "ip": "10.1.235.207"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:01:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "48bf099256f45e0b28a4d01c6955618289feb360239ec911f6228a68d3fb1a3d",
                    "cni.projectcalico.org/containerID": "a4ccbc4208ecb675937a7d259cc9b05a7370fe192cda4a863280ed660f17e3b1",
                    "cni.projectcalico.org/podIP": "10.1.235.221/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.221/32"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "loki-promtail-",
                "labels": {
                    "app.kubernetes.io/instance": "loki",
                    "app.kubernetes.io/name": "promtail",
                    "controller-revision-hash": "5bfdb45c86",
                    "pod-template-generation": "1"
                },
                "name": "loki-promtail-wq9v6",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "loki-promtail",
                        "uid": "e1e51c7b-7e50-48b7-b077-47ff4c089b70"
                    }
                ],
                "resourceVersion": "7499",
                "uid": "b5978b43-aac3-4d09-9408-7471fdc5e369"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "-config.file=/etc/promtail/promtail.yaml"
                        ],
                        "env": [
                            {
                                "name": "HOSTNAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "docker.io/grafana/promtail:2.7.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "promtail",
                        "ports": [
                            {
                                "containerPort": 3101,
                                "name": "http-metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/ready",
                                "port": "http-metrics",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/promtail",
                                "name": "config"
                            },
                            {
                                "mountPath": "/run/promtail",
                                "name": "run"
                            },
                            {
                                "mountPath": "/var/lib/docker/containers",
                                "name": "containers",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/log/pods",
                                "name": "pods",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-94597",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsGroup": 0,
                    "runAsUser": 0
                },
                "serviceAccount": "loki-promtail",
                "serviceAccountName": "loki-promtail",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "loki-promtail"
                        }
                    },
                    {
                        "hostPath": {
                            "path": "/run/promtail",
                            "type": ""
                        },
                        "name": "run"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/docker/containers",
                            "type": ""
                        },
                        "name": "containers"
                    },
                    {
                        "hostPath": {
                            "path": "/var/log/pods",
                            "type": ""
                        },
                        "name": "pods"
                    },
                    {
                        "name": "kube-api-access-94597",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://1edca68e6503f4a0bab66745a6ec658bd1901dd1f61f0a3595bcc7f5f0539625",
                        "image": "docker.io/grafana/promtail:2.7.2",
                        "imageID": "docker.io/grafana/promtail@sha256:b624053704b381edd52f6c1139f9c998202bb388cbfaecaebd72e5d154e6703a",
                        "lastState": {},
                        "name": "promtail",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:35Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.221",
                "podIPs": [
                    {
                        "ip": "10.1.235.221"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "faea0031d7ceed31b4672789a533c637755af9aa3c442a0bdca8a595fbca3d63",
                    "cni.projectcalico.org/podIP": "10.1.235.217/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.217/32"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "nginx-ingress-microk8s-controller-",
                "labels": {
                    "controller-revision-hash": "7746945465",
                    "name": "nginx-ingress-microk8s",
                    "pod-template-generation": "1"
                },
                "name": "nginx-ingress-microk8s-controller-p5bpt",
                "namespace": "ingress",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nginx-ingress-microk8s-controller",
                        "uid": "ce8f9a2d-0000-4c78-9f2d-3f13e6612648"
                    }
                ],
                "resourceVersion": "7501",
                "uid": "486f15f3-99e0-4dc1-b79c-b4fe6b5d5534"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "/nginx-ingress-controller",
                            "--configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf",
                            "--tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf",
                            "--udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf",
                            "--ingress-class=public",
                            " ",
                            "--publish-status-address=127.0.0.1"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/wait-shutdown"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "nginx-ingress-microk8s",
                        "ports": [
                            {
                                "containerPort": 80,
                                "hostPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "hostPort": 443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 10254,
                                "hostPort": 10254,
                                "name": "health",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 101
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-z8rt5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nginx-ingress-microk8s-serviceaccount",
                "serviceAccountName": "nginx-ingress-microk8s-serviceaccount",
                "terminationGracePeriodSeconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-z8rt5",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://56f641af8b6b860994d4e8e9ad90a5c4d276d00e3609eeb1367c4eb9fd6ba0a8",
                        "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1",
                        "imageID": "registry.k8s.io/ingress-nginx/controller@sha256:4ba73c697770664c1e00e9f968de14e08f606ff961c76e5d7033a4a9c593c629",
                        "lastState": {},
                        "name": "nginx-ingress-microk8s",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:24Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.217",
                "podIPs": [
                    {
                        "ip": "10.1.235.217"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c15bc2e3adaa4e48f7b07f15a2fac6eff604172ab649bfe6b55d2e7799d0b0bc",
                    "cni.projectcalico.org/podIP": "10.1.235.233/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.233/32",
                    "prometheus.io/path": "/stats/prometheus",
                    "prometheus.io/port": "15020",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generateName": "istio-egressgateway-6b957f5b7d-",
                "labels": {
                    "app": "istio-egressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "pod-template-hash": "6b957f5b7d",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-egressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istio-egressgateway-6b957f5b7d-cnnb6",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-egressgateway-6b957f5b7d",
                        "uid": "38e21254-f56b-41ff-a86d-748b81d7f0a9"
                    }
                ],
                "resourceVersion": "7506",
                "uid": "3be9a7d0-9f0f-490b-89aa-9c5ae3dca093"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {}
                },
                "containers": [
                    {
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--proxyLogLevel=warning",
                            "--proxyComponentLogLevel=misc:error",
                            "--log_output_level=default:info"
                        ],
                        "env": [
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "CA_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_MESH_ID",
                                "value": "cluster.local"
                            },
                            {
                                "name": "TRUST_DOMAIN",
                                "value": "cluster.local"
                            },
                            {
                                "name": "ISTIO_META_UNPRIVILEGED_POD",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.15.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 30,
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15021,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "privileged": false,
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                "name": "workload-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/credential-uds",
                                "name": "credential-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                "name": "workload-certs"
                            },
                            {
                                "mountPath": "/etc/istio/proxy",
                                "name": "istio-envoy"
                            },
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/istio",
                                "name": "istiod-ca-cert"
                            },
                            {
                                "mountPath": "/var/run/secrets/tokens",
                                "name": "istio-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/lib/istio/data",
                                "name": "istio-data"
                            },
                            {
                                "mountPath": "/etc/istio/pod",
                                "name": "podinfo"
                            },
                            {
                                "mountPath": "/etc/istio/egressgateway-certs",
                                "name": "egressgateway-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/egressgateway-ca-certs",
                                "name": "egressgateway-ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6t5xh",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1337,
                    "runAsGroup": 1337,
                    "runAsNonRoot": true,
                    "runAsUser": 1337
                },
                "serviceAccount": "istio-egressgateway-service-account",
                "serviceAccountName": "istio-egressgateway-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "workload-socket"
                    },
                    {
                        "emptyDir": {},
                        "name": "credential-socket"
                    },
                    {
                        "emptyDir": {},
                        "name": "workload-certs"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-ca-root-cert"
                        },
                        "name": "istiod-ca-cert"
                    },
                    {
                        "downwardAPI": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.labels"
                                    },
                                    "path": "labels"
                                },
                                {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.annotations"
                                    },
                                    "path": "annotations"
                                }
                            ]
                        },
                        "name": "podinfo"
                    },
                    {
                        "emptyDir": {},
                        "name": "istio-envoy"
                    },
                    {
                        "emptyDir": {},
                        "name": "istio-data"
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio",
                            "optional": true
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "egressgateway-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-egressgateway-certs"
                        }
                    },
                    {
                        "name": "egressgateway-ca-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-egressgateway-ca-certs"
                        }
                    },
                    {
                        "name": "kube-api-access-6t5xh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://906c81ab72728dd06254407f16ef1cfc6b4f308c9a8ca6696d3aacac99e07d6b",
                        "image": "docker.io/istio/proxyv2:1.15.3",
                        "imageID": "docker.io/istio/proxyv2@sha256:de42717d56b022c5f469a892cdff28ae045476c59ad818ca2732bac51d076b19",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.233",
                "podIPs": [
                    {
                        "ip": "10.1.235.233"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:10:08Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "22320caa86b86492551bb87766abffd104f116851ac8b08cf3cea82566f5926b",
                    "cni.projectcalico.org/podIP": "10.1.235.237/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.237/32",
                    "openshift.io/scc": "restricted-readonly"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generateName": "gpu-operator-567cf74d9d-",
                "labels": {
                    "app": "gpu-operator",
                    "app.kubernetes.io/component": "gpu-operator",
                    "pod-template-hash": "567cf74d9d"
                },
                "name": "gpu-operator-567cf74d9d-g779z",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "gpu-operator-567cf74d9d",
                        "uid": "8b5352dd-28f5-4b6f-bdf3-2714d4f0f3ee"
                    }
                ],
                "resourceVersion": "7507",
                "uid": "91fa3ed2-0d0e-4ee7-a3c3-bd186416edb7"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "node-role.kubernetes.io/master",
                                            "operator": "In",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 1
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--leader-elect"
                        ],
                        "command": [
                            "gpu-operator"
                        ],
                        "env": [
                            {
                                "name": "WATCH_NAMESPACE"
                            },
                            {
                                "name": "OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "nvcr.io/nvidia/gpu-operator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "gpu-operator",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "350Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "100Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host-etc/os-release",
                                "name": "host-os-release",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xck52",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "gpu-operator",
                "serviceAccountName": "gpu-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Equal"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/os-release",
                            "type": ""
                        },
                        "name": "host-os-release"
                    },
                    {
                        "name": "kube-api-access-xck52",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:30Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://278f0ee65e98cbdbdc0bef6e21e01204a340ddc334f89bb564bb0ee09759ea3b",
                        "image": "nvcr.io/nvidia/gpu-operator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/gpu-operator@sha256:6a1f1e79407ee36e86314a3121f6491fdf3ad164ed558610370e9e3c683bd8db",
                        "lastState": {},
                        "name": "gpu-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:45Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.237",
                "podIPs": [
                    {
                        "ip": "10.1.235.237"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:10:30Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "e8954fb3bcc30f83d56e089fbb8554d45c8249246c4743693b4953ed840f908c",
                    "cni.projectcalico.org/podIP": "10.1.235.236/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.236/32"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generateName": "gpu-operator-node-feature-discovery-master-79bc547944-",
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "pod-template-hash": "79bc547944",
                    "role": "master"
                },
                "name": "gpu-operator-node-feature-discovery-master-79bc547944-nldv8",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "gpu-operator-node-feature-discovery-master-79bc547944",
                        "uid": "66c327f4-3115-4c50-9004-c0f38f0c2221"
                    }
                ],
                "resourceVersion": "7511",
                "uid": "1a040ce6-f2fc-4ff0-90ec-69016a80ef3a"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "node-role.kubernetes.io/master",
                                            "operator": "In",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 1
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "node-role.kubernetes.io/control-plane",
                                            "operator": "In",
                                            "values": [
                                                ""
                                            ]
                                        }
                                    ]
                                },
                                "weight": 1
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--extra-label-ns=nvidia.com",
                            "-featurerules-controller=true"
                        ],
                        "command": [
                            "nfd-master"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/grpc_health_probe",
                                    "-addr=:8080"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "master",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "grpc",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/bin/grpc_health_probe",
                                    "-addr=:8080"
                                ]
                            },
                            "failureThreshold": 10,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-sqfxs",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "node-feature-discovery",
                "serviceAccountName": "node-feature-discovery",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master",
                        "operator": "Equal"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane",
                        "operator": "Equal"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-sqfxs",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:30Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://2343ddfeaba034d6b3c74832192d515112270136add1d04a73cd9b0348e839ae",
                        "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                        "imageID": "k8s.gcr.io/nfd/node-feature-discovery@sha256:4aebf17c8b72ee91cb468a6f21dd9f0312c1fcfdf8c86341f7aee0ec2d5991d7",
                        "lastState": {},
                        "name": "master",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:35Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.236",
                "podIPs": [
                    {
                        "ip": "10.1.235.236"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:30Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "e6b234fd7dc70665354e6c381abcac69628e27435898254b4b7215708677f8cc",
                    "cni.projectcalico.org/podIP": "10.1.235.232/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.232/32",
                    "prometheus.io/port": "15014",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2023-03-08T22:09:48Z",
                "generateName": "istiod-558cdbcbff-",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "558cdbcbff",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istiod-558cdbcbff-ssmbw",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istiod-558cdbcbff",
                        "uid": "9ad7d507-d82d-48f2-b7d9-ac95f2569cd0"
                    }
                ],
                "resourceVersion": "7518",
                "uid": "4aafb3f8-3caf-42d7-934d-879f8044a8d0"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "discovery",
                            "--monitoringAddr=:15014",
                            "--log_output_level=default:info",
                            "--domain",
                            "cluster.local",
                            "--keepaliveMaxServerConnectionAge",
                            "30m"
                        ],
                        "env": [
                            {
                                "name": "REVISION",
                                "value": "default"
                            },
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "KUBECONFIG",
                                "value": "/var/run/secrets/remote/config"
                            },
                            {
                                "name": "PILOT_TRACE_SAMPLING",
                                "value": "100"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                "value": "true"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                "value": "true"
                            },
                            {
                                "name": "ISTIOD_ADDR",
                                "value": "istiod.istio-system.svc:15012"
                            },
                            {
                                "name": "PILOT_ENABLE_ANALYSIS",
                                "value": "false"
                            },
                            {
                                "name": "CLUSTER_ID",
                                "value": "Kubernetes"
                            }
                        ],
                        "image": "docker.io/istio/pilot:1.15.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "discovery",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15010,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15017,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "100Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/tokens",
                                "name": "istio-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/istio-dns",
                                "name": "local-certs"
                            },
                            {
                                "mountPath": "/etc/cacerts",
                                "name": "cacerts",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/remote",
                                "name": "istio-kubeconfig",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fn49d",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1337
                },
                "serviceAccount": "istiod",
                "serviceAccountName": "istiod",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "local-certs"
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "cacerts",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "cacerts"
                        }
                    },
                    {
                        "name": "istio-kubeconfig",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-kubeconfig"
                        }
                    },
                    {
                        "name": "kube-api-access-fn49d",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://798ab0262014a7321ece9ae644b455165d4ce9641ae2a26fae521d8200e9f5f0",
                        "image": "docker.io/istio/pilot:1.15.3",
                        "imageID": "docker.io/istio/pilot@sha256:50767d45a1d5563b11282f21bb2add8be4e80c6ad54404747d11605565242bdb",
                        "lastState": {},
                        "name": "discovery",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:10:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.232",
                "podIPs": [
                    {
                        "ip": "10.1.235.232"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:09:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "e1a55f264bdf36a5b3b127d7e3085dc80b8f582fc44033a3df337b5f1d591f8c",
                    "cni.projectcalico.org/podIP": "10.1.235.229/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.229/32"
                },
                "creationTimestamp": "2023-03-08T22:09:39Z",
                "generateName": "argo-cd-argocd-server-6d78494c47-",
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "6d78494c47"
                },
                "name": "argo-cd-argocd-server-6d78494c47-v98wr",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-cd-argocd-server-6d78494c47",
                        "uid": "fd1b17be-1498-4829-a9c3-f27507220e39"
                    }
                ],
                "resourceVersion": "7519",
                "uid": "2ff80382-8258-460c-9e2d-65e076008687"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "argocd-server",
                            "--staticassets",
                            "/shared/app",
                            "--repo-server",
                            "argo-cd-argocd-repo-server:8081",
                            "--dex-server",
                            "http://argo-cd-argocd-dex-server:5556",
                            "--logformat",
                            "text",
                            "--loglevel",
                            "info",
                            "--redis",
                            "argo-cd-argocd-redis:6379"
                        ],
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "server",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "server",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/app/config/ssh",
                                "name": "ssh-known-hosts"
                            },
                            {
                                "mountPath": "/app/config/tls",
                                "name": "tls-certs"
                            },
                            {
                                "mountPath": "/app/config/server/tls",
                                "name": "argocd-repo-server-tls"
                            },
                            {
                                "mountPath": "/home/argocd",
                                "name": "plugins-home"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kwmbd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argocd-server",
                "serviceAccountName": "argocd-server",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-ssh-known-hosts-cm"
                        },
                        "name": "ssh-known-hosts"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "argocd-tls-certs-cm"
                        },
                        "name": "tls-certs"
                    },
                    {
                        "name": "argocd-repo-server-tls",
                        "secret": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tls.crt",
                                    "path": "tls.crt"
                                },
                                {
                                    "key": "tls.key",
                                    "path": "tls.key"
                                },
                                {
                                    "key": "ca.crt",
                                    "path": "ca.crt"
                                }
                            ],
                            "optional": true,
                            "secretName": "argocd-repo-server-tls"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "plugins-home"
                    },
                    {
                        "name": "kube-api-access-kwmbd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://735189eaf0f04e45c3481d42c39317c0fbd8573b0aea3ce472ff64a55c9d1e18",
                        "image": "quay.io/argoproj/argocd:v2.3.4",
                        "imageID": "quay.io/argoproj/argocd@sha256:85d55980e70f8f7073e4ce529a7bbcf6d55e51f8a7fc4b45d698f0a7ffef0fea",
                        "lastState": {},
                        "name": "server",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:09:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.229",
                "podIPs": [
                    {
                        "ip": "10.1.235.229"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:09:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "27195689c89794e4905c9ea7fd9f042842fc72d8f5927e00abb55053ce535b70",
                    "cni.projectcalico.org/podIP": "10.1.235.212/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.212/32"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generateName": "metrics-server-6f754f88d-",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "6f754f88d"
                },
                "name": "metrics-server-6f754f88d-q7tv6",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "metrics-server-6f754f88d",
                        "uid": "cb1ccbc1-f4b1-4270-a2b8-e049ff9ee673"
                    }
                ],
                "resourceVersion": "7527",
                "uid": "4bf22648-cef6-40cb-bd75-c2302227ddd5"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--cert-dir=/tmp",
                            "--secure-port=4443",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--kubelet-use-node-status-port",
                            "--metric-resolution=15s",
                            "--kubelet-insecure-tls"
                        ],
                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.5.2",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/livez",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "metrics-server",
                        "ports": [
                            {
                                "containerPort": 4443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": "https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "200Mi"
                            }
                        },
                        "securityContext": {
                            "readOnlyRootFilesystem": true,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7bq4v",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "metrics-server",
                "serviceAccountName": "metrics-server",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "tmp-dir"
                    },
                    {
                        "name": "kube-api-access-7bq4v",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:05Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:01:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://51ce2d01321334c11655c092b429f85557dcf3a7a3f68114a0d0bd7482a2307f",
                        "image": "registry.k8s.io/metrics-server/metrics-server:v0.5.2",
                        "imageID": "registry.k8s.io/metrics-server/metrics-server@sha256:6385aec64bb97040a5e692947107b81e178555c7a5b71caa90d733e4130efc10",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://ec7ba009e1f099709a607f06176b0fdcd1769f65cb0f483e840d415819f68a6d",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:04:56Z",
                                "reason": "Unknown",
                                "startedAt": "2023-03-08T22:01:22Z"
                            }
                        },
                        "name": "metrics-server",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:05:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.212",
                "podIPs": [
                    {
                        "ip": "10.1.235.212"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:01:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "0805ea9a7076420984d7ac714d296ee038877c8bcb31e08bb2a882f8661aefd8",
                    "cni.projectcalico.org/podIP": "",
                    "cni.projectcalico.org/podIPs": ""
                },
                "creationTimestamp": "2023-03-08T22:22:52Z",
                "generateName": "nvidia-device-plugin-validator-",
                "labels": {
                    "app": "nvidia-device-plugin-validator"
                },
                "name": "nvidia-device-plugin-validator-kdvgw",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "7528",
                "uid": "fdb76d6d-1223-4d79-bedc-d395838e4384"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "echo device-plugin workload validation is successful"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "nvidia-device-plugin-validator",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8pv2x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "vectorAdd"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "plugin-validation",
                        "resources": {
                            "limits": {
                                "nvidia.com/gpu": "1"
                            },
                            "requests": {
                                "nvidia.com/gpu": "1"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8pv2x",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-operator-validator",
                "serviceAccountName": "nvidia-operator-validator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-8pv2x",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:53Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:52Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:52Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:52Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://fdaa9010632f57ce168203a7dcaee4c2ba44be70418d7d7d16797dbf7f26bee7",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "nvidia-device-plugin-validator",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://fdaa9010632f57ce168203a7dcaee4c2ba44be70418d7d7d16797dbf7f26bee7",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:22:54Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:22:54Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://149c8346a68baeecdfba4e3595d14ade41838309d20b735378eaf8547c26f80b",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "plugin-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://149c8346a68baeecdfba4e3595d14ade41838309d20b735378eaf8547c26f80b",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:22:53Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:22:53Z"
                            }
                        }
                    }
                ],
                "phase": "Succeeded",
                "podIP": "10.1.235.252",
                "podIPs": [
                    {
                        "ip": "10.1.235.252"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:22:52Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "0f1cd4722ac0f0a178dba78afafcb9ecc77a66c6b64893cf8aa07a7133ae8e24",
                    "cni.projectcalico.org/podIP": "10.1.235.222/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.222/32",
                    "kubectl.kubernetes.io/default-container": "prometheus"
                },
                "creationTimestamp": "2023-03-08T22:06:12Z",
                "generateName": "prometheus-kube-prom-stack-kube-prome-prometheus-",
                "labels": {
                    "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-prometheus",
                    "app.kubernetes.io/managed-by": "prometheus-operator",
                    "app.kubernetes.io/name": "prometheus",
                    "app.kubernetes.io/version": "2.42.0",
                    "controller-revision-hash": "prometheus-kube-prom-stack-kube-prome-prometheus-5cf8688487",
                    "operator.prometheus.io/name": "kube-prom-stack-kube-prome-prometheus",
                    "operator.prometheus.io/shard": "0",
                    "prometheus": "kube-prom-stack-kube-prome-prometheus",
                    "statefulset.kubernetes.io/pod-name": "prometheus-kube-prom-stack-kube-prome-prometheus-0"
                },
                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-0",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus",
                        "uid": "2d0456f4-7ee2-46b7-a11b-10c53edadc0f"
                    }
                ],
                "resourceVersion": "7530",
                "uid": "0166bf80-e206-4e85-8468-d52ad44dcba2"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "--web.console.templates=/etc/prometheus/consoles",
                            "--web.console.libraries=/etc/prometheus/console_libraries",
                            "--storage.tsdb.retention.time=10d",
                            "--config.file=/etc/prometheus/config_out/prometheus.env.yaml",
                            "--storage.tsdb.path=/prometheus",
                            "--web.enable-lifecycle",
                            "--web.external-url=http://kube-prom-stack-kube-prome-prometheus.observability:9090",
                            "--web.route-prefix=/",
                            "--storage.tsdb.wal-compression",
                            "--web.config.file=/etc/prometheus/web_config/web-config.yaml"
                        ],
                        "image": "quay.io/prometheus/prometheus:v2.42.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 6,
                            "httpGet": {
                                "path": "/-/healthy",
                                "port": "http-web",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "name": "prometheus",
                        "ports": [
                            {
                                "containerPort": 9090,
                                "name": "http-web",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/-/ready",
                                "port": "http-web",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "startupProbe": {
                            "failureThreshold": 60,
                            "httpGet": {
                                "path": "/-/ready",
                                "port": "http-web",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 15,
                            "successThreshold": 1,
                            "timeoutSeconds": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus/config_out",
                                "name": "config-out",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/prometheus/certs",
                                "name": "tls-assets",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/prometheus",
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-db"
                            },
                            {
                                "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                            },
                            {
                                "mountPath": "/etc/prometheus/web_config/web-config.yaml",
                                "name": "web-config",
                                "readOnly": true,
                                "subPath": "web-config.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-85jgm",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--listen-address=:8080",
                            "--reload-url=http://127.0.0.1:9090/-/reload",
                            "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                            "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                            "--watched-dir=/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                        ],
                        "command": [
                            "/bin/prometheus-config-reloader"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "SHARD",
                                "value": "0"
                            }
                        ],
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "config-reloader",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "reloader-web",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus/config",
                                "name": "config"
                            },
                            {
                                "mountPath": "/etc/prometheus/config_out",
                                "name": "config-out"
                            },
                            {
                                "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-85jgm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "prometheus-kube-prom-stack-kube-prome-prometheus-0",
                "initContainers": [
                    {
                        "args": [
                            "--watch-interval=0",
                            "--listen-address=:8080",
                            "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                            "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                            "--watched-dir=/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                        ],
                        "command": [
                            "/bin/prometheus-config-reloader"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "SHARD",
                                "value": "0"
                            }
                        ],
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "init-config-reloader",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "reloader-web",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "200m",
                                "memory": "50Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "FallbackToLogsOnError",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus/config",
                                "name": "config"
                            },
                            {
                                "mountPath": "/etc/prometheus/config_out",
                                "name": "config-out"
                            },
                            {
                                "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-85jgm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 2000,
                    "runAsGroup": 2000,
                    "runAsNonRoot": true,
                    "runAsUser": 1000
                },
                "serviceAccount": "kube-prom-stack-kube-prome-prometheus",
                "serviceAccountName": "kube-prom-stack-kube-prome-prometheus",
                "subdomain": "prometheus-operated",
                "terminationGracePeriodSeconds": 600,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "prometheus-kube-prom-stack-kube-prome-prometheus"
                        }
                    },
                    {
                        "name": "tls-assets",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "secret": {
                                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-tls-assets-0"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "config-out"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                        },
                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                    },
                    {
                        "name": "web-config",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "prometheus-kube-prom-stack-kube-prome-prometheus-web-config"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-db"
                    },
                    {
                        "name": "kube-api-access-85jgm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:41Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://10209ad80285e2e8183a0e4d42ec629143856bddd27b0b99f992fd8fec5ac523",
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:3f976422884ec7744f69084da7736927eb634914a0c035d5a865cf6a6b8eb1b0",
                        "lastState": {},
                        "name": "config-reloader",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:49Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://3c65ee5ee3c4c6a02615ee6b0663708f97b913a45789661dc45639b7c216604d",
                        "image": "quay.io/prometheus/prometheus:v2.42.0",
                        "imageID": "quay.io/prometheus/prometheus@sha256:d2ab0a27783fd4ad96a8853e2847b99a0be0043687b8a5d1ebfb2dd3fa4fd1b8",
                        "lastState": {},
                        "name": "prometheus",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:06:49Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://410100b11ceee2c94b9e71c51d5c66dc23b681e80d6fcdf0bc985354b2a67c70",
                        "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                        "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:3f976422884ec7744f69084da7736927eb634914a0c035d5a865cf6a6b8eb1b0",
                        "lastState": {},
                        "name": "init-config-reloader",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://410100b11ceee2c94b9e71c51d5c66dc23b681e80d6fcdf0bc985354b2a67c70",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:06:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:06:41Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.222",
                "podIPs": [
                    {
                        "ip": "10.1.235.222"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:06:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:18:22Z",
                "generateName": "openebs-cstor-csi-node-",
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "openebs-cstor-csi-node",
                    "controller-revision-hash": "7df6d67b49",
                    "heritage": "Helm",
                    "name": "openebs-cstor-csi-node",
                    "openebs.io/component-name": "openebs-cstor-csi-node",
                    "openebs.io/version": "3.3.0",
                    "pod-template-generation": "1",
                    "release": "openebs"
                },
                "name": "openebs-cstor-csi-node-vqdlh",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "openebs-cstor-csi-node",
                        "uid": "1cce3d08-7ed6-4f26-97b8-c6714747daff"
                    }
                ],
                "resourceVersion": "7532",
                "uid": "2c34c0e4-98f8-43cc-bfc7-e7e948978323"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--v=5",
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
                        ],
                        "env": [
                            {
                                "name": "ADDRESS",
                                "value": "/plugin/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/snap/microk8s/common/var/lib/kubelet/plugins/cstor.csi.openebs.io/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "NODE_DRIVER",
                                "value": "openebs-cstor-csi"
                            }
                        ],
                        "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "rm -rf /registration/cstor.csi.openebs.io /registration/cstor.csi.openebs.io-reg.sock"
                                    ]
                                }
                            }
                        },
                        "name": "csi-node-driver-registrar",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/plugin",
                                "name": "plugin-dir"
                            },
                            {
                                "mountPath": "/registration",
                                "name": "registration-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2v4gk",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--nodeid=$(OPENEBS_NODE_ID)",
                            "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                            "--url=$(OPENEBS_CSI_API_URL)",
                            "--plugin=$(OPENEBS_NODE_DRIVER)"
                        ],
                        "env": [
                            {
                                "name": "OPENEBS_NODE_ID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPENEBS_CSI_ENDPOINT",
                                "value": "unix:///plugin/csi.sock"
                            },
                            {
                                "name": "OPENEBS_NODE_DRIVER",
                                "value": "node"
                            },
                            {
                                "name": "OPENEBS_CSI_API_URL",
                                "value": "https://openebs.io"
                            },
                            {
                                "name": "OPENEBS_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "REMOUNT",
                                "value": "true"
                            }
                        ],
                        "image": "openebs/cstor-csi-driver:3.3.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cstor-csi-plugin",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/plugin",
                                "name": "plugin-dir"
                            },
                            {
                                "mountPath": "/dev",
                                "name": "device-dir"
                            },
                            {
                                "mountPath": "/var/snap/microk8s/common/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional",
                                "name": "pods-mount-dir"
                            },
                            {
                                "mountPath": "/host",
                                "mountPropagation": "HostToContainer",
                                "name": "host-root"
                            },
                            {
                                "mountPath": "/sbin/iscsiadm",
                                "name": "chroot-iscsiadm",
                                "subPath": "iscsiadm"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2v4gk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 900001000,
                "priorityClassName": "openebs-cstor-csi-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "openebs-cstor-csi-node-sa",
                "serviceAccountName": "openebs-cstor-csi-node-sa",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        },
                        "name": "device-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "registration-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins/cstor.csi.openebs.io/",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "plugin-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/snap/microk8s/common/var/lib/kubelet/",
                            "type": "Directory"
                        },
                        "name": "pods-mount-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 365,
                            "name": "openebs-cstor-csi-iscsiadm"
                        },
                        "name": "chroot-iscsiadm"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": "Directory"
                        },
                        "name": "host-root"
                    },
                    {
                        "name": "kube-api-access-2v4gk",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:22:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:18:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://456ef91083aff5709b847133d7cf535e3a81edc81cb125c4530d2afc10bc77b8",
                        "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                        "imageID": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:f9bcee63734b7b01555ee8fc8fb01ac2922478b2c8934bf8d468dd2916edc405",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://30b9619d36f73905b4f6c39599e65f363779f9911191bc6d4cc2c287aa753661",
                                "exitCode": 1,
                                "finishedAt": "2023-03-08T22:22:52Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:18:48Z"
                            }
                        },
                        "name": "csi-node-driver-registrar",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:22:52Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://42f1db14b75a0da979225009ba88fadf5d339d80b5a0182d05f2aa5bdb39ae48",
                        "image": "docker.io/openebs/cstor-csi-driver:3.3.0",
                        "imageID": "docker.io/openebs/cstor-csi-driver@sha256:7a0736cfe516bac5e280e5129b89d4f13e203822aed4febf64ff7f252f948e19",
                        "lastState": {},
                        "name": "cstor-csi-plugin",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:18:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "192.168.1.55",
                "podIPs": [
                    {
                        "ip": "192.168.1.55"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:18:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "045758aa91ca5f3d071e2035ad0017e97c054c325aa087c38366e627422198aa",
                    "cni.projectcalico.org/podIP": "10.1.235.242/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.242/32"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generateName": "nvidia-operator-validator-",
                "labels": {
                    "app": "nvidia-operator-validator",
                    "app.kubernetes.io/part-of": "gpu-operator",
                    "controller-revision-hash": "64ddcb6bf9",
                    "pod-template-generation": "1"
                },
                "name": "nvidia-operator-validator-kcqpj",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "nvidia-operator-validator",
                        "uid": "e7218198-7918-4fa4-88a0-ec05f47c3a9e"
                    }
                ],
                "resourceVersion": "7556",
                "uid": "4f87bbd8-d409-4c48-82ef-ece675fa3605"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "k8s-master"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "echo all validations are successful; sleep infinity"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "rm -f /run/nvidia/validations/*-ready"
                                    ]
                                }
                            }
                        },
                        "name": "nvidia-operator-validator",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "args": [
                            "nvidia-validator"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "WITH_WAIT",
                                "value": "true"
                            },
                            {
                                "name": "COMPONENT",
                                "value": "driver"
                            }
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "driver-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true,
                            "seLinuxOptions": {
                                "level": "s0"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/host",
                                "mountPropagation": "HostToContainer",
                                "name": "host-root",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/run/nvidia/driver",
                                "mountPropagation": "HostToContainer",
                                "name": "driver-install-path"
                            },
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbq",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "nvidia-validator"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "WITH_WAIT",
                                "value": "false"
                            },
                            {
                                "name": "COMPONENT",
                                "value": "toolkit"
                            }
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "toolkit-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbq",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "nvidia-validator"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "WITH_WAIT",
                                "value": "false"
                            },
                            {
                                "name": "COMPONENT",
                                "value": "cuda"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "VALIDATOR_IMAGE",
                                "value": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0"
                            },
                            {
                                "name": "VALIDATOR_IMAGE_PULL_POLICY",
                                "value": "IfNotPresent"
                            },
                            {
                                "name": "VALIDATOR_RUNTIME_CLASS",
                                "value": "nvidia"
                            }
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cuda-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbq",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "nvidia-validator"
                        ],
                        "command": [
                            "sh",
                            "-c"
                        ],
                        "env": [
                            {
                                "name": "COMPONENT",
                                "value": "plugin"
                            },
                            {
                                "name": "WITH_WAIT",
                                "value": "false"
                            },
                            {
                                "name": "WITH_WORKLOAD",
                                "value": "true"
                            },
                            {
                                "name": "MIG_STRATEGY",
                                "value": "single"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "VALIDATOR_IMAGE",
                                "value": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0"
                            },
                            {
                                "name": "VALIDATOR_IMAGE_PULL_POLICY",
                                "value": "IfNotPresent"
                            },
                            {
                                "name": "VALIDATOR_RUNTIME_CLASS",
                                "value": "nvidia"
                            }
                        ],
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "plugin-validation",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/run/nvidia/validations",
                                "mountPropagation": "Bidirectional",
                                "name": "run-nvidia-validations"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbq",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "nvidia.com/gpu.deploy.operator-validator": "true"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "runtimeClassName": "nvidia",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "nvidia-operator-validator",
                "serviceAccountName": "nvidia-operator-validator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoSchedule",
                        "key": "nvidia.com/gpu",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/run/nvidia/validations",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "run-nvidia-validations"
                    },
                    {
                        "hostPath": {
                            "path": "/run/nvidia/driver",
                            "type": ""
                        },
                        "name": "driver-install-path"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": ""
                        },
                        "name": "host-root"
                    },
                    {
                        "name": "kube-api-access-nwjbq",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:10:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://58a7cda5345da85e754f9f1009a49e71ed3f678f8bcde35de1de0dc41eabc1b5",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "nvidia-operator-validator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:23:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://14444fd3425d6d0d6726b312acc8792694a2fbd96bc903db203495068cf50f23",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "driver-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://14444fd3425d6d0d6726b312acc8792694a2fbd96bc903db203495068cf50f23",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:12Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:12Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://f8b8f405a07dcf66170724073b237fd297b5ca06a79eb2377cbfc332c0377654",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "toolkit-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://f8b8f405a07dcf66170724073b237fd297b5ca06a79eb2377cbfc332c0377654",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:12Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:12Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://5596ced04bee177c839ea2450e6001808aa7fcf63f4787bdc3b194f4fe8df915",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "cuda-validation",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5596ced04bee177c839ea2450e6001808aa7fcf63f4787bdc3b194f4fe8df915",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:11:19Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:11:13Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://a05cd4c842141a2444942ba09b07a711d27c14f8d2f4a75c83ef6bffbe206779",
                        "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                        "imageID": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:6fe4200960b2b49d6dac1c91e596f61dacb6b3dcff878c84eb74c5136fedd5b6",
                        "lastState": {},
                        "name": "plugin-validation",
                        "ready": true,
                        "restartCount": 4,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://a05cd4c842141a2444942ba09b07a711d27c14f8d2f4a75c83ef6bffbe206779",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:23:12Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:22:47Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.242",
                "podIPs": [
                    {
                        "ip": "10.1.235.242"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:10:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "c7c085da4e5bc0fd8eb3eb09d10dcded42ed117a857927f565630f0b4f5138e1",
                    "cni.projectcalico.org/podIP": "10.1.235.254/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.254/32"
                },
                "creationTimestamp": "2023-03-08T22:23:33Z",
                "generateName": "portainer-c875b56d4-",
                "labels": {
                    "app.kubernetes.io/instance": "portainer",
                    "app.kubernetes.io/name": "portainer",
                    "pod-template-hash": "c875b56d4"
                },
                "name": "portainer-c875b56d4-p8zvn",
                "namespace": "portainer",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "portainer-c875b56d4",
                        "uid": "d62a506d-f56e-4bc8-8dae-1f50144c4f97"
                    }
                ],
                "resourceVersion": "7819",
                "uid": "15cf5329-191a-426d-86c3-56ab063f9fbb"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--tunnel-port=30776"
                        ],
                        "image": "portainer/portainer-ce:2.17.1",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 9443,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "portainer",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9443,
                                "name": "https",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8000,
                                "name": "tcp-edge",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 9443,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/data",
                                "name": "data"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-n74bw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "portainer-sa-clusteradmin",
                "serviceAccountName": "portainer-sa-clusteradmin",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "data",
                        "persistentVolumeClaim": {
                            "claimName": "portainer"
                        }
                    },
                    {
                        "name": "kube-api-access-n74bw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:46Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:46Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:23:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5fe60aa59e212bf8562a8ca379bf9be99b31a7377c31667436403a4c8e943d9f",
                        "image": "docker.io/portainer/portainer-ce:2.17.1",
                        "imageID": "docker.io/portainer/portainer-ce@sha256:9fa1ec78b4e29d83593cf9720674b72829c9cdc0db7083a962bc30e64e27f64e",
                        "lastState": {},
                        "name": "portainer",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:23:44Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.254",
                "podIPs": [
                    {
                        "ip": "10.1.235.254"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:23:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "383e91046848b707e030d9dea2d3de5e7ad75827a177cea064879dd5c590273e",
                    "cni.projectcalico.org/podIP": "10.1.235.195/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.195/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b"
                },
                "creationTimestamp": "2023-03-08T22:24:06Z",
                "generateName": "controller-",
                "labels": {
                    "app.kubernetes.io/name": "controller",
                    "controller-revision-hash": "controller-5c48d7455d",
                    "model.juju.is/disable-webhook": "true",
                    "statefulset.kubernetes.io/pod-name": "controller-0"
                },
                "name": "controller-0",
                "namespace": "controller-microk8s-localhost",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "controller",
                        "uid": "54a78c4a-3fde-4e04-8f0d-e68d35de2d19"
                    }
                ],
                "resourceVersion": "8314",
                "uid": "7095fb65-d9dd-4c67-bad7-7f0c8abc1eb0"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "printf 'args=\"--dbpath=/var/lib/juju/db --sslPEMKeyFile=/var/lib/juju/server.pem --sslPEMKeyPassword=ignored --sslMode=requireSSL --port=37017 --journal --replSet=juju --quiet --oplogSize=1024 --auth --keyFile=/var/lib/juju/shared-secret --storageEngine=wiredTiger --bind_ip_all\"\\nipv6Disabled=$(sysctl net.ipv6.conf.all.disable_ipv6 -n)\\nif [ $ipv6Disabled -eq 0 ]; then\\n  args=\"${args} --ipv6\"\\nfi\\nexec mongod ${args}\\n'\u003e/root/mongo.sh \u0026\u0026 chmod a+x /root/mongo.sh \u0026\u0026 /root/mongo.sh"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/juju-db:4.4",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "mongo",
                                    "--port=37017",
                                    "--ssl",
                                    "--sslAllowInvalidHostnames",
                                    "--sslAllowInvalidCertificates",
                                    "--sslPEMKeyFile=/var/lib/juju/server.pem",
                                    "--eval",
                                    "db.adminCommand('ping')"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "mongodb",
                        "ports": [
                            {
                                "containerPort": 37017,
                                "name": "mongodb",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "mongo",
                                    "--port=37017",
                                    "--ssl",
                                    "--sslAllowInvalidHostnames",
                                    "--sslAllowInvalidCertificates",
                                    "--sslPEMKeyFile=/var/lib/juju/server.pem",
                                    "--eval",
                                    "db.adminCommand('ping')"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "1536Mi"
                            },
                            "requests": {
                                "memory": "1536Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "storage"
                            },
                            {
                                "mountPath": "/var/lib/juju/db",
                                "name": "storage",
                                "subPath": "db"
                            },
                            {
                                "mountPath": "/var/lib/juju/template-server.pem",
                                "name": "controller-server-pem",
                                "readOnly": true,
                                "subPath": "template-server.pem"
                            },
                            {
                                "mountPath": "/var/lib/juju/shared-secret",
                                "name": "controller-shared-secret",
                                "readOnly": true,
                                "subPath": "shared-secret"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-pv2n8",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\necho Installing Dashboard...\nexport gui='/var/lib/juju/gui'\nmkdir -p $gui\ncurl -sSf -o $gui/gui.tar.bz2 --retry 10 --noproxy 127.0.0.1,localhost,::1 'https://streams.canonical.com/juju/gui/gui/0.8.1/juju-dashboard-0.8.1.tar.bz2' || echo Unable to retrieve Juju Dashboard\n[ -f $gui/gui.tar.bz2 ] \u0026\u0026 sha256sum $gui/gui.tar.bz2 \u003e $gui/jujugui.sha256\n[ -f $gui/jujugui.sha256 ] \u0026\u0026 (grep '925d99bcc83bb9accc88df729d12e5c83a07ece73a94f936fbbae959184ac12d' $gui/jujugui.sha256 \u0026\u0026 printf %s '{\"version\":\"0.8.1\",\"url\":\"https://streams.canonical.com/juju/gui/gui/0.8.1/juju-dashboard-0.8.1.tar.bz2\",\"sha256\":\"925d99bcc83bb9accc88df729d12e5c83a07ece73a94f936fbbae959184ac12d\",\"size\":1799966}' \u003e $gui/downloaded-gui.txt || echo Juju GUI checksum mismatch)\ntest -e $JUJU_DATA_DIR/agents/controller-0/agent.conf || $JUJU_TOOLS_DIR/jujud bootstrap-state $JUJU_DATA_DIR/bootstrap-params --data-dir $JUJU_DATA_DIR --show-log --timeout 20m0s\n$JUJU_TOOLS_DIR/jujud machine --data-dir $JUJU_DATA_DIR --controller-id 0 --log-to-stderr --show-log\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "api-server",
                        "resources": {
                            "limits": {
                                "memory": "1536Mi"
                            },
                            "requests": {
                                "memory": "1536Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "storage"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/controller-0/template-agent.conf",
                                "name": "controller-agent-conf",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/template-server.pem",
                                "name": "controller-server-pem",
                                "readOnly": true,
                                "subPath": "template-server.pem"
                            },
                            {
                                "mountPath": "/var/lib/juju/shared-secret",
                                "name": "controller-shared-secret",
                                "readOnly": true,
                                "subPath": "shared-secret"
                            },
                            {
                                "mountPath": "/var/lib/juju/bootstrap-params",
                                "name": "controller-bootstrap-params",
                                "readOnly": true,
                                "subPath": "bootstrap-params"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-pv2n8",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "controller-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "controller",
                "serviceAccountName": "controller",
                "subdomain": "controller-service",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "storage",
                        "persistentVolumeClaim": {
                            "claimName": "storage-controller-0"
                        }
                    },
                    {
                        "name": "controller-server-pem",
                        "secret": {
                            "defaultMode": 256,
                            "items": [
                                {
                                    "key": "server.pem",
                                    "path": "template-server.pem"
                                }
                            ],
                            "secretName": "controller-secret"
                        }
                    },
                    {
                        "name": "controller-shared-secret",
                        "secret": {
                            "defaultMode": 256,
                            "items": [
                                {
                                    "key": "shared-secret",
                                    "path": "shared-secret"
                                }
                            ],
                            "secretName": "controller-secret"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "agent.conf",
                                    "path": "template-agent.conf"
                                }
                            ],
                            "name": "controller-configmap"
                        },
                        "name": "controller-agent-conf"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "bootstrap-params",
                                    "path": "bootstrap-params"
                                }
                            ],
                            "name": "controller-configmap"
                        },
                        "name": "controller-bootstrap-params"
                    },
                    {
                        "name": "kube-api-access-pv2n8",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:24:12Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:24:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:24:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:24:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://c0d09c628ad06397595a524e0e1021ee41f42c93680d5dc874693f1fb1533912",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "api-server",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:24:30Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://40d858de81e49680cefa713152a9f614c4cfce3f806261400c93823f5a37ce7c",
                        "image": "docker.io/jujusolutions/juju-db:4.4",
                        "imageID": "docker.io/jujusolutions/juju-db@sha256:a1781835937989fd233f2fd7407211e91ec46752ae68c28b6358d7d5e1e6aa91",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://590f5b8183c37667fec6972ef829e0370cd5176747a5505a81ed9146796994b5",
                                "exitCode": 1,
                                "finishedAt": "2023-03-08T22:24:31Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:24:31Z"
                            }
                        },
                        "name": "mongodb",
                        "ready": true,
                        "restartCount": 2,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:24:47Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.195",
                "podIPs": [
                    {
                        "ip": "10.1.235.195"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:24:12Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "f362d61aa200bc5a47afdb3fdb4629ffd6849c0c1f6843ac65d49eaface3b892",
                    "cni.projectcalico.org/podIP": "10.1.235.205/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.205/32"
                },
                "creationTimestamp": "2023-03-08T22:25:04Z",
                "generateName": "modeloperator-785666f8dc-",
                "labels": {
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model",
                    "pod-template-hash": "785666f8dc"
                },
                "name": "modeloperator-785666f8dc-hv8pd",
                "namespace": "controller-microk8s-localhost",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "modeloperator-785666f8dc",
                        "uid": "ceb5d040-2067-4638-8d01-795325b17605"
                    }
                ],
                "resourceVersion": "8413",
                "uid": "49164d6e-23ee-419e-84fa-61e1f2345997"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=fafa301c-5122-40d8-8856-115417cb6aba\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "HTTP_PORT",
                                "value": "17071"
                            },
                            {
                                "name": "SERVICE_NAME",
                                "value": "modeloperator"
                            },
                            {
                                "name": "SERVICE_NAMESPACE",
                                "value": "controller-microk8s-localhost"
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "ports": [
                            {
                                "containerPort": 17071,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/model-fafa301c-5122-40d8-8856-115417cb6aba/template-agent.conf",
                                "name": "modeloperator",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k5ngx",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "modeloperator",
                "serviceAccountName": "modeloperator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "modeloperator-agent.conf",
                                    "path": "template-agent.conf"
                                }
                            ],
                            "name": "modeloperator"
                        },
                        "name": "modeloperator"
                    },
                    {
                        "name": "kube-api-access-k5ngx",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:25:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:25:05Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:25:05Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:25:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://98f360c167a900f18b14e6e91e3bb1d2d79770951c647a48a640d4e409cf8c07",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:25:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.205",
                "podIPs": [
                    {
                        "ip": "10.1.235.205"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:25:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "5f02bb497847023a5649c85480c23c1f64244be807e17feed7d25d23b51d2b36",
                    "cni.projectcalico.org/podIP": "10.1.235.194/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.194/32"
                },
                "creationTimestamp": "2023-03-08T22:33:37Z",
                "generateName": "modeloperator-5bfd6f98cc-",
                "labels": {
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model",
                    "pod-template-hash": "5bfd6f98cc"
                },
                "name": "modeloperator-5bfd6f98cc-2twr5",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "modeloperator-5bfd6f98cc",
                        "uid": "7dadb881-c2b7-43db-bb48-5c22e4a8559e"
                    }
                ],
                "resourceVersion": "10972",
                "uid": "87fef436-db2a-4f33-a34f-dbe3e926292a"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=ac60be0f-c489-48e7-85ca-def37f3f6c70\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "HTTP_PORT",
                                "value": "17071"
                            },
                            {
                                "name": "SERVICE_NAME",
                                "value": "modeloperator"
                            },
                            {
                                "name": "SERVICE_NAMESPACE",
                                "value": "kubeflow"
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "ports": [
                            {
                                "containerPort": 17071,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/model-ac60be0f-c489-48e7-85ca-def37f3f6c70/template-agent.conf",
                                "name": "modeloperator",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-54mtm",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "modeloperator",
                "serviceAccountName": "modeloperator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "modeloperator-agent.conf",
                                    "path": "template-agent.conf"
                                }
                            ],
                            "name": "modeloperator"
                        },
                        "name": "modeloperator"
                    },
                    {
                        "name": "kube-api-access-54mtm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:33:37Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:33:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:33:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:33:37Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://a849d3fc4a04c76168307c205f8272c9b5f9d54f78be7b8c8245b051f3069607",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:33:38Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.194",
                "podIPs": [
                    {
                        "ip": "10.1.235.194"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:33:37Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "4fce3afa42e19c0ffb17bd2129c1846105830577c3949c35f243fbf34cfc5b42",
                    "cni.projectcalico.org/podIP": "10.1.235.203/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.203/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:35:24Z",
                "generateName": "admission-webhook-operator-",
                "labels": {
                    "controller-revision-hash": "admission-webhook-operator-7d8ccfb65d",
                    "operator.juju.is/name": "admission-webhook",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "admission-webhook-operator-0"
                },
                "name": "admission-webhook-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "admission-webhook-operator",
                        "uid": "26367df5-7622-47e8-a5e5-2bfff6ea019c"
                    }
                ],
                "resourceVersion": "11504",
                "uid": "2470d662-5a8d-4b5e-8a3b-747766eb1c21"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=admission-webhook --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "admission-webhook"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.167"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-admission-webhook/template-agent.conf",
                                "name": "admission-webhook-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-admission-webhook/operator.yaml",
                                "name": "admission-webhook-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-t67cg",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "admission-webhook-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "admission-webhook-operator",
                "serviceAccountName": "admission-webhook-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "admission-webhook-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "admission-webhook-operator-config"
                        },
                        "name": "admission-webhook-operator-config"
                    },
                    {
                        "name": "kube-api-access-t67cg",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:26Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:26Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://8927d2d6e5d7cb5c7e5af063db043568aaeb3c44862603fbeac4984082e7870e",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:35:25Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.203",
                "podIPs": [
                    {
                        "ip": "10.1.235.203"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:35:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "7a2f3c5e87927ba5fe63de023aa0ca8a50c3d3fe98b7ee6c02965a1547601ca9",
                    "cni.projectcalico.org/podIP": "10.1.235.193/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.193/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:35:29Z",
                "generateName": "argo-controller-operator-",
                "labels": {
                    "controller-revision-hash": "argo-controller-operator-545dd57989",
                    "operator.juju.is/name": "argo-controller",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "argo-controller-operator-0"
                },
                "name": "argo-controller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "argo-controller-operator",
                        "uid": "560e1391-29f0-4c41-99b2-ba531d7f8fe5"
                    }
                ],
                "resourceVersion": "11551",
                "uid": "033e1532-833b-4b48-b564-4b152921b094"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=argo-controller --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "argo-controller"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.164"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-argo-controller/template-agent.conf",
                                "name": "argo-controller-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-argo-controller/operator.yaml",
                                "name": "argo-controller-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c2kvq",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "argo-controller-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-controller-operator",
                "serviceAccountName": "argo-controller-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "argo-controller-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "argo-controller-operator-config"
                        },
                        "name": "argo-controller-operator-config"
                    },
                    {
                        "name": "kube-api-access-c2kvq",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:29Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:31Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:31Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://529477d5ba5bc471feefb83e3ba39473fed7ca2ed79b2038bdfe735765c7bd45",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:35:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.193",
                "podIPs": [
                    {
                        "ip": "10.1.235.193"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:35:29Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "5886c4c0cafc801ade8433d5e39b312af507e34e881cb9ef62162cd33bdda2a1",
                    "cni.projectcalico.org/podIP": "10.1.235.197/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.197/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:35:35Z",
                "generateName": "argo-server-operator-",
                "labels": {
                    "controller-revision-hash": "argo-server-operator-774b5b8c6c",
                    "operator.juju.is/name": "argo-server",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "argo-server-operator-0"
                },
                "name": "argo-server-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "argo-server-operator",
                        "uid": "a18de8b9-592a-467a-a271-4600435d81a7"
                    }
                ],
                "resourceVersion": "11607",
                "uid": "a97677ef-57bb-4acf-b1a8-385c735ace2a"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=argo-server --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "argo-server"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.119"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-argo-server/template-agent.conf",
                                "name": "argo-server-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-argo-server/operator.yaml",
                                "name": "argo-server-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-662zg",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "argo-server-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-server-operator",
                "serviceAccountName": "argo-server-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "argo-server-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "argo-server-operator-config"
                        },
                        "name": "argo-server-operator-config"
                    },
                    {
                        "name": "kube-api-access-662zg",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:35Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:35Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://3ed3538ba81353bae8be7aa87cde0ec435997f6065e18a567e47f6d2b6578525",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:35:36Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.197",
                "podIPs": [
                    {
                        "ip": "10.1.235.197"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:35:35Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "a7ef3fea18361a70a3bc312e2b827a80952d683c0153d6fe8d4fd078a54fa86e",
                    "cni.projectcalico.org/podIP": "10.1.235.200/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.200/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:36:05Z",
                "generateName": "jupyter-controller-operator-",
                "labels": {
                    "controller-revision-hash": "jupyter-controller-operator-9b4db87c9",
                    "operator.juju.is/name": "jupyter-controller",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "jupyter-controller-operator-0"
                },
                "name": "jupyter-controller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "jupyter-controller-operator",
                        "uid": "172226ff-bf22-4996-ba07-72b0a3cf9cdb"
                    }
                ],
                "resourceVersion": "11892",
                "uid": "748c5a7f-33f0-4229-b4b1-829751888a8a"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=jupyter-controller --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "jupyter-controller"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.245"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-jupyter-controller/template-agent.conf",
                                "name": "jupyter-controller-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-jupyter-controller/operator.yaml",
                                "name": "jupyter-controller-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bvxwb",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "jupyter-controller-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "jupyter-controller-operator",
                "serviceAccountName": "jupyter-controller-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "jupyter-controller-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "jupyter-controller-operator-config"
                        },
                        "name": "jupyter-controller-operator-config"
                    },
                    {
                        "name": "kube-api-access-bvxwb",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:05Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:05Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://582c5f1a02c2da301c202202b731baaa604fc40030634a6b2c92867ed801b849",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:36:06Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.200",
                "podIPs": [
                    {
                        "ip": "10.1.235.200"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:05Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "d232b561acf94480b3c3beeb161501aa3d6a00d15aa82069b7ca8d08027fc1c3",
                    "cni.projectcalico.org/podIP": "10.1.235.196/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.196/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:36:25Z",
                "generateName": "jupyter-ui-operator-",
                "labels": {
                    "controller-revision-hash": "jupyter-ui-operator-7cc7c6d477",
                    "operator.juju.is/name": "jupyter-ui",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "jupyter-ui-operator-0"
                },
                "name": "jupyter-ui-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "jupyter-ui-operator",
                        "uid": "59d078dc-8cc2-4e49-9bd7-9c06e28b0b5b"
                    }
                ],
                "resourceVersion": "12083",
                "uid": "2bac1eb5-fcb7-470d-ab85-b2eae188ed8d"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=jupyter-ui --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "jupyter-ui"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.197"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-jupyter-ui/template-agent.conf",
                                "name": "jupyter-ui-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-jupyter-ui/operator.yaml",
                                "name": "jupyter-ui-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-k9scf",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "jupyter-ui-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "jupyter-ui-operator",
                "serviceAccountName": "jupyter-ui-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "jupyter-ui-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "jupyter-ui-operator-config"
                        },
                        "name": "jupyter-ui-operator-config"
                    },
                    {
                        "name": "kube-api-access-k9scf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:25Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:27Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:25Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5db5c602aa2a0a09c60d979614ab9f8ee7a55a99e9d025f38b1a1f4d921b0f36",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:36:26Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.196",
                "podIPs": [
                    {
                        "ip": "10.1.235.196"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:25Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "41dc596b23e891a17ffa6f86b8554ac3521d289198e6397d064c9d6d553300d2",
                    "cni.projectcalico.org/podIP": "10.1.235.204/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.204/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "istio-ingressgateway/0"
                },
                "creationTimestamp": "2023-03-08T22:35:51Z",
                "generateName": "istio-ingressgateway-",
                "labels": {
                    "app.kubernetes.io/name": "istio-ingressgateway",
                    "controller-revision-hash": "istio-ingressgateway-7c69f5bbb9",
                    "statefulset.kubernetes.io/pod-name": "istio-ingressgateway-0"
                },
                "name": "istio-ingressgateway-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "istio-ingressgateway",
                        "uid": "393154c5-de06-4c72-a05e-b0a38fb63dd8"
                    }
                ],
                "resourceVersion": "12179",
                "uid": "737024c7-7501-4d44-819a-33ce01b8eb11"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-tnpk7",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "istio-ingressgateway-0",
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "istio-ingressgateway-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-tnpk7",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-ingressgateway",
                "serviceAccountName": "istio-ingressgateway",
                "subdomain": "istio-ingressgateway-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-tnpk7",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:53Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:51Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://bf88b36441b2aa7ba93f8945775620136318efb0c250134e3e1b7e19bff82d1f",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:35:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://a87843d0837117d58cbb14d1f0e59fea94e10706f557af312e7a7b6dcb7a2ad6",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://a87843d0837117d58cbb14d1f0e59fea94e10706f557af312e7a7b6dcb7a2ad6",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:35:52Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:35:52Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.204",
                "podIPs": [
                    {
                        "ip": "10.1.235.204"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:35:51Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "de1354c9e87c156133caa38ff306ad6d6629e6dd18de984150725359bb4277d8",
                    "cni.projectcalico.org/podIP": "10.1.235.198/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.198/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "istio-pilot/0"
                },
                "creationTimestamp": "2023-03-08T22:36:04Z",
                "generateName": "istio-pilot-",
                "labels": {
                    "app.kubernetes.io/name": "istio-pilot",
                    "controller-revision-hash": "istio-pilot-b457f76d7",
                    "statefulset.kubernetes.io/pod-name": "istio-pilot-0"
                },
                "name": "istio-pilot-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "istio-pilot",
                        "uid": "7d708f2b-e9f1-47bb-94fb-1a85da49ea01"
                    }
                ],
                "resourceVersion": "12199",
                "uid": "ac25ec0e-7cb1-4ec3-b88b-1e00b1e1bd44"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7mwdz",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "istio-pilot-0",
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "istio-pilot-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7mwdz",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-pilot",
                "serviceAccountName": "istio-pilot",
                "subdomain": "istio-pilot-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-7mwdz",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:06Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:04Z",
                        "message": "containers with unready status: [charm]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:04Z",
                        "message": "containers with unready status: [charm]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://890334ba10f7dc2a9cf309e32a4661d59da517babf13f6241e4edc0d78f8151a",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": false,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:36:06Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://e1b9b847e657ac86709bafdde38725ec4e55131e9eee91b9dd3a931ca24bcf8d",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://e1b9b847e657ac86709bafdde38725ec4e55131e9eee91b9dd3a931ca24bcf8d",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:36:06Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:36:05Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.198",
                "podIPs": [
                    {
                        "ip": "10.1.235.198"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "64d8b0464fe9684e531da1624a82155984c5858b4c74b702e389c1fc1e86da66",
                    "cni.projectcalico.org/podIP": "10.1.235.243/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.243/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:36:47Z",
                "generateName": "katib-controller-operator-",
                "labels": {
                    "controller-revision-hash": "katib-controller-operator-85668d55fb",
                    "operator.juju.is/name": "katib-controller",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "katib-controller-operator-0"
                },
                "name": "katib-controller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "katib-controller-operator",
                        "uid": "67fca3e5-b4dd-4b04-a4a6-366c25ef3bb3"
                    }
                ],
                "resourceVersion": "12330",
                "uid": "a1ffe150-3e99-4b95-942a-e37aab060feb"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-controller --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "katib-controller"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.88"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-controller/template-agent.conf",
                                "name": "katib-controller-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-controller/operator.yaml",
                                "name": "katib-controller-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bf7fh",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "katib-controller-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-controller-operator",
                "serviceAccountName": "katib-controller-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "katib-controller-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "katib-controller-operator-config"
                        },
                        "name": "katib-controller-operator-config"
                    },
                    {
                        "name": "kube-api-access-bf7fh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:47Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:48Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:48Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://5d30f7a60a57abf2b02b9918dbd4349cfaa512b25fcc3fa7715747a35535890a",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:36:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.243",
                "podIPs": [
                    {
                        "ip": "10.1.235.243"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "3935abd6aea3f1766451d5ec9b7df31beae328b6cb4a4e45327bb0e2f1c0fcb7",
                    "cni.projectcalico.org/podIP": "10.1.235.199/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.199/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "dex-auth/0"
                },
                "creationTimestamp": "2023-03-08T22:35:40Z",
                "generateName": "dex-auth-",
                "labels": {
                    "app.kubernetes.io/name": "dex-auth",
                    "controller-revision-hash": "dex-auth-7474df4d64",
                    "statefulset.kubernetes.io/pod-name": "dex-auth-0"
                },
                "name": "dex-auth-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "dex-auth",
                        "uid": "0df7f280-13f8-486a-bc9d-f138d3fabf09"
                    }
                ],
                "resourceVersion": "12352",
                "uid": "30c27164-7774-4831-97a9-5fdf49368bbf"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES",
                                "value": "dex"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hlp4s",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    },
                    {
                        "args": [
                            "run",
                            "--create-dirs",
                            "--hold",
                            "--http",
                            ":38813",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAME",
                                "value": "dex"
                            },
                            {
                                "name": "PEBBLE_SOCKET",
                                "value": "/charm/container/pebble.socket"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/ifcdyx9vak68zhfu0neisg91lfpdfxz2qmx41/oci-image@sha256:6c3ff86f1f25bc0d9bb159b07e7b85d9892ea75662bdc258b89e1b8df5c74421",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38813,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "dex",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38813,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin/pebble",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin/pebble"
                            },
                            {
                                "mountPath": "/charm/container",
                                "name": "charm-data",
                                "subPath": "charm/containers/dex"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hlp4s",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "dex-auth-0",
                "imagePullSecrets": [
                    {
                        "name": "dex-auth-dex-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES",
                                "value": "dex"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "dex-auth-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hlp4s",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "dex-auth",
                "serviceAccountName": "dex-auth",
                "subdomain": "dex-auth-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-hlp4s",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:51Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:51Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:35:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://c771828e820dbd61d0e20197bee3ba4b6e84b21ecf880b29de8da15948f55afe",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:35:48Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://e656349b74ba42538d253a67cb3cffb87cb2657316e5a2a3f279aca23f027e6d",
                        "image": "sha256:19aa8c9029c016db0c965769809ed23877be3f9f8337914e34c81617abf8efa4",
                        "imageID": "registry.jujucharms.com/charm/ifcdyx9vak68zhfu0neisg91lfpdfxz2qmx41/oci-image@sha256:6c3ff86f1f25bc0d9bb159b07e7b85d9892ea75662bdc258b89e1b8df5c74421",
                        "lastState": {},
                        "name": "dex",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:36:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://b5a2eb58c07a754512d839f548624e584d1da9540b70abf693d61e5fd4d10ba4",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://b5a2eb58c07a754512d839f548624e584d1da9540b70abf693d61e5fd4d10ba4",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:35:42Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:35:41Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.199",
                "podIPs": [
                    {
                        "ip": "10.1.235.199"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:35:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "7ba0d9ccc69c672976ee4542e6c71e6c528b480d67dab9b89f54cb7ecb47abf7",
                    "cni.projectcalico.org/podIP": "10.1.235.255/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.255/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:37:04Z",
                "generateName": "katib-db-operator-",
                "labels": {
                    "controller-revision-hash": "katib-db-operator-595df67745",
                    "operator.juju.is/name": "katib-db",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "katib-db-operator-0"
                },
                "name": "katib-db-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "katib-db-operator",
                        "uid": "86412390-b392-4412-a629-8a0e06ba5e02"
                    }
                ],
                "resourceVersion": "12568",
                "uid": "e1d7b1b2-3c6d-4ab2-8560-891d2e6c551e"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-db --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "katib-db"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.58"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-db/template-agent.conf",
                                "name": "katib-db-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-db/operator.yaml",
                                "name": "katib-db-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents",
                                "name": "charm"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7d446",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "katib-db-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-db-operator",
                "serviceAccountName": "katib-db-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "charm",
                        "persistentVolumeClaim": {
                            "claimName": "charm-katib-db-operator-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "katib-db-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "katib-db-operator-config"
                        },
                        "name": "katib-db-operator-config"
                    },
                    {
                        "name": "kube-api-access-7d446",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:10Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:12Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:12Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:10Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://45760a8b34534dcac72c48581039cce93f8a7211f3626e8bf68ee0e758979f8d",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.255",
                "podIPs": [
                    {
                        "ip": "10.1.235.255"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:10Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "5145158978e94b69df9c59f95c1d5764e074935d1e4825f7919f1cde82a30405",
                    "cni.projectcalico.org/podIP": "10.1.235.223/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.223/32",
                    "prometheus.io/port": "15014",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2023-03-08T22:36:43Z",
                "generateName": "istiod-59877f896f-",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "59877f896f",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istiod-59877f896f-dxlp4",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istiod-59877f896f",
                        "uid": "3784a5fe-304f-4438-a22b-cd4aa0c3a8a5"
                    }
                ],
                "resourceVersion": "12899",
                "uid": "1270ff4e-7cd6-4d23-9307-aac027d7630c"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "discovery",
                            "--monitoringAddr=:15014",
                            "--log_output_level=default:info",
                            "--domain",
                            "cluster.local",
                            "--keepaliveMaxServerConnectionAge",
                            "30m"
                        ],
                        "env": [
                            {
                                "name": "REVISION",
                                "value": "default"
                            },
                            {
                                "name": "JWT_POLICY",
                                "value": "third-party-jwt"
                            },
                            {
                                "name": "PILOT_CERT_PROVIDER",
                                "value": "istiod"
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "KUBECONFIG",
                                "value": "/var/run/secrets/remote/config"
                            },
                            {
                                "name": "ENABLE_LEGACY_FSGROUP_INJECTION",
                                "value": "false"
                            },
                            {
                                "name": "PILOT_TRACE_SAMPLING",
                                "value": "1"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                "value": "true"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                "value": "true"
                            },
                            {
                                "name": "ISTIOD_ADDR",
                                "value": "istiod.kubeflow.svc:15012"
                            },
                            {
                                "name": "PILOT_ENABLE_ANALYSIS",
                                "value": "false"
                            },
                            {
                                "name": "CLUSTER_ID",
                                "value": "Kubernetes"
                            }
                        ],
                        "image": "docker.io/istio/pilot:1.11.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "discovery",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15010,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15017,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/tokens",
                                "name": "istio-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/istio-dns",
                                "name": "local-certs"
                            },
                            {
                                "mountPath": "/etc/cacerts",
                                "name": "cacerts",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/remote",
                                "name": "istio-kubeconfig",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-d4mhr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1337
                },
                "serviceAccount": "istiod",
                "serviceAccountName": "istiod",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "local-certs"
                    },
                    {
                        "name": "istio-token",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "audience": "istio-ca",
                                        "expirationSeconds": 43200,
                                        "path": "istio-token"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "cacerts",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "cacerts"
                        }
                    },
                    {
                        "name": "istio-kubeconfig",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-kubeconfig"
                        }
                    },
                    {
                        "name": "kube-api-access-d4mhr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:36Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:36Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://47ac2531a36e87054cd1e13c4086604fb06e33b9d5e84c380cb767bd89de57cc",
                        "image": "docker.io/istio/pilot:1.11.0",
                        "imageID": "docker.io/istio/pilot@sha256:27936f3756b242ab334b10c0427520409226c6fdaf1e3099e6741d75c6ae409d",
                        "lastState": {},
                        "name": "discovery",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:34Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.235.223",
                "podIPs": [
                    {
                        "ip": "10.1.235.223"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-03-08T22:36:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "b0bc02818a7e8125f4c3edb6afe15fc4228824a616ebae7fb553e903a25e319f",
                    "cni.projectcalico.org/podIP": "10.1.235.201/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.201/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "argo-server/0"
                },
                "creationTimestamp": "2023-03-08T22:36:24Z",
                "generateName": "argo-server-79fc644ff6-",
                "labels": {
                    "app.kubernetes.io/name": "argo-server",
                    "pod-template-hash": "79fc644ff6"
                },
                "name": "argo-server-79fc644ff6-fnrls",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-server-79fc644ff6",
                        "uid": "b973aea7-c8cd-4563-b2fb-d8fb338415f6"
                    }
                ],
                "resourceVersion": "13574",
                "uid": "e6393ad6-792f-492e-a9b2-dafb655f545b"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "server"
                        ],
                        "image": "registry.jujucharms.com/charm/hs4bjttgix7e2kf3188j168vjafe2mfmr8m16/oci-image@sha256:576d03880b4d608b00607902be8f52692e2b8d40f9fdc21992b65447a93614c2",
                        "imagePullPolicy": "Always",
                        "name": "argo-server",
                        "ports": [
                            {
                                "containerPort": 2746,
                                "name": "web",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 2746,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsNonRoot": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-948t4",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "argo-server-argo-server-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-948t4",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-server",
                "serviceAccountName": "argo-server",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "tmp"
                    },
                    {
                        "name": "kube-api-access-948t4",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:41Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:45Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:45Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://1aa1f98b70c57324c9dbd2b65545ca475950bcb40e8fff73866146e23bb4f5ea",
                        "image": "sha256:164db2618c02555da834fe4893b2922dba49f830ff886a4084ad515a2365a19e",
                        "imageID": "registry.jujucharms.com/charm/hs4bjttgix7e2kf3188j168vjafe2mfmr8m16/oci-image@sha256:576d03880b4d608b00607902be8f52692e2b8d40f9fdc21992b65447a93614c2",
                        "lastState": {},
                        "name": "argo-server",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:26Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://5280aa5424bc638104157974f91ed7e668143045c5750deb9e9662bb31f28de4",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5280aa5424bc638104157974f91ed7e668143045c5750deb9e9662bb31f28de4",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:36:40Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:36:25Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.201",
                "podIPs": [
                    {
                        "ip": "10.1.235.201"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "a7873b525332beba88116781a1432cbf535d98696ca92536d7c2c4fea1345df7",
                    "cni.projectcalico.org/podIP": "10.1.236.4/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.4/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:37:47Z",
                "generateName": "katib-db-manager-operator-",
                "labels": {
                    "controller-revision-hash": "katib-db-manager-operator-57579bcd96",
                    "operator.juju.is/name": "katib-db-manager",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "katib-db-manager-operator-0"
                },
                "name": "katib-db-manager-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "katib-db-manager-operator",
                        "uid": "c5bcad4a-ebef-484e-b2a3-537f6c731012"
                    }
                ],
                "resourceVersion": "13985",
                "uid": "291e0d98-74b0-4c2b-8a94-f8b8eee65acc"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-db-manager --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "katib-db-manager"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.251"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-db-manager/template-agent.conf",
                                "name": "katib-db-manager-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-db-manager/operator.yaml",
                                "name": "katib-db-manager-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-v2tkr",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "katib-db-manager-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-db-manager-operator",
                "serviceAccountName": "katib-db-manager-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "katib-db-manager-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "katib-db-manager-operator-config"
                        },
                        "name": "katib-db-manager-operator-config"
                    },
                    {
                        "name": "kube-api-access-v2tkr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:49Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:49Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d9c252fc0103a0750d707e62f682a6cf94bd7f38a78de1ecf63e5a847c312465",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:49Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.4",
                "podIPs": [
                    {
                        "ip": "10.1.236.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "dc66da7a4d5c429f4896eb4c057591b041fe8927451b2d915778d66e04a42b16",
                    "cni.projectcalico.org/podIP": "10.1.235.252/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.252/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "jupyter-controller/0"
                },
                "creationTimestamp": "2023-03-08T22:36:56Z",
                "generateName": "jupyter-controller-588bb5c767-",
                "labels": {
                    "app.kubernetes.io/name": "jupyter-controller",
                    "pod-template-hash": "588bb5c767"
                },
                "name": "jupyter-controller-588bb5c767-5nphr",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "jupyter-controller-588bb5c767",
                        "uid": "6dc875f5-f683-4552-a31c-ea423b4dbca6"
                    }
                ],
                "resourceVersion": "14144",
                "uid": "7706d304-f906-4fd2-8152-e8b5161d802c"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "./manager"
                        ],
                        "env": [
                            {
                                "name": "ENABLE_CULLING",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_GATEWAY",
                                "value": "kubeflow/kubeflow-gateway"
                            },
                            {
                                "name": "USE_ISTIO",
                                "value": "true"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/kaq3thscd44n4eitar0ng5vn41qku3s076d4l/oci-image@sha256:e05857e6f03e0b172521b91193ef0f4470b7c95799991b2eebf44500e630867d",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "jupyter-controller",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c59f8",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "jupyter-controller-jupyter-controller-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c59f8",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "jupyter-controller",
                "serviceAccountName": "jupyter-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-c59f8",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:51Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:51Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://393868d5363dfa1575bd0eab7d1630bd968cb086dea2df3fb0c0b9edbff1e673",
                        "image": "sha256:8d78745ba672f3e551949af5ad0db01246fcc8985f768d4a508380307eee553e",
                        "imageID": "registry.jujucharms.com/charm/kaq3thscd44n4eitar0ng5vn41qku3s076d4l/oci-image@sha256:e05857e6f03e0b172521b91193ef0f4470b7c95799991b2eebf44500e630867d",
                        "lastState": {},
                        "name": "jupyter-controller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:51Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://7abdf5dd7a77c21eeb2b5dde0456d0b9aab66b8616e61819ab0e6d3ab23cfe4a",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://7abdf5dd7a77c21eeb2b5dde0456d0b9aab66b8616e61819ab0e6d3ab23cfe4a",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:37:08Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:36:57Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.252",
                "podIPs": [
                    {
                        "ip": "10.1.235.252"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:56Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "46f31997d1377c59b66b0942135b660016108514f29f49901b70f3a5f5506fc2",
                    "cni.projectcalico.org/podIP": "10.1.235.253/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.253/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "kubeflow-roles/0"
                },
                "creationTimestamp": "2023-03-08T22:37:23Z",
                "generateName": "kubeflow-roles-",
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-roles",
                    "controller-revision-hash": "kubeflow-roles-7877848557",
                    "statefulset.kubernetes.io/pod-name": "kubeflow-roles-0"
                },
                "name": "kubeflow-roles-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kubeflow-roles",
                        "uid": "e700e38e-c344-432a-a53d-864ef73561ea"
                    }
                ],
                "resourceVersion": "15425",
                "uid": "d15b8267-0195-4260-946e-ee20b67dad61"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-pcg7t",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kubeflow-roles-0",
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "kubeflow-roles-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-pcg7t",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-roles",
                "serviceAccountName": "kubeflow-roles",
                "subdomain": "kubeflow-roles-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-pcg7t",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:23Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://580a3b731ac020406d68fb682e043fa4568274d0466e44834b771c162aef005d",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:37:24Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://72f340a87d6a65e4ee2b8e0347a4aa3f114bdfb450d17148df0612ea66a410d2",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://72f340a87d6a65e4ee2b8e0347a4aa3f114bdfb450d17148df0612ea66a410d2",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:37:24Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:37:24Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.253",
                "podIPs": [
                    {
                        "ip": "10.1.235.253"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:23Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "b17c18f7140656458b085af2aad8a9908c4089e0b3d8311eabafdfc8ec00d9bc",
                    "cni.projectcalico.org/podIP": "10.1.236.0/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.0/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "jupyter-ui/0"
                },
                "creationTimestamp": "2023-03-08T22:37:23Z",
                "generateName": "jupyter-ui-fd79d58b4-",
                "labels": {
                    "app.kubernetes.io/name": "jupyter-ui",
                    "pod-template-hash": "fd79d58b4"
                },
                "name": "jupyter-ui-fd79d58b4-fx84f",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "jupyter-ui-fd79d58b4",
                        "uid": "ed042a95-3ae0-466b-baae-601c060f83ba"
                    }
                ],
                "resourceVersion": "15961",
                "uid": "3b4c3cde-54ee-422f-a71f-f58383c6cc09"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_PREFIX",
                                "value": "/jupyter"
                            },
                            {
                                "name": "APP_SECURE_COOKIES",
                                "value": "False"
                            },
                            {
                                "name": "BACKEND_MODE",
                                "value": "development"
                            },
                            {
                                "name": "CLUSTER_DOMAIN",
                                "value": "cluster.local"
                            },
                            {
                                "name": "UI",
                                "value": "default"
                            },
                            {
                                "name": "USERID_HEADER",
                                "value": "kubeflow-userid"
                            },
                            {
                                "name": "USERID_PREFIX"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/9lw7s63ewtlyew486jjn1ez4fe2mh813xni8f/oci-image@sha256:d55c600b690ec802b9bd159ea05d31b1efbc6a7f86f23051da6491f4421b5994",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "jupyter-ui",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/etc/config",
                                "name": "jupyter-ui-config-config"
                            },
                            {
                                "mountPath": "/src/apps/default/static/assets/logos",
                                "name": "jupyter-ui-logos-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gk8ch",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "jupyter-ui-jupyter-ui-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gk8ch",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "jupyter-ui",
                "serviceAccountName": "jupyter-ui",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "spawner_ui_config.yaml",
                                    "path": "spawner_ui_config.yaml"
                                }
                            ],
                            "name": "jupyter-ui-config-config"
                        },
                        "name": "jupyter-ui-config-config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "jupyter-icon.svg",
                                    "path": "jupyter-icon.svg"
                                },
                                {
                                    "key": "jupyterlab-logo.svg",
                                    "path": "jupyterlab-logo.svg"
                                },
                                {
                                    "key": "group-two-icon.svg",
                                    "path": "group-two-icon.svg"
                                },
                                {
                                    "key": "group-two-logo.svg",
                                    "path": "group-two-logo.svg"
                                },
                                {
                                    "key": "group-one-icon.svg",
                                    "path": "group-one-icon.svg"
                                },
                                {
                                    "key": "group-one-logo.svg",
                                    "path": "group-one-logo.svg"
                                }
                            ],
                            "name": "jupyter-ui-logos-config"
                        },
                        "name": "jupyter-ui-logos-config"
                    },
                    {
                        "name": "kube-api-access-gk8ch",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:30Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:23Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://3488480471508b6dba39bf3d5d14d2156b877c5f78ce96cf31a419fffc306c07",
                        "image": "sha256:4bbd290eccc54d474a0b78f388c931a3b87b1d49e38fe717abe7ffbb7adabec7",
                        "imageID": "registry.jujucharms.com/charm/9lw7s63ewtlyew486jjn1ez4fe2mh813xni8f/oci-image@sha256:d55c600b690ec802b9bd159ea05d31b1efbc6a7f86f23051da6491f4421b5994",
                        "lastState": {},
                        "name": "jupyter-ui",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:38:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://4650bad58732ea4b5620c1274fecff3e0a2fc4ac79f18ee527bbb5a9fd88bd66",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://4650bad58732ea4b5620c1274fecff3e0a2fc4ac79f18ee527bbb5a9fd88bd66",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:37:29Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:37:24Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.0",
                "podIPs": [
                    {
                        "ip": "10.1.236.0"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:23Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "b3f7ff66d3c40fca4cccbde2196cc66a026ceffd0e004a2298370fc50269f12a",
                    "cni.projectcalico.org/podIP": "10.1.236.6/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.6/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:38:13Z",
                "generateName": "katib-ui-operator-",
                "labels": {
                    "controller-revision-hash": "katib-ui-operator-6d4558d544",
                    "operator.juju.is/name": "katib-ui",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "katib-ui-operator-0"
                },
                "name": "katib-ui-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "katib-ui-operator",
                        "uid": "d8f33265-2f6e-4826-b06d-545c4061d41a"
                    }
                ],
                "resourceVersion": "16027",
                "uid": "f6a4cd2e-941d-48d8-979d-d2aca04a68ef"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-ui --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "katib-ui"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.75"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-ui/template-agent.conf",
                                "name": "katib-ui-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-katib-ui/operator.yaml",
                                "name": "katib-ui-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-tv64f",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "katib-ui-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-ui-operator",
                "serviceAccountName": "katib-ui-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "katib-ui-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "katib-ui-operator-config"
                        },
                        "name": "katib-ui-operator-config"
                    },
                    {
                        "name": "kube-api-access-tv64f",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:14Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:15Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:15Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:14Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://f2ca48c9361fd374d220297bd161785d4dcd239bf74084df8480ed36ba795683",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:38:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.6",
                "podIPs": [
                    {
                        "ip": "10.1.236.6"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:38:14Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "2f2f6c82e56a5c1b32f81f382b03c9597d10fa8ff4133d7426e921bf5d0b0fdb",
                    "cni.projectcalico.org/podIP": "10.1.236.7/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.7/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:38:50Z",
                "generateName": "kfp-api-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-api-operator-56697c9b4b",
                    "operator.juju.is/name": "kfp-api",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-api-operator-0"
                },
                "name": "kfp-api-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-api-operator",
                        "uid": "0daffb3d-d659-42f4-b1e5-bbaa85c53d46"
                    }
                ],
                "resourceVersion": "18609",
                "uid": "1d6c06dc-4166-4cc6-bb62-832e6913aa95"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-api --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-api"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.165"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-api/template-agent.conf",
                                "name": "kfp-api-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-api/operator.yaml",
                                "name": "kfp-api-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7fz4q",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-api-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-api-operator",
                "serviceAccountName": "kfp-api-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-api-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-api-operator-config"
                        },
                        "name": "kfp-api-operator-config"
                    },
                    {
                        "name": "kube-api-access-7fz4q",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://9dc57d7ccc0976f63c6ffc0dfdefb4f2d693bbfc1c7b24aebd49635e576f9e81",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:38:52Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.7",
                "podIPs": [
                    {
                        "ip": "10.1.236.7"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:38:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "c233463fd7d497e26b1cd667288dc0ed2ed1b2c6e40937294152e44dfe0b8533",
                    "cni.projectcalico.org/podIP": "10.1.236.11/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.11/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:39:05Z",
                "generateName": "kfp-db-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-db-operator-66566458",
                    "operator.juju.is/name": "kfp-db",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-db-operator-0"
                },
                "name": "kfp-db-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-db-operator",
                        "uid": "cf0dfd25-653d-43ee-8f90-ba342d816754"
                    }
                ],
                "resourceVersion": "20399",
                "uid": "fd33291c-e5a0-440f-be1b-5fb9d71c0ece"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-db --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-db"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.134"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-db/template-agent.conf",
                                "name": "kfp-db-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-db/operator.yaml",
                                "name": "kfp-db-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents",
                                "name": "charm"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dnsf6",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-db-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-db-operator",
                "serviceAccountName": "kfp-db-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "charm",
                        "persistentVolumeClaim": {
                            "claimName": "charm-kfp-db-operator-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-db-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-db-operator-config"
                        },
                        "name": "kfp-db-operator-config"
                    },
                    {
                        "name": "kube-api-access-dnsf6",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:17Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://8968caeb0a6766509fc6d8c7984ba28fbd881dc832588822dabf362585885936",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.11",
                "podIPs": [
                    {
                        "ip": "10.1.236.11"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:17Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "ebb1fd4d11040dd060fd9b0289a62be2d78573a890455dffdace1cf258389ae4",
                    "cni.projectcalico.org/podIP": "10.1.236.10/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.10/32"
                },
                "creationTimestamp": "2023-03-08T22:39:13Z",
                "generateName": "metacontroller-operator-charm-",
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-metacontroller-operator-charm",
                    "controller-revision-hash": "metacontroller-operator-charm-cd4bc7b5c",
                    "statefulset.kubernetes.io/pod-name": "metacontroller-operator-charm-0"
                },
                "name": "metacontroller-operator-charm-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "metacontroller-operator-charm",
                        "uid": "27d9213f-3834-4f72-819a-d4df717a4885"
                    }
                ],
                "resourceVersion": "20409",
                "uid": "a4580acf-4018-40df-912d-723690c5580c"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--zap-log-level=4",
                            "--discovery-interval=3600s"
                        ],
                        "command": [
                            "/usr/bin/metacontroller"
                        ],
                        "image": "docker.io/metacontrollerio/metacontroller:v2.0.4",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "metacontroller",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-lvjww",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "metacontroller-operator-charm-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "metacontroller-operator-charm",
                "serviceAccountName": "metacontroller-operator-charm",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-lvjww",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:13Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://4e40ba90786636398c11fb2da22aa0fe4449579a0db2f3764fdc408bce77583a",
                        "image": "docker.io/metacontrollerio/metacontroller:v2.0.4",
                        "imageID": "docker.io/metacontrollerio/metacontroller@sha256:897c9601d2cc88069e3d00185d21dcd1c5296927d549e4e044b907ace5e95ed8",
                        "lastState": {},
                        "name": "metacontroller",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.10",
                "podIPs": [
                    {
                        "ip": "10.1.236.10"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "e163611a815f8cee623f6bf07ade34d1608911ae88deb2dc23745ac557264932",
                    "cni.projectcalico.org/podIP": "10.1.236.14/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.14/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:39:23Z",
                "generateName": "kfp-persistence-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-persistence-operator-6b955476b8",
                    "operator.juju.is/name": "kfp-persistence",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-persistence-operator-0"
                },
                "name": "kfp-persistence-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-persistence-operator",
                        "uid": "f930d5ca-8968-458f-ae6b-b9eb7257121b"
                    }
                ],
                "resourceVersion": "20818",
                "uid": "07434a4f-471c-4974-b1e3-2604ed0d663a"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-persistence --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-persistence"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.84"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-persistence/template-agent.conf",
                                "name": "kfp-persistence-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-persistence/operator.yaml",
                                "name": "kfp-persistence-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nwjbh",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-persistence-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-persistence-operator",
                "serviceAccountName": "kfp-persistence-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-persistence-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-persistence-operator-config"
                        },
                        "name": "kfp-persistence-operator-config"
                    },
                    {
                        "name": "kube-api-access-nwjbh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:23Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:25Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:23Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://e913e81fa7166fa7e53c3d00966cd65ef89eefa3a2b6af9f57e66463313a5ddc",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:25Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.14",
                "podIPs": [
                    {
                        "ip": "10.1.236.14"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:23Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "dec837274c15e793b0c43cafde1de27a8bec533a36cfe25014a67e8df19b61c7",
                    "cni.projectcalico.org/podIP": "10.1.236.2/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.2/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "katib-db/0"
                },
                "creationTimestamp": "2023-03-08T22:37:32Z",
                "generateName": "katib-db-",
                "labels": {
                    "app.kubernetes.io/name": "katib-db",
                    "controller-revision-hash": "katib-db-7cb9c77798",
                    "statefulset.kubernetes.io/pod-name": "katib-db-0"
                },
                "name": "katib-db-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "katib-db",
                        "uid": "0e413b69-d2c1-4f55-856b-53adc7861aaf"
                    }
                ],
                "resourceVersion": "21072",
                "uid": "b1d138df-808f-45c6-a4bc-11ce68883abd"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "MARIADB_DATABASE",
                                "value": "katib"
                            },
                            {
                                "name": "MARIADB_PASSWORD",
                                "value": "password"
                            },
                            {
                                "name": "MARIADB_ROOT_PASSWORD",
                                "value": "root"
                            },
                            {
                                "name": "MARIADB_USER",
                                "value": "mysql"
                            }
                        ],
                        "image": "rocks.canonical.com:443/mariadb/server:10.3",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 120,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 3306
                            },
                            "timeoutSeconds": 5
                        },
                        "name": "mariadb-k8s",
                        "ports": [
                            {
                                "containerPort": 3306,
                                "name": "main",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 3306
                            },
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/lib/mysql",
                                "name": "database-a3327ace"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-v4t8k",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "katib-db-0",
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-v4t8k",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "katib-db-endpoints",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "database-a3327ace",
                        "persistentVolumeClaim": {
                            "claimName": "database-a3327ace-katib-db-0"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-v4t8k",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:53Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:29Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:29Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:38Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://a9ca00a8dce246ae7c30ed74801b0f8b5a04a0c5816b073b6b92869fdd8e52c6",
                        "image": "rocks.canonical.com:443/mariadb/server:10.3",
                        "imageID": "rocks.canonical.com:443/mariadb/server@sha256:779b03a1b7b407644a0526632631d2395716bbb2388572833dc99a57fd319209",
                        "lastState": {},
                        "name": "mariadb-k8s",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://e579a9e815d23881c30e92029026c16ed66eef5f37b81d38d8a12fece8cf077d",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://e579a9e815d23881c30e92029026c16ed66eef5f37b81d38d8a12fece8cf077d",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:38:52Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:37:39Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.2",
                "podIPs": [
                    {
                        "ip": "10.1.236.2"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:38Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "9ec9d8a960fdd465274171dd16ab2fd445593264099ca8fc43f13ac1cfbadfa7",
                    "cni.projectcalico.org/podIP": "10.1.236.8/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.8/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "katib-db-manager/0"
                },
                "creationTimestamp": "2023-03-08T22:39:04Z",
                "generateName": "katib-db-manager-5f9d778bc6-",
                "labels": {
                    "app.kubernetes.io/name": "katib-db-manager",
                    "pod-template-hash": "5f9d778bc6"
                },
                "name": "katib-db-manager-5f9d778bc6-nwk9b",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "katib-db-manager-5f9d778bc6",
                        "uid": "1315ef8e-8935-4e43-888e-3090dfe2f6cf"
                    }
                ],
                "resourceVersion": "21298",
                "uid": "e8a39f09-cdb3-4424-bddd-5035b0807231"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "./katib-db-manager"
                        ],
                        "env": [
                            {
                                "name": "DB_NAME",
                                "value": "mysql"
                            },
                            {
                                "name": "DB_PASSWORD",
                                "value": "root"
                            },
                            {
                                "name": "DB_USER",
                                "value": "root"
                            },
                            {
                                "name": "KATIB_MYSQL_DB_DATABASE",
                                "value": "katib"
                            },
                            {
                                "name": "KATIB_MYSQL_DB_HOST",
                                "value": "10.152.183.87"
                            },
                            {
                                "name": "KATIB_MYSQL_DB_PORT",
                                "value": "3306"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/5d9mqm3c0kne3mu523ca8oygc7bptv43ape2o/oci-image@sha256:16b33a553631ad7c71944a10181d03c844a6d95cfed8f104135febde3250c8c1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/bin/grpc_health_probe",
                                    "-addr=:6789"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "katib-db-manager",
                        "ports": [
                            {
                                "containerPort": 6789,
                                "name": "api",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7x8j2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "katib-db-manager-katib-db-manager-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7x8j2",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-db-manager",
                "serviceAccountName": "katib-db-manager",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-7x8j2",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:32Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:32Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://6b1970c3736badb20f30d4db98b5e9144b5ba03a1e5a8f2b4787e8d6af7c28c0",
                        "image": "sha256:b4f61de9c51418e357a26b1a17d2df258637f0660d4623da310fe9ba0208b013",
                        "imageID": "registry.jujucharms.com/charm/5d9mqm3c0kne3mu523ca8oygc7bptv43ape2o/oci-image@sha256:16b33a553631ad7c71944a10181d03c844a6d95cfed8f104135febde3250c8c1",
                        "lastState": {},
                        "name": "katib-db-manager",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:32Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://92e4c91f7ffadc7d6bba7856bc0afab4ff5b1f4966819471127ef5042d5770a9",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://92e4c91f7ffadc7d6bba7856bc0afab4ff5b1f4966819471127ef5042d5770a9",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:39:23Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:39:05Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.8",
                "podIPs": [
                    {
                        "ip": "10.1.236.8"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "decc52bbe08205c1950afae6322215444a8e36b064c3636186d17d3b63a58b61",
                    "cni.projectcalico.org/podIP": "10.1.236.5/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.5/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "metacontroller-operator/0"
                },
                "creationTimestamp": "2023-03-08T22:38:11Z",
                "generateName": "metacontroller-operator-",
                "labels": {
                    "app.kubernetes.io/name": "metacontroller-operator",
                    "controller-revision-hash": "metacontroller-operator-6ffdd9c6dc",
                    "statefulset.kubernetes.io/pod-name": "metacontroller-operator-0"
                },
                "name": "metacontroller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "metacontroller-operator",
                        "uid": "6a516c08-415b-4ab0-b4d2-2efab1c6d9c8"
                    }
                ],
                "resourceVersion": "21554",
                "uid": "80a6e3b4-46b2-439b-afd9-b438c12af10e"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-lpdbb",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "metacontroller-operator-0",
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "metacontroller-operator-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-lpdbb",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "metacontroller-operator",
                "serviceAccountName": "metacontroller-operator",
                "subdomain": "metacontroller-operator-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-lpdbb",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:37Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:37Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:11Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://b81780c89020b1e5a33ee6a416f8f3139853d6709519dd207bc36c13693ce6ac",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:38:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://ac4c1656d83b0347a1b47aacf8340c2c68835ca35aaab1103b83a875a9e37a7e",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://ac4c1656d83b0347a1b47aacf8340c2c68835ca35aaab1103b83a875a9e37a7e",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:38:13Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:38:13Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.5",
                "podIPs": [
                    {
                        "ip": "10.1.236.5"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:38:11Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "428524b46cdfaf2b89f394f7778b4781e8e1711a156cd5c0964526398d491c72",
                    "cni.projectcalico.org/podIP": "10.1.236.12/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.12/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "katib-ui/0"
                },
                "creationTimestamp": "2023-03-08T22:39:19Z",
                "generateName": "katib-ui-798b5c5fbf-",
                "labels": {
                    "app.kubernetes.io/name": "katib-ui",
                    "pod-template-hash": "798b5c5fbf"
                },
                "name": "katib-ui-798b5c5fbf-n6gwb",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "katib-ui-798b5c5fbf",
                        "uid": "c503db2d-60bf-45a2-af0d-bf32f869b573"
                    }
                ],
                "resourceVersion": "23563",
                "uid": "d8398be5-624c-4508-80dd-79c595afbb07"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--port=8080"
                        ],
                        "command": [
                            "./katib-ui"
                        ],
                        "env": [
                            {
                                "name": "KATIB_CORE_NAMESPACE",
                                "value": "kubeflow"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/7856sw60z0qbmhucvxurviv23ddjs928qk5pv/oci-image@sha256:c7dc04a2fe88ca6e59c6e70c4f11e5d3fc90b2669f70d88e73f98bab27c12dd7",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "katib-ui",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-vrwwh",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "katib-ui-katib-ui-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-vrwwh",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-ui",
                "serviceAccountName": "katib-ui",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-vrwwh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:37Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0100cdf018b44d2f6f375b823eabab665003712e40150d8c857576335931170a",
                        "image": "sha256:88f45a11b7316eaed618a6d5a449166f7c53aff17c26d336ff2b0959f7f5a765",
                        "imageID": "registry.jujucharms.com/charm/7856sw60z0qbmhucvxurviv23ddjs928qk5pv/oci-image@sha256:c7dc04a2fe88ca6e59c6e70c4f11e5d3fc90b2669f70d88e73f98bab27c12dd7",
                        "lastState": {},
                        "name": "katib-ui",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://80eb1c0b93514f982cd730b7cf53f7c27b1d484c57d7f6c002963d11315fdc7c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://80eb1c0b93514f982cd730b7cf53f7c27b1d484c57d7f6c002963d11315fdc7c",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:39:36Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:39:21Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.12",
                "podIPs": [
                    {
                        "ip": "10.1.236.12"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "7f7463de94e81bd89fbb8fa7e39f531b6ab69103846cbd29a3235cb7fee33af2",
                    "cni.projectcalico.org/podIP": "10.1.236.16/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.16/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-db/0"
                },
                "creationTimestamp": "2023-03-08T22:39:40Z",
                "generateName": "kfp-db-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-db",
                    "controller-revision-hash": "kfp-db-5756765cb7",
                    "statefulset.kubernetes.io/pod-name": "kfp-db-0"
                },
                "name": "kfp-db-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-db",
                        "uid": "b8713e51-e93a-4525-bae9-0e324a88a424"
                    }
                ],
                "resourceVersion": "23796",
                "uid": "700efd80-4575-4d9f-b187-c459c7966697"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "MARIADB_DATABASE",
                                "value": "mlpipeline"
                            },
                            {
                                "name": "MARIADB_PASSWORD",
                                "value": "password"
                            },
                            {
                                "name": "MARIADB_ROOT_PASSWORD",
                                "value": "root"
                            },
                            {
                                "name": "MARIADB_USER",
                                "value": "mysql"
                            }
                        ],
                        "image": "rocks.canonical.com:443/mariadb/server:10.3",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 120,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 3306
                            },
                            "timeoutSeconds": 5
                        },
                        "name": "mariadb-k8s",
                        "ports": [
                            {
                                "containerPort": 3306,
                                "name": "main",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 3306
                            },
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/lib/mysql",
                                "name": "database-06c06236"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mrxcp",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-db-0",
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mrxcp",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "kfp-db-endpoints",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "database-06c06236",
                        "persistentVolumeClaim": {
                            "claimName": "database-06c06236-kfp-db-0"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-mrxcp",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:58Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:12Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:12Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:52Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d3264be85d219ef703896bab4234f61a75b4facada30c586b4cae3f285ce6727",
                        "image": "rocks.canonical.com:443/mariadb/server:10.3",
                        "imageID": "rocks.canonical.com:443/mariadb/server@sha256:779b03a1b7b407644a0526632631d2395716bbb2388572833dc99a57fd319209",
                        "lastState": {},
                        "name": "mariadb-k8s",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://faa019cc5eecfb34e7a8f01fdbdf3b681020f16c6cc3c2f9a33ccc6d3621f3f5",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://faa019cc5eecfb34e7a8f01fdbdf3b681020f16c6cc3c2f9a33ccc6d3621f3f5",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:39:57Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:39:53Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.16",
                "podIPs": [
                    {
                        "ip": "10.1.236.16"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:52Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "10587bb8b831575c9f07729f1ff5615eb274d8d0ea6da4a004877c742a9e37d4",
                    "cni.projectcalico.org/podIP": "10.1.236.17/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.17/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:40:11Z",
                "generateName": "kfp-profile-controller-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-profile-controller-operator-6fc85ccbfd",
                    "operator.juju.is/name": "kfp-profile-controller",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-profile-controller-operator-0"
                },
                "name": "kfp-profile-controller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-profile-controller-operator",
                        "uid": "90c378d2-8b31-4e0a-af95-a7c21e0d2e5f"
                    }
                ],
                "resourceVersion": "23857",
                "uid": "95677658-1cca-46b0-ae66-439eb54f8ada"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-profile-controller --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-profile-controller"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.20"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-profile-controller/template-agent.conf",
                                "name": "kfp-profile-controller-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-profile-controller/operator.yaml",
                                "name": "kfp-profile-controller-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-rltp9",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-profile-controller-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-profile-controller-operator",
                "serviceAccountName": "kfp-profile-controller-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-profile-controller-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-profile-controller-operator-config"
                        },
                        "name": "kfp-profile-controller-operator-config"
                    },
                    {
                        "name": "kube-api-access-rltp9",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:11Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:13Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:13Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:11Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://74e1b17a5a92ed27e545e30997fc534815a43592b296567100e688d2d1921791",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.17",
                "podIPs": [
                    {
                        "ip": "10.1.236.17"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:11Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "ae012b4b60fa255ae9576600d5607e4c220ec63fdb0ad6c06bdba2a2ed5b02f6",
                    "cni.projectcalico.org/podIP": "10.1.236.18/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.18/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:40:15Z",
                "generateName": "kfp-schedwf-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-schedwf-operator-6548499fc7",
                    "operator.juju.is/name": "kfp-schedwf",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-schedwf-operator-0"
                },
                "name": "kfp-schedwf-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-schedwf-operator",
                        "uid": "1d5a7a1a-7d82-4a8a-955d-fd63b83b8b18"
                    }
                ],
                "resourceVersion": "24084",
                "uid": "f6bbdd4f-2abd-47cd-a451-bca60f0409e5"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-schedwf --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-schedwf"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.43"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-schedwf/template-agent.conf",
                                "name": "kfp-schedwf-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-schedwf/operator.yaml",
                                "name": "kfp-schedwf-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-tfw97",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-schedwf-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-schedwf-operator",
                "serviceAccountName": "kfp-schedwf-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-schedwf-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-schedwf-operator-config"
                        },
                        "name": "kfp-schedwf-operator-config"
                    },
                    {
                        "name": "kube-api-access-tfw97",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:15Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:17Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:15Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://63af6229c39eeb4ddd2631fd0a6fcfb292fa0e48cde2801b8cffdce606145c9d",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:16Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.18",
                "podIPs": [
                    {
                        "ip": "10.1.236.18"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:15Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "33a6d2c46d46fddd559da40a877e9f0fccadf867ecf0445c7fa202b7e0840de4",
                    "cni.projectcalico.org/podIP": "10.1.236.19/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.19/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:40:22Z",
                "generateName": "kfp-ui-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-ui-operator-7b66fb7f94",
                    "operator.juju.is/name": "kfp-ui",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-ui-operator-0"
                },
                "name": "kfp-ui-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-ui-operator",
                        "uid": "4699a2a9-fe23-412b-b1ad-d030d948694b"
                    }
                ],
                "resourceVersion": "24471",
                "uid": "173a1702-8de5-4599-978a-da39c002c250"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-ui --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-ui"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.231"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-ui/template-agent.conf",
                                "name": "kfp-ui-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-ui/operator.yaml",
                                "name": "kfp-ui-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2bkgn",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-ui-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-ui-operator",
                "serviceAccountName": "kfp-ui-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-ui-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-ui-operator-config"
                        },
                        "name": "kfp-ui-operator-config"
                    },
                    {
                        "name": "kube-api-access-2bkgn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:24Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:24Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://dc25203e7ad3045855191c8da0b3cfbd192385df6eae5d73814815d3c53f4d19",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:23Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.19",
                "podIPs": [
                    {
                        "ip": "10.1.236.19"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "cni.projectcalico.org/containerID": "5ce73ee2ec4dc19751d9aea5a3bc746cab19627e834268d41af287fb98420689",
                    "cni.projectcalico.org/podIP": "10.1.236.13/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.13/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "unit.juju.is/id": "training-operator/0"
                },
                "creationTimestamp": "2023-03-08T22:39:23Z",
                "generateName": "training-operator-",
                "labels": {
                    "app.kubernetes.io/name": "training-operator",
                    "controller-revision-hash": "training-operator-5695c848d6",
                    "statefulset.kubernetes.io/pod-name": "training-operator-0"
                },
                "name": "training-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "training-operator",
                        "uid": "6366ed1d-85e1-469f-ab7a-3cf16dfeebd0"
                    }
                ],
                "resourceVersion": "24682",
                "uid": "9cbbc9c0-65da-4f68-9ee9-bfac0c6a3d79"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "run",
                            "--http",
                            ":38812",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES",
                                "value": "training-operator"
                            },
                            {
                                "name": "HTTP_PROBE_PORT",
                                "value": "3856"
                            }
                        ],
                        "image": "jujusolutions/charm-base:ubuntu-20.04",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "charm",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "startupProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38812,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/var/lib/pebble/default",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r4lsf",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    },
                    {
                        "args": [
                            "run",
                            "--create-dirs",
                            "--hold",
                            "--http",
                            ":38813",
                            "--verbose"
                        ],
                        "command": [
                            "/charm/bin/pebble"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAME",
                                "value": "training-operator"
                            },
                            {
                                "name": "PEBBLE_SOCKET",
                                "value": "/charm/container/pebble.socket"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/7brniqppl0lq3h7zopjcmmsx9k1bxi3pvilrj/training-operator-image@sha256:3a0827af1116cc7ea2d0e3ad3e9ff661c4ce7f9f2cc8aeac114b6446848a7d4b",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=alive",
                                "port": 38813,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "training-operator",
                        "readinessProbe": {
                            "failureThreshold": 1,
                            "httpGet": {
                                "path": "/v1/health?level=ready",
                                "port": 38813,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/charm/bin/pebble",
                                "name": "charm-data",
                                "readOnly": true,
                                "subPath": "charm/bin/pebble"
                            },
                            {
                                "mountPath": "/charm/container",
                                "name": "charm-data",
                                "subPath": "charm/containers/training-operator"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r4lsf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "training-operator-0",
                "imagePullSecrets": [
                    {
                        "name": "training-operator-training-operator-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "init",
                            "--containeragent-pebble-dir",
                            "/containeragent/pebble",
                            "--charm-modified-version",
                            "0",
                            "--data-dir",
                            "/var/lib/juju",
                            "--bin-dir",
                            "/charm/bin"
                        ],
                        "command": [
                            "/opt/containeragent"
                        ],
                        "env": [
                            {
                                "name": "JUJU_CONTAINER_NAMES",
                                "value": "training-operator"
                            },
                            {
                                "name": "JUJU_K8S_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_K8S_POD_UUID",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.uid"
                                    }
                                }
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "training-operator-application-config"
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "charm-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "charm-data",
                                "subPath": "var/lib/juju"
                            },
                            {
                                "mountPath": "/charm/bin",
                                "name": "charm-data",
                                "subPath": "charm/bin"
                            },
                            {
                                "mountPath": "/charm/containers",
                                "name": "charm-data",
                                "subPath": "charm/containers"
                            },
                            {
                                "mountPath": "/containeragent/pebble",
                                "name": "charm-data",
                                "subPath": "containeragent/pebble"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-r4lsf",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "training-operator",
                "serviceAccountName": "training-operator",
                "subdomain": "training-operator-endpoints",
                "terminationGracePeriodSeconds": 300,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "charm-data"
                    },
                    {
                        "name": "kube-api-access-r4lsf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:25Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:28Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:28Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:39:23Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://11938e89bc2b5721ccb24ef672f2b358214ecc0c2606b44b991d1cb7391239d8",
                        "image": "docker.io/jujusolutions/charm-base:ubuntu-20.04",
                        "imageID": "docker.io/jujusolutions/charm-base@sha256:ad6d17c2ca4c8b1dd7d93791201b0c4f5702b38840ea19270219a56402845f99",
                        "lastState": {},
                        "name": "charm",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:25Z"
                            }
                        }
                    },
                    {
                        "containerID": "containerd://1b94b3bd831392a900e191140d2305460659ea9cd23a76de1ce1ebad4fe64762",
                        "image": "sha256:1e5d440d07ffc4d8fdef0c71ab46374aae6b5978aa8a2093ce2a05b73b719393",
                        "imageID": "registry.jujucharms.com/charm/7brniqppl0lq3h7zopjcmmsx9k1bxi3pvilrj/training-operator-image@sha256:3a0827af1116cc7ea2d0e3ad3e9ff661c4ce7f9f2cc8aeac114b6446848a7d4b",
                        "lastState": {},
                        "name": "training-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:39:53Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://ae4a77b571e96b180ad7b6074f1090d40bfe1793b8cfb5cad1834191a5f60b6a",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "charm-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://ae4a77b571e96b180ad7b6074f1090d40bfe1793b8cfb5cad1834191a5f60b6a",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:39:24Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:39:24Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.13",
                "podIPs": [
                    {
                        "ip": "10.1.236.13"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:39:23Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "7851747e647aa2ab0b67a74d3ce8ceb6a27cde4742804eadd84615415fccbb0f",
                    "cni.projectcalico.org/podIP": "10.1.236.20/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.20/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:40:26Z",
                "generateName": "kfp-viewer-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-viewer-operator-75b6b9cbb4",
                    "operator.juju.is/name": "kfp-viewer",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-viewer-operator-0"
                },
                "name": "kfp-viewer-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-viewer-operator",
                        "uid": "2f182d4f-a760-4fbd-890e-ee0aea7aef53"
                    }
                ],
                "resourceVersion": "24696",
                "uid": "b3c5ce45-0800-43c5-b3b1-92163b5269ca"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-viewer --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-viewer"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.149"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-viewer/template-agent.conf",
                                "name": "kfp-viewer-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-viewer/operator.yaml",
                                "name": "kfp-viewer-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hxgnj",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-viewer-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-viewer-operator",
                "serviceAccountName": "kfp-viewer-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-viewer-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-viewer-operator-config"
                        },
                        "name": "kfp-viewer-operator-config"
                    },
                    {
                        "name": "kube-api-access-hxgnj",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:27Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:28Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:28Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:27Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://bcd7fea33beef76a8145e2ba382c4a5229093f7d5fed46f3f15afa1d5c3d088c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:28Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.20",
                "podIPs": [
                    {
                        "ip": "10.1.236.20"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:27Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "208d9429ee97aa9c52e1eeb7f72b6099717ad95ebfbd654d9985c1a96ae78941",
                    "cni.projectcalico.org/podIP": "10.1.236.22/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.22/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:40:39Z",
                "generateName": "kfp-viz-operator-",
                "labels": {
                    "controller-revision-hash": "kfp-viz-operator-574d69bb5c",
                    "operator.juju.is/name": "kfp-viz",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kfp-viz-operator-0"
                },
                "name": "kfp-viz-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kfp-viz-operator",
                        "uid": "4c365c14-9d88-4877-8f0a-e4162d0c6b66"
                    }
                ],
                "resourceVersion": "25395",
                "uid": "eafbe224-ea25-4a50-bafc-68d5a31de18c"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-viz --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kfp-viz"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.250"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-viz/template-agent.conf",
                                "name": "kfp-viz-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kfp-viz/operator.yaml",
                                "name": "kfp-viz-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-m7dtv",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kfp-viz-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-viz-operator",
                "serviceAccountName": "kfp-viz-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kfp-viz-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kfp-viz-operator-config"
                        },
                        "name": "kfp-viz-operator-config"
                    },
                    {
                        "name": "kube-api-access-m7dtv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:40Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:40Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://dfed34f8da145462cc9ad6e0cd48f3457061c3c4916035dfeb2e52afc78e2a3c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:40:41Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.22",
                "podIPs": [
                    {
                        "ip": "10.1.236.22"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:40Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "b1910f998b5d82502a44ece24a4183012005a37ff8140c862018851ab201214d",
                    "cni.projectcalico.org/podIP": "10.1.236.23/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.23/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:41:02Z",
                "generateName": "kubeflow-dashboard-operator-",
                "labels": {
                    "controller-revision-hash": "kubeflow-dashboard-operator-84456bd8f7",
                    "operator.juju.is/name": "kubeflow-dashboard",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kubeflow-dashboard-operator-0"
                },
                "name": "kubeflow-dashboard-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kubeflow-dashboard-operator",
                        "uid": "7a3f1ee8-bd39-4187-ae7e-866a692736c5"
                    }
                ],
                "resourceVersion": "26561",
                "uid": "d7870018-4662-4b3b-9ce9-8a289805cb14"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-dashboard --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kubeflow-dashboard"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.144"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-dashboard/template-agent.conf",
                                "name": "kubeflow-dashboard-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-dashboard/operator.yaml",
                                "name": "kubeflow-dashboard-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-49bmh",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kubeflow-dashboard-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-dashboard-operator",
                "serviceAccountName": "kubeflow-dashboard-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kubeflow-dashboard-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kubeflow-dashboard-operator-config"
                        },
                        "name": "kubeflow-dashboard-operator-config"
                    },
                    {
                        "name": "kube-api-access-49bmh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:02Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:03Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:03Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:02Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://a9cd3438cdddfd12a3a7596a9b7c70858f6f39a66c2fdc7d9d37881a2e683eaa",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:41:03Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.23",
                "podIPs": [
                    {
                        "ip": "10.1.236.23"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:41:02Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "2dadf059795eb63cebb283fd32ca565e8606cefa94ce677da32ed07c806e00b1",
                    "cni.projectcalico.org/podIP": "10.1.236.25/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.25/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:41:45Z",
                "generateName": "kubeflow-profiles-operator-",
                "labels": {
                    "controller-revision-hash": "kubeflow-profiles-operator-65bf59f7d8",
                    "operator.juju.is/name": "kubeflow-profiles",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kubeflow-profiles-operator-0"
                },
                "name": "kubeflow-profiles-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kubeflow-profiles-operator",
                        "uid": "617afbb7-1b00-4cd7-9496-06506e252bf6"
                    }
                ],
                "resourceVersion": "28814",
                "uid": "704d31af-2142-462f-a172-2b309eff52fe"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-profiles --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kubeflow-profiles"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.112"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-profiles/template-agent.conf",
                                "name": "kubeflow-profiles-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-profiles/operator.yaml",
                                "name": "kubeflow-profiles-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4vlzw",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kubeflow-profiles-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-profiles-operator",
                "serviceAccountName": "kubeflow-profiles-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kubeflow-profiles-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kubeflow-profiles-operator-config"
                        },
                        "name": "kubeflow-profiles-operator-config"
                    },
                    {
                        "name": "kube-api-access-4vlzw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:45Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:45Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://84eb9ac9f7e0f2c5138a7570a558470ad6ff05b7470bdd1bd5a07b70f709c46f",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:41:46Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.25",
                "podIPs": [
                    {
                        "ip": "10.1.236.25"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:41:45Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "5b2eb4379745f3eeca5b669d4b1496278e9188b75f00515107cdf395bce101e6",
                    "cni.projectcalico.org/podIP": "10.1.236.24/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.24/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-viewer/0"
                },
                "creationTimestamp": "2023-03-08T22:41:12Z",
                "generateName": "kfp-viewer-74866d586d-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-viewer",
                    "pod-template-hash": "74866d586d"
                },
                "name": "kfp-viewer-74866d586d-njpwb",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-viewer-74866d586d",
                        "uid": "9da36a74-6914-426f-b222-2f9e0379b954"
                    }
                ],
                "resourceVersion": "29923",
                "uid": "0a4399bd-e862-43c3-a384-4b56b3a7675f"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "MAX_NUM_VIEWERS",
                                "value": "50"
                            },
                            {
                                "name": "MINIO_NAMESPACE",
                                "value": "kubeflow"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/kk5db8k26h6fdltd2xcoudu3xsuslkihi4w18/oci-image@sha256:94754c058ada8a18e827788e1431433e65cc114b553597b7d1ddc3e51a554075",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ml-pipeline-viewer-crd",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6fzp2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-viewer-ml-pipeline-viewer-crd-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6fzp2",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-viewer",
                "serviceAccountName": "kfp-viewer",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-6fzp2",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:52Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:08Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:08Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:12Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://af21e3c68e23703d053ffe072390e0045004e158be3955422aa756e8716c11f3",
                        "image": "sha256:146c5f3883a5ba5bdad82c253f976e660374fcd81f46a27d20855a474814633d",
                        "imageID": "registry.jujucharms.com/charm/kk5db8k26h6fdltd2xcoudu3xsuslkihi4w18/oci-image@sha256:94754c058ada8a18e827788e1431433e65cc114b553597b7d1ddc3e51a554075",
                        "lastState": {},
                        "name": "ml-pipeline-viewer-crd",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://7b8aac1ba7aeb2a19d18135e4fb4e2bed8d4d454d30a663493c13c0aea6bead0",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://7b8aac1ba7aeb2a19d18135e4fb4e2bed8d4d454d30a663493c13c0aea6bead0",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:41:52Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:41:14Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.24",
                "podIPs": [
                    {
                        "ip": "10.1.236.24"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:41:13Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "89c43d6e552412a4eb5c94afbe03305094a564b1657911293e6f74c205a0dde9",
                    "cni.projectcalico.org/podIP": "10.1.236.26/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.26/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-viz/0"
                },
                "creationTimestamp": "2023-03-08T22:41:52Z",
                "generateName": "kfp-viz-79475b58c4-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-viz",
                    "pod-template-hash": "79475b58c4"
                },
                "name": "kfp-viz-79475b58c4-gdtc7",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-viz-79475b58c4",
                        "uid": "dbc1306c-0877-47ce-99f3-9555d42a8012"
                    }
                ],
                "resourceVersion": "30434",
                "uid": "26aa24ed-d668-4c3a-9d1c-528ab7db3e7e"
            },
            "spec": {
                "containers": [
                    {
                        "image": "registry.jujucharms.com/charm/c2o31yht1y825t6n49mwko4wyel0rracnrjn5/oci-image@sha256:23ab9b96810e9871738fe4920905bf541cb7edb476f0d2d86d9bafe754413f3a",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "wget",
                                    "-q",
                                    "-S",
                                    "-O",
                                    "-",
                                    "http://localhost:8888/"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 3,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 2
                        },
                        "name": "ml-pipeline-visualizationserver",
                        "ports": [
                            {
                                "containerPort": 8888,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "wget",
                                    "-q",
                                    "-S",
                                    "-O",
                                    "-",
                                    "http://localhost:8888/"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 3,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 2
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-vvlhd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-viz-ml-pipeline-visualizationserver-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-vvlhd",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-vvlhd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:53Z",
                        "message": "containers with unready status: [ml-pipeline-visualizationserver]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:53Z",
                        "message": "containers with unready status: [ml-pipeline-visualizationserver]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:41:52Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/c2o31yht1y825t6n49mwko4wyel0rracnrjn5/oci-image@sha256:23ab9b96810e9871738fe4920905bf541cb7edb476f0d2d86d9bafe754413f3a",
                        "imageID": "",
                        "lastState": {},
                        "name": "ml-pipeline-visualizationserver",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://5e564db57fca8d09a638926bbbfc2b462e96d7dac84bb253864499e699ba7a78",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://5e564db57fca8d09a638926bbbfc2b462e96d7dac84bb253864499e699ba7a78",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:42:17Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:41:54Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.26",
                "podIPs": [
                    {
                        "ip": "10.1.236.26"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:41:53Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "30600d9e034509ca0551730f6c09a0b67a5dd1acd731c0880d40009f739bc716",
                    "cni.projectcalico.org/podIP": "10.1.236.21/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.21/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-schedwf/0"
                },
                "creationTimestamp": "2023-03-08T22:40:35Z",
                "generateName": "kfp-schedwf-564b46946f-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-schedwf",
                    "pod-template-hash": "564b46946f"
                },
                "name": "kfp-schedwf-564b46946f-hvqq9",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-schedwf-564b46946f",
                        "uid": "cec65505-8f61-4295-8415-b137ceff1ab4"
                    }
                ],
                "resourceVersion": "31047",
                "uid": "ead6a5e0-b9fc-4909-8fdc-4579506d9464"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "CRON_SCHEDULE_TIMEZONE",
                                "value": "UTC"
                            },
                            {
                                "name": "NAMESPACE"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/bmliwriin8zo1y7zzfcwxh51y1lmtn4i6llry/oci-image@sha256:9c9f710d6b5c27f95441ffa0c569cfcc78c494dc2b26bd3a547d5f0d47a15d72",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ml-pipeline-scheduledworkflow",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2fqc9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-schedwf-ml-pipeline-scheduledworkflow-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2fqc9",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-schedwf",
                "serviceAccountName": "kfp-schedwf",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-2fqc9",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:03Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:30Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:30Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:40:35Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://90a580af68fd9fe2d9e3b552a9e716139b48ae9684128b46e3e36b84ff8dd05c",
                        "image": "sha256:f34f380ecca850019436cfa839c050d729cb4f5ad9068214f63f9c55934f9278",
                        "imageID": "registry.jujucharms.com/charm/bmliwriin8zo1y7zzfcwxh51y1lmtn4i6llry/oci-image@sha256:9c9f710d6b5c27f95441ffa0c569cfcc78c494dc2b26bd3a547d5f0d47a15d72",
                        "lastState": {},
                        "name": "ml-pipeline-scheduledworkflow",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://f4e56490c52deb44d292bbe8ff37d2c6b25a66d63901f98e45cb1b555c6d36ee",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://f4e56490c52deb44d292bbe8ff37d2c6b25a66d63901f98e45cb1b555c6d36ee",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:42:02Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:40:37Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.21",
                "podIPs": [
                    {
                        "ip": "10.1.236.21"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:40:35Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "82fb93e28429d5eab3c90bbf13e744c8c6575462318e0d5f8b1cb08f1cb06308",
                    "cni.projectcalico.org/podIP": "10.1.236.27/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.27/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kubeflow-profiles/0"
                },
                "creationTimestamp": "2023-03-08T22:42:39Z",
                "generateName": "kubeflow-profiles-598c6fc44c-",
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-profiles",
                    "pod-template-hash": "598c6fc44c"
                },
                "name": "kubeflow-profiles-598c6fc44c-4cfjb",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kubeflow-profiles-598c6fc44c",
                        "uid": "01f769b2-d560-4e05-9e07-37c25bbe2036"
                    }
                ],
                "resourceVersion": "32026",
                "uid": "86f45535-9d13-4246-8690-d7d564300ee3"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "-userid-header",
                            "kubeflow-userid",
                            "-userid-prefix",
                            "",
                            "-workload-identity",
                            ""
                        ],
                        "command": [
                            "/manager"
                        ],
                        "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/profile-image@sha256:cfd6935d3e330e6364a1be2a98947046b5181c0c9caa32fea4dcea9637c1af9e",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/metrics",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "kubeflow-profiles",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "manager",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/etc/profile-controller",
                                "name": "namespace-labels-data"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6q66j",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "-cluster-admin",
                            "admin",
                            "-userid-header",
                            "kubeflow-userid",
                            "-userid-prefix",
                            ""
                        ],
                        "command": [
                            "/access-management"
                        ],
                        "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/kfam-image@sha256:71ba951d266874241bb69106e278e9a79c0b6a222bd093a669ad691a585a0dc7",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/metrics",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "kubeflow-kfam",
                        "ports": [
                            {
                                "containerPort": 8081,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6q66j",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kubeflow-profiles-kubeflow-profiles-secret"
                    },
                    {
                        "name": "kubeflow-profiles-kubeflow-kfam-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6q66j",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-profiles",
                "serviceAccountName": "kubeflow-profiles",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "namespace-labels.yaml",
                                    "path": "namespace-labels.yaml"
                                }
                            ],
                            "name": "namespace-labels-data"
                        },
                        "name": "namespace-labels-data"
                    },
                    {
                        "name": "kube-api-access-6q66j",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:39Z",
                        "message": "containers with unready status: [kubeflow-profiles kubeflow-kfam]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:39Z",
                        "message": "containers with unready status: [kubeflow-profiles kubeflow-kfam]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/kfam-image@sha256:71ba951d266874241bb69106e278e9a79c0b6a222bd093a669ad691a585a0dc7",
                        "imageID": "",
                        "lastState": {},
                        "name": "kubeflow-kfam",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    },
                    {
                        "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/profile-image@sha256:cfd6935d3e330e6364a1be2a98947046b5181c0c9caa32fea4dcea9637c1af9e",
                        "imageID": "",
                        "lastState": {},
                        "name": "kubeflow-profiles",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://a23d5f5b05e8d2d0b8022b9ea8ebf33a2c21b381b7326ac6eb0ecd64a186004c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://a23d5f5b05e8d2d0b8022b9ea8ebf33a2c21b381b7326ac6eb0ecd64a186004c",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:42:47Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:42:40Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.27",
                "podIPs": [
                    {
                        "ip": "10.1.236.27"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "099259454f3a20438d536b08bae2ff5af12d46a2eebe736110a97d60187eb551",
                    "cni.projectcalico.org/podIP": "10.1.236.28/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.28/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:42:48Z",
                "generateName": "tensorboard-controller-operator-",
                "labels": {
                    "controller-revision-hash": "tensorboard-controller-operator-77b4b75856",
                    "operator.juju.is/name": "tensorboard-controller",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "tensorboard-controller-operator-0"
                },
                "name": "tensorboard-controller-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "tensorboard-controller-operator",
                        "uid": "1ae5c801-e5ee-41d9-aea0-d6982e2f8454"
                    }
                ],
                "resourceVersion": "32140",
                "uid": "cde46f31-1b30-431a-9130-1a59b57f1463"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=tensorboard-controller --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "tensorboard-controller"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.219"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-tensorboard-controller/template-agent.conf",
                                "name": "tensorboard-controller-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-tensorboard-controller/operator.yaml",
                                "name": "tensorboard-controller-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2c78q",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "tensorboard-controller-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tensorboard-controller-operator",
                "serviceAccountName": "tensorboard-controller-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tensorboard-controller-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "tensorboard-controller-operator-config"
                        },
                        "name": "tensorboard-controller-operator-config"
                    },
                    {
                        "name": "kube-api-access-2c78q",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://f620d76b8540503b5bd65c939477f623615f786a75d61422a3f0104ee8f6ed77",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:50Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.28",
                "podIPs": [
                    {
                        "ip": "10.1.236.28"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:49Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "1347dbeba65c51d84df41ea16d6921d6fe07705d2f6ac6adb2e5535beb353319",
                    "cni.projectcalico.org/podIP": "10.1.236.29/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.29/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:42:50Z",
                "generateName": "kubeflow-volumes-operator-",
                "labels": {
                    "controller-revision-hash": "kubeflow-volumes-operator-6ff8f76588",
                    "operator.juju.is/name": "kubeflow-volumes",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "kubeflow-volumes-operator-0"
                },
                "name": "kubeflow-volumes-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "kubeflow-volumes-operator",
                        "uid": "9dd501df-4b72-45d3-9fbf-49b995f4cd2b"
                    }
                ],
                "resourceVersion": "32234",
                "uid": "3c5e5362-83c4-4c1d-b5b0-2a9e841d65b9"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-volumes --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "kubeflow-volumes"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.97"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-volumes/template-agent.conf",
                                "name": "kubeflow-volumes-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-kubeflow-volumes/operator.yaml",
                                "name": "kubeflow-volumes-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-t2nvh",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "kubeflow-volumes-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-volumes-operator",
                "serviceAccountName": "kubeflow-volumes-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "kubeflow-volumes-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "kubeflow-volumes-operator-config"
                        },
                        "name": "kubeflow-volumes-operator-config"
                    },
                    {
                        "name": "kube-api-access-t2nvh",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://9ec689ef05786f758f2d70381b01243170b07deb9847199f5c39c067b75c2596",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:51Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.29",
                "podIPs": [
                    {
                        "ip": "10.1.236.29"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "5a20c5c04df9bca5ced84f94033ad32fc321ebd387da7ce8232f04f9a281b9ea",
                    "cni.projectcalico.org/podIP": "10.1.236.30/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.30/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:42:55Z",
                "generateName": "minio-operator-",
                "labels": {
                    "controller-revision-hash": "minio-operator-6d9485b566",
                    "operator.juju.is/name": "minio",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "minio-operator-0"
                },
                "name": "minio-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "minio-operator",
                        "uid": "a5d744c5-5e4b-4c0a-87a9-7240bfb80950"
                    }
                ],
                "resourceVersion": "32491",
                "uid": "40427e79-67da-474c-9ba0-7d11d9a5a507"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=minio --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "minio"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.176"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-minio/template-agent.conf",
                                "name": "minio-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-minio/operator.yaml",
                                "name": "minio-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bxwt6",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "minio-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "minio-operator",
                "serviceAccountName": "minio-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "minio-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "minio-operator-config"
                        },
                        "name": "minio-operator-config"
                    },
                    {
                        "name": "kube-api-access-bxwt6",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:55Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:57Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:57Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:55Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://2a74c60a5692cf55ebc422db8c1202d42b79a94b1875147d5fa7fd467d697e9c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:56Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.30",
                "podIPs": [
                    {
                        "ip": "10.1.236.30"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:55Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "dd67ce2db79ce6e3a5fd67590ddcd76ff7cbbf2b051f9f1f1c43f90a7648c1fb",
                    "cni.projectcalico.org/podIP": "10.1.236.31/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.31/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:42:56Z",
                "generateName": "tensorboards-web-app-operator-",
                "labels": {
                    "controller-revision-hash": "tensorboards-web-app-operator-685bf585cd",
                    "operator.juju.is/name": "tensorboards-web-app",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "tensorboards-web-app-operator-0"
                },
                "name": "tensorboards-web-app-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "tensorboards-web-app-operator",
                        "uid": "42d62036-6c20-4ef9-aa92-f0a8184380a0"
                    }
                ],
                "resourceVersion": "32542",
                "uid": "41b26503-f3f9-4544-89b8-f7aafce6f0ff"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=tensorboards-web-app --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "tensorboards-web-app"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.211"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-tensorboards-web-app/template-agent.conf",
                                "name": "tensorboards-web-app-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-tensorboards-web-app/operator.yaml",
                                "name": "tensorboards-web-app-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-fstsx",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "tensorboards-web-app-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tensorboards-web-app-operator",
                "serviceAccountName": "tensorboards-web-app-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "tensorboards-web-app-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "tensorboards-web-app-operator-config"
                        },
                        "name": "tensorboards-web-app-operator-config"
                    },
                    {
                        "name": "kube-api-access-fstsx",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:56Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:58Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:58Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:56Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://d4f34994463e25c83a96511a06b4c0ebe19db4917a23c9bc35bab78ee933bddd",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:42:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.31",
                "podIPs": [
                    {
                        "ip": "10.1.236.31"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:56Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "c213f342c2c568e42ce1a220bebb20e30e46595313d05524e6a628fb1d2e04e1",
                    "cni.projectcalico.org/podIP": "10.1.236.32/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.32/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:42:59Z",
                "generateName": "oidc-gatekeeper-operator-",
                "labels": {
                    "controller-revision-hash": "oidc-gatekeeper-operator-86f7456fb9",
                    "operator.juju.is/name": "oidc-gatekeeper",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "oidc-gatekeeper-operator-0"
                },
                "name": "oidc-gatekeeper-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "oidc-gatekeeper-operator",
                        "uid": "ad807af9-b4be-4f94-beda-35276cabded6"
                    }
                ],
                "resourceVersion": "32687",
                "uid": "028f0d88-313f-45f2-a013-2f2b3d739ae8"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=oidc-gatekeeper --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "oidc-gatekeeper"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.126"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-oidc-gatekeeper/template-agent.conf",
                                "name": "oidc-gatekeeper-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-oidc-gatekeeper/operator.yaml",
                                "name": "oidc-gatekeeper-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-6qdtp",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "oidc-gatekeeper-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "oidc-gatekeeper-operator",
                "serviceAccountName": "oidc-gatekeeper-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "oidc-gatekeeper-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "oidc-gatekeeper-operator-config"
                        },
                        "name": "oidc-gatekeeper-operator-config"
                    },
                    {
                        "name": "kube-api-access-6qdtp",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:59Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:01Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:01Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:42:59Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0c16d9f99e6261a13ac1a8e481a25b2e77aa9794f62fdf01c97ca2a29f709c15",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:43:01Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.32",
                "podIPs": [
                    {
                        "ip": "10.1.236.32"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:42:59Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "cni.projectcalico.org/containerID": "e23e8e408df92564f33761844d83b8bbf8dcb1755eb11698ba1add3329f7a4f8",
                    "cni.projectcalico.org/podIP": "10.1.236.33/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.33/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                },
                "creationTimestamp": "2023-03-08T22:43:02Z",
                "generateName": "seldon-controller-manager-operator-",
                "labels": {
                    "controller-revision-hash": "seldon-controller-manager-operator-7684bb6558",
                    "operator.juju.is/name": "seldon-controller-manager",
                    "operator.juju.is/target": "application",
                    "statefulset.kubernetes.io/pod-name": "seldon-controller-manager-operator-0"
                },
                "name": "seldon-controller-manager-operator-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "seldon-controller-manager-operator",
                        "uid": "f9b08e31-71d2-4031-bf78-1da88fdb95cd"
                    }
                ],
                "resourceVersion": "32820",
                "uid": "870c8180-889f-45ab-a1b7-07e732be9977"
            },
            "spec": {
                "automountServiceAccountToken": true,
                "containers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=seldon-controller-manager --debug\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": [
                            {
                                "name": "JUJU_APPLICATION",
                                "value": "seldon-controller-manager"
                            },
                            {
                                "name": "JUJU_OPERATOR_SERVICE_IP",
                                "value": "10.152.183.37"
                            },
                            {
                                "name": "JUJU_OPERATOR_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "JUJU_OPERATOR_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-operator",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju/agents/application-seldon-controller-manager/template-agent.conf",
                                "name": "seldon-controller-manager-operator-config",
                                "subPath": "template-agent.conf"
                            },
                            {
                                "mountPath": "/var/lib/juju/agents/application-seldon-controller-manager/operator.yaml",
                                "name": "seldon-controller-manager-operator-config",
                                "subPath": "operator.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-7cvbx",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "seldon-controller-manager-operator-0",
                "nodeName": "k8s-master",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "seldon-controller-manager-operator",
                "serviceAccountName": "seldon-controller-manager-operator",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "seldon-controller-manager-agent.conf",
                                    "path": "template-agent.conf"
                                },
                                {
                                    "key": "operator.yaml",
                                    "path": "operator.yaml"
                                }
                            ],
                            "name": "seldon-controller-manager-operator-config"
                        },
                        "name": "seldon-controller-manager-operator-config"
                    },
                    {
                        "name": "kube-api-access-7cvbx",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:02Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:04Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:04Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:02Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://3d2e79dbdc0140a1dc07c1e8fe0c3b5b1a8a372608735d74395df7a9f6403799",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-operator",
                        "ready": true,
                        "restartCount": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-03-08T22:43:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "phase": "Running",
                "podIP": "10.1.236.33",
                "podIPs": [
                    {
                        "ip": "10.1.236.33"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:43:02Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "7f9141dcd57ed60562394cdc369c309a61d665d28fed0a235331fb43c223e87c",
                    "cni.projectcalico.org/podIP": "10.1.236.34/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.34/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kubeflow-volumes/0"
                },
                "creationTimestamp": "2023-03-08T22:43:46Z",
                "generateName": "kubeflow-volumes-788467b484-",
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-volumes",
                    "pod-template-hash": "788467b484"
                },
                "name": "kubeflow-volumes-788467b484-nnthq",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kubeflow-volumes-788467b484",
                        "uid": "d5e6a77c-d81f-45b9-aedf-723f2b84550d"
                    }
                ],
                "resourceVersion": "35264",
                "uid": "9d4eba8e-d9c3-4b84-a400-1dcf50dfc582"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_PREFIX",
                                "value": "/volumes"
                            },
                            {
                                "name": "APP_SECURE_COOKIES",
                                "value": "false"
                            },
                            {
                                "name": "BACKEND_MODE",
                                "value": "development"
                            },
                            {
                                "name": "USERID_HEADER",
                                "value": "kubeflow-userid"
                            },
                            {
                                "name": "USERID_PREFIX"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/6tvhkd5az86qo4m4zxeoqip1iejoxusiphggc/oci-image@sha256:fdb4a5d15596fe855f49dd63a835e04dc0e86578b282d8132bf7eee31fab7a3c",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "volumes-web-app",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xl2dl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kubeflow-volumes-volumes-web-app-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xl2dl",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kubeflow-volumes",
                "serviceAccountName": "kubeflow-volumes",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-xl2dl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:46Z",
                        "message": "containers with unready status: [volumes-web-app]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:46Z",
                        "message": "containers with unready status: [volumes-web-app]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:46Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/6tvhkd5az86qo4m4zxeoqip1iejoxusiphggc/oci-image@sha256:fdb4a5d15596fe855f49dd63a835e04dc0e86578b282d8132bf7eee31fab7a3c",
                        "imageID": "",
                        "lastState": {},
                        "name": "volumes-web-app",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://129ed84e3a89a82e85fe54a8b0585293169561ea9cf45e13cfb8d0f573cf8eec",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://129ed84e3a89a82e85fe54a8b0585293169561ea9cf45e13cfb8d0f573cf8eec",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:43:55Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:43:48Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.34",
                "podIPs": [
                    {
                        "ip": "10.1.236.34"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:43:46Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "ac74f3f9e4835b69d5d8412cdc36c643fc2eccedc958d399a016d3498f77d74b",
                    "cni.projectcalico.org/podIP": "10.1.236.35/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.35/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "seldon-controller-manager/0"
                },
                "creationTimestamp": "2023-03-08T22:43:50Z",
                "generateName": "seldon-controller-manager-556f44cf4c-",
                "labels": {
                    "app.kubernetes.io/name": "seldon-controller-manager",
                    "pod-template-hash": "556f44cf4c"
                },
                "name": "seldon-controller-manager-556f44cf4c-99vfj",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "seldon-controller-manager-556f44cf4c",
                        "uid": "c263f4f9-213b-47e3-bf46-1b32a66c64f2"
                    }
                ],
                "resourceVersion": "35643",
                "uid": "c78ec643-c0e6-458b-91f5-6facdc42a39c"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--enable-leader-election",
                            "--webhook-port",
                            "4443",
                            "--create-resources",
                            "true"
                        ],
                        "command": [
                            "/manager"
                        ],
                        "env": [
                            {
                                "name": "AMBASSADOR_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                "value": "false"
                            },
                            {
                                "name": "CONTROLLER_ID"
                            },
                            {
                                "name": "DEFAULT_USER_ID",
                                "value": "8888"
                            },
                            {
                                "name": "EXECUTOR_CONTAINER_IMAGE_AND_VERSION",
                                "value": "docker.io/seldonio/seldon-core-executor:1.14.0"
                            },
                            {
                                "name": "EXECUTOR_CONTAINER_IMAGE_PULL_POLICY",
                                "value": "IfNotPresent"
                            },
                            {
                                "name": "EXECUTOR_CONTAINER_SERVICE_ACCOUNT_NAME",
                                "value": "default"
                            },
                            {
                                "name": "EXECUTOR_CONTAINER_USER",
                                "value": "8888"
                            },
                            {
                                "name": "EXECUTOR_DEFAULT_CPU_LIMIT",
                                "value": "0.5"
                            },
                            {
                                "name": "EXECUTOR_DEFAULT_CPU_REQUEST",
                                "value": "0.5"
                            },
                            {
                                "name": "EXECUTOR_DEFAULT_MEMORY_LIMIT",
                                "value": "512Mi"
                            },
                            {
                                "name": "EXECUTOR_DEFAULT_MEMORY_REQUEST",
                                "value": "512Mi"
                            },
                            {
                                "name": "EXECUTOR_PROMETHEUS_PATH",
                                "value": "/prometheus"
                            },
                            {
                                "name": "EXECUTOR_REQUEST_LOGGER_DEFAULT_ENDPOINT",
                                "value": "http://default-broker"
                            },
                            {
                                "name": "EXECUTOR_SERVER_METRICS_PORT_NAME",
                                "value": "metrics"
                            },
                            {
                                "name": "EXECUTOR_SERVER_PORT",
                                "value": "8000"
                            },
                            {
                                "name": "ISTIO_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "ISTIO_GATEWAY",
                                "value": "istio-system/seldon-gateway"
                            },
                            {
                                "name": "ISTIO_TLS_MODE"
                            },
                            {
                                "name": "KEDA_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "MANAGER_CREATE_RESOURCES",
                                "value": "true"
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "value": "kubeflow"
                            },
                            {
                                "name": "PREDICTIVE_UNIT_DEFAULT_ENV_SECRET_REF_NAME"
                            },
                            {
                                "name": "PREDICTIVE_UNIT_METRICS_PORT_NAME",
                                "value": "metrics"
                            },
                            {
                                "name": "PREDICTIVE_UNIT_SERVICE_PORT",
                                "value": "9000"
                            },
                            {
                                "name": "RELATED_IMAGE_EXECUTOR"
                            },
                            {
                                "name": "RELATED_IMAGE_EXPLAINER"
                            },
                            {
                                "name": "RELATED_IMAGE_MLFLOWSERVER"
                            },
                            {
                                "name": "RELATED_IMAGE_MOCK_CLASSIFIER"
                            },
                            {
                                "name": "RELATED_IMAGE_SKLEARNSERVER"
                            },
                            {
                                "name": "RELATED_IMAGE_STORAGE_INITIALIZER"
                            },
                            {
                                "name": "RELATED_IMAGE_TENSORFLOW"
                            },
                            {
                                "name": "RELATED_IMAGE_TFPROXY"
                            },
                            {
                                "name": "RELATED_IMAGE_XGBOOSTSERVER"
                            },
                            {
                                "name": "USE_EXECUTOR",
                                "value": "true"
                            },
                            {
                                "name": "WATCH_NAMESPACE"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/c5e3s519ko1quc9tqnysy92oeeqmgvwvhxvgf/oci-image@sha256:eb811b6b6fc62f3c41ec353cef15af7a59814afbbeb71cf619d9c58f7d9c2082",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "seldon-core",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 4443,
                                "name": "webhook",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/tmp/operator-resources",
                                "name": "seldon-controller-manager-operator-resources-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8f5ct",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "seldon-controller-manager-seldon-core-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-8f5ct",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "seldon-controller-manager",
                "serviceAccountName": "seldon-controller-manager",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "configmap.yaml",
                                    "path": "configmap.yaml"
                                },
                                {
                                    "key": "crd-v1.yaml",
                                    "path": "crd-v1.yaml"
                                },
                                {
                                    "key": "service.yaml",
                                    "path": "service.yaml"
                                },
                                {
                                    "key": "validate.yaml",
                                    "path": "validate.yaml"
                                }
                            ],
                            "name": "seldon-controller-manager-operator-resources-config"
                        },
                        "name": "seldon-controller-manager-operator-resources-config"
                    },
                    {
                        "name": "kube-api-access-8f5ct",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:04Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:50Z",
                        "message": "containers with unready status: [seldon-core]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:50Z",
                        "message": "containers with unready status: [seldon-core]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/c5e3s519ko1quc9tqnysy92oeeqmgvwvhxvgf/oci-image@sha256:eb811b6b6fc62f3c41ec353cef15af7a59814afbbeb71cf619d9c58f7d9c2082",
                        "imageID": "",
                        "lastState": {},
                        "name": "seldon-core",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://f20c5b08e526fbd153e464db2c9f6ffd7beaced9ead7ae8d2f69746bc4c6741c",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://f20c5b08e526fbd153e464db2c9f6ffd7beaced9ead7ae8d2f69746bc4c6741c",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:44:03Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:43:52Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.35",
                "podIPs": [
                    {
                        "ip": "10.1.236.35"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:43:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "97f18af54f33ccc045be10ad577ceee0e01a1fe3d222bd76e6fe9e3dc10a2aa2",
                    "cni.projectcalico.org/podIP": "10.1.236.36/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.36/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "tensorboards-web-app/0"
                },
                "creationTimestamp": "2023-03-08T22:43:55Z",
                "generateName": "tensorboards-web-app-54f98cc8cc-",
                "labels": {
                    "app.kubernetes.io/name": "tensorboards-web-app",
                    "pod-template-hash": "54f98cc8cc"
                },
                "name": "tensorboards-web-app-54f98cc8cc-hgwhc",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "tensorboards-web-app-54f98cc8cc",
                        "uid": "bb9d5af5-9426-4f93-9691-4e40bad1f4db"
                    }
                ],
                "resourceVersion": "35695",
                "uid": "29043bb9-4c85-4cf0-9440-4566eede44ab"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "APP_PREFIX",
                                "value": "/tensorboards"
                            },
                            {
                                "name": "APP_SECURE_COOKIES",
                                "value": "False"
                            },
                            {
                                "name": "BACKEND_MODE",
                                "value": "development"
                            },
                            {
                                "name": "USERID_HEADER",
                                "value": "kubeflow-userid"
                            },
                            {
                                "name": "USERID_PREFIX"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/degj4xf9nzft20x3gi4ucfjy0n3to6q2wzno8/oci-image@sha256:eef68a51bf9af0f69c91ef72e8d5716da3d5dee5f8f159e966ff3ba456568033",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "tensorboards-web-app",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xjp7h",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "tensorboards-web-app-tensorboards-web-app-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xjp7h",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "tensorboards-web-app",
                "serviceAccountName": "tensorboards-web-app",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-xjp7h",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:05Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "message": "containers with unready status: [tensorboards-web-app]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "message": "containers with unready status: [tensorboards-web-app]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/degj4xf9nzft20x3gi4ucfjy0n3to6q2wzno8/oci-image@sha256:eef68a51bf9af0f69c91ef72e8d5716da3d5dee5f8f159e966ff3ba456568033",
                        "imageID": "",
                        "lastState": {},
                        "name": "tensorboards-web-app",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://79857805bd05a6367aa5a8e73b5281d570988b53abadd74da3b7f554df926a65",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://79857805bd05a6367aa5a8e73b5281d570988b53abadd74da3b7f554df926a65",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:44:04Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:43:57Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.36",
                "podIPs": [
                    {
                        "ip": "10.1.236.36"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:43:55Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "1d7588ab0262f6b3c980cfad3cd840046b4907188f489fefc18cb8871f857d4e",
                    "cni.projectcalico.org/podIP": "10.1.236.38/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.38/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "minio/0"
                },
                "creationTimestamp": "2023-03-08T22:43:57Z",
                "generateName": "minio-",
                "labels": {
                    "app.kubernetes.io/name": "minio",
                    "controller-revision-hash": "minio-5d67764b6b",
                    "statefulset.kubernetes.io/pod-name": "minio-0"
                },
                "name": "minio-0",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "minio",
                        "uid": "dc8002f8-a4ee-4cba-a637-a61c0d93de7b"
                    }
                ],
                "resourceVersion": "36362",
                "uid": "0b303c24-bf2a-4c88-adda-4c27eb919e45"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "server",
                            "/data",
                            "--certs-dir",
                            "/minio/.minio/certs",
                            "--console-address",
                            ":9001"
                        ],
                        "env": [
                            {
                                "name": "configmap-hash",
                                "value": "45d7f60ef826de105538d6a2a71e0445ff055e02b93f8eb54a8eb9a51235d1d0"
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "minio-secret"
                                }
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:1755999849a392bdf00b778705f4cf5c1c971a1ef55a17e9075e56f8d58bdc2f",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "minio",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "name": "minio",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9001,
                                "name": "console",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/minio/.minio/certs/CAs",
                                "name": "ssl-ca"
                            },
                            {
                                "mountPath": "/data",
                                "name": "minio-data-ab1c9000"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-qthvf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "minio-0",
                "imagePullSecrets": [
                    {
                        "name": "minio-minio-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-qthvf",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "minio-endpoints",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "minio-data-ab1c9000",
                        "persistentVolumeClaim": {
                            "claimName": "minio-data-ab1c9000-minio-0"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "emptyDir": {},
                        "name": "ssl-ca"
                    },
                    {
                        "name": "kube-api-access-qthvf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:09Z",
                        "message": "containers with unready status: [minio]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:09Z",
                        "message": "containers with unready status: [minio]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:1755999849a392bdf00b778705f4cf5c1c971a1ef55a17e9075e56f8d58bdc2f",
                        "imageID": "",
                        "lastState": {},
                        "name": "minio",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://6864a523e467fd5b038f2d2294ec5b1c3b466a48e35de1973f061b88350e20de",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://6864a523e467fd5b038f2d2294ec5b1c3b466a48e35de1973f061b88350e20de",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:44:17Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:44:11Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.38",
                "podIPs": [
                    {
                        "ip": "10.1.236.38"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:44:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "1c548497e364287432a856a035f7f53744e4aadd75923a5644887072a17f5358",
                    "cni.projectcalico.org/podIP": "10.1.236.40/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.40/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-profile-controller/0"
                },
                "creationTimestamp": "2023-03-08T22:44:27Z",
                "generateName": "kfp-profile-controller-7f546c77c6-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-profile-controller",
                    "pod-template-hash": "7f546c77c6"
                },
                "name": "kfp-profile-controller-7f546c77c6-7vzvq",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-profile-controller-7f546c77c6",
                        "uid": "67186cac-0a2d-4afa-a4c7-99c9c75747d6"
                    }
                ],
                "resourceVersion": "37325",
                "uid": "2b8d39b0-74d6-441a-8662-0b72980d42f2"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "/hooks/sync.py"
                        ],
                        "command": [
                            "python"
                        ],
                        "env": [
                            {
                                "name": "CONTROLLER_PORT",
                                "value": "80"
                            },
                            {
                                "name": "DISABLE_ISTIO_SIDECAR",
                                "value": "false"
                            },
                            {
                                "name": "KFP_DEFAULT_PIPELINE_ROOT"
                            },
                            {
                                "name": "KFP_VERSION",
                                "value": "2.0.0-alpha.3"
                            },
                            {
                                "name": "METADATA_GRPC_SERVICE_HOST",
                                "value": "mlmd.kubeflow"
                            },
                            {
                                "name": "METADATA_GRPC_SERVICE_PORT",
                                "value": "8080"
                            },
                            {
                                "name": "MINIO_HOST",
                                "value": "minio"
                            },
                            {
                                "name": "MINIO_NAMESPACE",
                                "value": "kubeflow"
                            },
                            {
                                "name": "MINIO_PORT",
                                "value": "9000"
                            }
                        ],
                        "envFrom": [
                            {
                                "secretRef": {
                                    "name": "kfp-profile-controller-minio-credentials"
                                }
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/gm1axzm8pxqlan75l3a7znu2mv5bf0pm1wfar/oci-image@sha256:b4de8787873726d9a4b39f2166a30f2d3fc1b8e35079cf55c9aef72c5e841e6a",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kubeflow-pipelines-profile-controller",
                        "ports": [
                            {
                                "containerPort": 80,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/hooks",
                                "name": "kubeflow-pipelines-profile-controller-code"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mmbxl",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-profile-controller-kubeflow-pipelines-profile-controller-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-mmbxl",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "sync.py",
                                    "path": "sync.py"
                                }
                            ],
                            "name": "kubeflow-pipelines-profile-controller-code"
                        },
                        "name": "kubeflow-pipelines-profile-controller-code"
                    },
                    {
                        "name": "kube-api-access-mmbxl",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:35Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:27Z",
                        "message": "containers with unready status: [kubeflow-pipelines-profile-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:27Z",
                        "message": "containers with unready status: [kubeflow-pipelines-profile-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:27Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/gm1axzm8pxqlan75l3a7znu2mv5bf0pm1wfar/oci-image@sha256:b4de8787873726d9a4b39f2166a30f2d3fc1b8e35079cf55c9aef72c5e841e6a",
                        "imageID": "",
                        "lastState": {},
                        "name": "kubeflow-pipelines-profile-controller",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://1cabe80762f0d34aa10012b214254dc987587fc330d40ada55a5e3bf43a0e9af",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://1cabe80762f0d34aa10012b214254dc987587fc330d40ada55a5e3bf43a0e9af",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:44:34Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:44:29Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.40",
                "podIPs": [
                    {
                        "ip": "10.1.236.40"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:44:27Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "77f287df26f9c038295b2f35979046a5bd0ab9473ced6d7fea747ca8cdb6779c",
                    "cni.projectcalico.org/podIP": "10.1.236.39/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.39/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-api/0"
                },
                "creationTimestamp": "2023-03-08T22:44:24Z",
                "generateName": "kfp-api-6599f459-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-api",
                    "pod-template-hash": "6599f459"
                },
                "name": "kfp-api-6599f459-rr85x",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-api-6599f459",
                        "uid": "48f2b92e-a353-4fd1-9802-30268863c127"
                    }
                ],
                "resourceVersion": "41179",
                "uid": "65344f49-a697-42b2-8065-a23c09f98119"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "value": "kubeflow"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/6dmow0tt4o9ss0keyowwkifpww9nhegg6exlj/oci-image@sha256:bf747d5ca70ff123ec2b6150c91c0783e850039de6dad03c266004187e12d34b",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "wget",
                                    "-q",
                                    "-S",
                                    "-O",
                                    "-",
                                    "http://localhost:8888/apis/v1beta1/healthz"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 3,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 2
                        },
                        "name": "ml-pipeline-api-server",
                        "ports": [
                            {
                                "containerPort": 8888,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8887,
                                "name": "grpc",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "wget",
                                    "-q",
                                    "-S",
                                    "-O",
                                    "-",
                                    "http://localhost:8888/apis/v1beta1/healthz"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 3,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 2
                        },
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "startupProbe": {
                            "exec": {
                                "command": [
                                    "wget",
                                    "-q",
                                    "-S",
                                    "-O",
                                    "-",
                                    "http://localhost:8888/apis/v1beta1/healthz"
                                ]
                            },
                            "failureThreshold": 12,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/config",
                                "name": "kfp-api-config-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nfftw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-api-ml-pipeline-api-server-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-nfftw",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-api",
                "serviceAccountName": "kfp-api",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config.json",
                                    "path": "config.json"
                                },
                                {
                                    "key": "sample_config.json",
                                    "path": "sample_config.json"
                                }
                            ],
                            "name": "kfp-api-config-config"
                        },
                        "name": "kfp-api-config-config"
                    },
                    {
                        "name": "kube-api-access-nfftw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:45:49Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:25Z",
                        "message": "containers with unready status: [ml-pipeline-api-server]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:25Z",
                        "message": "containers with unready status: [ml-pipeline-api-server]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:25Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/6dmow0tt4o9ss0keyowwkifpww9nhegg6exlj/oci-image@sha256:bf747d5ca70ff123ec2b6150c91c0783e850039de6dad03c266004187e12d34b",
                        "imageID": "",
                        "lastState": {},
                        "name": "ml-pipeline-api-server",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://07fcf01d3524f4790d2d2b557fa4eea73cf811bb915e20ed536a2ed71b6bc079",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://07fcf01d3524f4790d2d2b557fa4eea73cf811bb915e20ed536a2ed71b6bc079",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:45:48Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:44:27Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.39",
                "podIPs": [
                    {
                        "ip": "10.1.236.39"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:44:25Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "cbc829f9c2ebcd94ae0fd5302286496036cd640bc1f10c4113d95d449a05c402",
                    "cni.projectcalico.org/podIP": "10.1.236.42/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.42/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "argo-controller/0"
                },
                "creationTimestamp": "2023-03-08T22:44:30Z",
                "generateName": "argo-controller-777758989-",
                "labels": {
                    "app.kubernetes.io/name": "argo-controller",
                    "pod-template-hash": "777758989"
                },
                "name": "argo-controller-777758989-2rpdg",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "argo-controller-777758989",
                        "uid": "8b0345f4-7b5a-42ca-b8fa-385f0953769a"
                    }
                ],
                "resourceVersion": "41228",
                "uid": "d0e46429-6dca-45a7-ac88-4a6e7c0f4d98"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--configmap",
                            "argo-controller-configmap-config",
                            "--executor-image",
                            "argoproj/argoexec:v3.3.8"
                        ],
                        "env": [
                            {
                                "name": "ARGO_NAMESPACE",
                                "value": "kubeflow"
                            },
                            {
                                "name": "LEADER_ELECTION_IDENTITY",
                                "value": "argo-controller"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/evuh9usc9rqbwxwj0i9lkkjpzs1dwy053isqa/oci-image@sha256:669ebd548e4619d2a4ca03181302c4f19375890ec0fc688ccf7c4cff6bf5972f",
                        "imagePullPolicy": "Always",
                        "name": "argo-controller",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/config-map.yaml",
                                "name": "argo-controller-configmap-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bqffc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "argo-controller-argo-controller-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bqffc",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "argo-controller",
                "serviceAccountName": "argo-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config",
                                    "path": "config"
                                }
                            ],
                            "name": "argo-controller-configmap-config"
                        },
                        "name": "argo-controller-configmap-config"
                    },
                    {
                        "name": "kube-api-access-bqffc",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:45:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:31Z",
                        "message": "containers with unready status: [argo-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:31Z",
                        "message": "containers with unready status: [argo-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:30Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/evuh9usc9rqbwxwj0i9lkkjpzs1dwy053isqa/oci-image@sha256:669ebd548e4619d2a4ca03181302c4f19375890ec0fc688ccf7c4cff6bf5972f",
                        "imageID": "",
                        "lastState": {},
                        "name": "argo-controller",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://fbc78d1c10594c584d4bd550118da9e2afe99bd435bb0550dce0071754b27a00",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://fbc78d1c10594c584d4bd550118da9e2afe99bd435bb0550dce0071754b27a00",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:45:50Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:44:32Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.42",
                "podIPs": [
                    {
                        "ip": "10.1.236.42"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:44:31Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "75bba3301ccde5fc702b81268189c355a4ec9ae9cd45e6a9c957927d8ffce676",
                    "cni.projectcalico.org/podIP": "10.1.236.41/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.41/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "kfp-persistence/0"
                },
                "creationTimestamp": "2023-03-08T22:44:28Z",
                "generateName": "kfp-persistence-7b6649cb68-",
                "labels": {
                    "app.kubernetes.io/name": "kfp-persistence",
                    "pod-template-hash": "7b6649cb68"
                },
                "name": "kfp-persistence-7b6649cb68-vgc9b",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kfp-persistence-7b6649cb68",
                        "uid": "b766649c-c646-42df-9f77-7cf8bf456b24"
                    }
                ],
                "resourceVersion": "41274",
                "uid": "30b2b668-71a0-410a-92cc-d622fca8e108"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "persistence_agent",
                            "--logtostderr=true",
                            "--namespace=",
                            "--ttlSecondsAfterWorkflowFinish=86400",
                            "--numWorker=2",
                            "--mlPipelineAPIServerName=kfp-api.kubeflow"
                        ],
                        "env": [
                            {
                                "name": "KUBEFLOW_USERID_HEADER",
                                "value": "kubeflow-userid"
                            },
                            {
                                "name": "KUBEFLOW_USERID_PREFIX"
                            },
                            {
                                "name": "MULTIUSER",
                                "value": "true"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/530iqpar7ey6vmhy5v19z5dnqywn1439aqet2/oci-image@sha256:abcf9710a699b35707ef472355519e5d044708ccbc8b5c8c4c06982d01901132",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "ml-pipeline-persistenceagent",
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-msrxm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "kfp-persistence-ml-pipeline-persistenceagent-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-msrxm",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kfp-persistence",
                "serviceAccountName": "kfp-persistence",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "name": "kube-api-access-msrxm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:45:51Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:28Z",
                        "message": "containers with unready status: [ml-pipeline-persistenceagent]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:28Z",
                        "message": "containers with unready status: [ml-pipeline-persistenceagent]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:44:28Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "registry.jujucharms.com/charm/530iqpar7ey6vmhy5v19z5dnqywn1439aqet2/oci-image@sha256:abcf9710a699b35707ef472355519e5d044708ccbc8b5c8c4c06982d01901132",
                        "imageID": "",
                        "lastState": {},
                        "name": "ml-pipeline-persistenceagent",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://3484dac9fbeacdee99545ae27aba6219f1e0cffb41d93f0c457272a384f84ee1",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://3484dac9fbeacdee99545ae27aba6219f1e0cffb41d93f0c457272a384f84ee1",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:45:51Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:44:30Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "10.1.236.41",
                "podIPs": [
                    {
                        "ip": "10.1.236.41"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:44:28Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "edf26bdd0c6dad86b5c65327f189c6102c5996cf123ad755ea76c6eb494a0685",
                    "cni.projectcalico.org/podIP": "10.1.235.202/32",
                    "cni.projectcalico.org/podIPs": "10.1.235.202/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "admission-webhook/0"
                },
                "creationTimestamp": "2023-03-08T22:36:18Z",
                "generateName": "admission-webhook-fc78958db-",
                "labels": {
                    "app.kubernetes.io/name": "admission-webhook",
                    "pod-template-hash": "fc78958db"
                },
                "name": "admission-webhook-fc78958db-wnftk",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "admission-webhook-fc78958db",
                        "uid": "90cc9988-c116-4903-a841-a1a713593204"
                    }
                ],
                "resourceVersion": "46108",
                "uid": "3abc319a-c650-4be6-bc55-5a56ab312d20"
            },
            "spec": {
                "containers": [
                    {
                        "image": "registry.jujucharms.com/charm/ktca4ipxj5dyg5s0cl1o0j2hy426j99t2uged/oci-image@sha256:129fe9251569490b90d83643ff548a0bbf78b5ab802b0075848168a4bb7909b1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "admission-webhook",
                        "ports": [
                            {
                                "containerPort": 4443,
                                "name": "webhook",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/etc/webhook/certs",
                                "name": "admission-webhook-certs-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-92rdm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "admission-webhook-admission-webhook-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-92rdm",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "admission-webhook",
                "serviceAccountName": "admission-webhook",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "cert.pem",
                                    "path": "cert.pem"
                                },
                                {
                                    "key": "key.pem",
                                    "path": "key.pem"
                                }
                            ],
                            "name": "admission-webhook-certs-config"
                        },
                        "name": "admission-webhook-certs-config"
                    },
                    {
                        "name": "kube-api-access-92rdm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:30Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:06Z",
                        "message": "containers with unready status: [admission-webhook]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:06Z",
                        "message": "containers with unready status: [admission-webhook]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:36:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0326b3d15febcbad4c10722bdbcd8cd5feca18aded4624b4a742270de966fc28",
                        "image": "sha256:d24036f9b026d9db274abd9d0c5a70e811c2262a42e2df1307a435c357be0bd6",
                        "imageID": "registry.jujucharms.com/charm/ktca4ipxj5dyg5s0cl1o0j2hy426j99t2uged/oci-image@sha256:129fe9251569490b90d83643ff548a0bbf78b5ab802b0075848168a4bb7909b1",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://0326b3d15febcbad4c10722bdbcd8cd5feca18aded4624b4a742270de966fc28",
                                "exitCode": 255,
                                "finishedAt": "2023-03-08T22:47:24Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:47:24Z"
                            }
                        },
                        "name": "admission-webhook",
                        "ready": false,
                        "restartCount": 7,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=admission-webhook pod=admission-webhook-fc78958db-wnftk_kubeflow(3abc319a-c650-4be6-bc55-5a56ab312d20)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://8a6b85fdd6b5c7d5b372a309cbbdd52934fee96033706f4469ddaebbdfc33c63",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://8a6b85fdd6b5c7d5b372a309cbbdd52934fee96033706f4469ddaebbdfc33c63",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:36:29Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:36:19Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.235.202",
                "podIPs": [
                    {
                        "ip": "10.1.235.202"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:36:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                    "charm.juju.is/modified-version": "0",
                    "cni.projectcalico.org/containerID": "1e1b91293c0aa21a0a45846ef43b11a3025dcab8609dd9161c71aa0c451bac2d",
                    "cni.projectcalico.org/podIP": "10.1.236.3/32",
                    "cni.projectcalico.org/podIPs": "10.1.236.3/32",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "seccomp.security.beta.kubernetes.io/pod": "docker/default",
                    "unit.juju.is/id": "katib-controller/0"
                },
                "creationTimestamp": "2023-03-08T22:37:46Z",
                "generateName": "katib-controller-c79cd5d6f-",
                "labels": {
                    "app.kubernetes.io/name": "katib-controller",
                    "pod-template-hash": "c79cd5d6f"
                },
                "name": "katib-controller-c79cd5d6f-887qx",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "katib-controller-c79cd5d6f",
                        "uid": "c34d93e3-deeb-47ff-b87f-25f8dd1efc04"
                    }
                ],
                "resourceVersion": "53747",
                "uid": "b3d251dc-7668-4aa9-8483-7b03e70bfdd5"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--webhook-port=443",
                            "--trial-resources=Job.v1.batch",
                            "--trial-resources=TFJob.v1.kubeflow.org",
                            "--trial-resources=PyTorchJob.v1.kubeflow.org",
                            "--trial-resources=MPIJob.v1.kubeflow.org",
                            "--trial-resources=PipelineRun.v1beta1.tekton.dev"
                        ],
                        "command": [
                            "./katib-controller"
                        ],
                        "env": [
                            {
                                "name": "KATIB_CORE_NAMESPACE",
                                "value": "kubeflow"
                            }
                        ],
                        "image": "registry.jujucharms.com/charm/3fmkpe8hdk6uwmdvuga521r2z95vdr4xeilz9/oci-image@sha256:03d47fb974edbdd41b4a7b0cc704be48d6dd9fae0c9d6216c50d618d6c29f0ba",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "katib-controller",
                        "ports": [
                            {
                                "containerPort": 443,
                                "name": "webhook",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 8080,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "securityContext": {
                            "allowPrivilegeEscalation": true,
                            "readOnlyRootFilesystem": false,
                            "runAsNonRoot": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/usr/bin/juju-run",
                                "name": "juju-data-dir",
                                "subPath": "tools/jujud"
                            },
                            {
                                "mountPath": "/tmp/cert",
                                "name": "katib-controller-certs-config"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xbswv",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "imagePullSecrets": [
                    {
                        "name": "katib-controller-katib-controller-secret"
                    }
                ],
                "initContainers": [
                    {
                        "args": [
                            "-c",
                            "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "image": "jujusolutions/jujud-operator:2.9.42",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "juju-pod-init",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/juju",
                                "name": "juju-data-dir"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-xbswv",
                                "readOnly": true
                            }
                        ],
                        "workingDir": "/var/lib/juju"
                    }
                ],
                "nodeName": "k8s-master",
                "nodeSelector": {
                    "kubernetes.io/arch": "amd64"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "katib-controller",
                "serviceAccountName": "katib-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "juju-data-dir"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "ca.crt",
                                    "path": "ca.crt"
                                },
                                {
                                    "key": "tls.crt",
                                    "path": "tls.crt"
                                },
                                {
                                    "key": "tls.key",
                                    "path": "tls.key"
                                }
                            ],
                            "name": "katib-controller-certs-config"
                        },
                        "name": "katib-controller-certs-config"
                    },
                    {
                        "name": "kube-api-access-xbswv",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:38:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:50:26Z",
                        "message": "containers with unready status: [katib-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:50:26Z",
                        "message": "containers with unready status: [katib-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-03-08T22:37:46Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://21e4a4d6b56728587571c6c6e86fbcdf4cca0a60814f55c4868aad6c8f8a19cc",
                        "image": "sha256:5040123869528b432e9b1f61071797c39876bd3860e5095daa30d9377e6e2ad5",
                        "imageID": "registry.jujucharms.com/charm/3fmkpe8hdk6uwmdvuga521r2z95vdr4xeilz9/oci-image@sha256:03d47fb974edbdd41b4a7b0cc704be48d6dd9fae0c9d6216c50d618d6c29f0ba",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://21e4a4d6b56728587571c6c6e86fbcdf4cca0a60814f55c4868aad6c8f8a19cc",
                                "exitCode": 1,
                                "finishedAt": "2023-03-08T22:50:25Z",
                                "reason": "Error",
                                "startedAt": "2023-03-08T22:50:21Z"
                            }
                        },
                        "name": "katib-controller",
                        "ready": false,
                        "restartCount": 7,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=katib-controller pod=katib-controller-c79cd5d6f-887qx_kubeflow(b3d251dc-7668-4aa9-8483-7b03e70bfdd5)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.1.55",
                "initContainerStatuses": [
                    {
                        "containerID": "containerd://6bdcafd232b7c1c40a0d4f72f6b0b8b2c10a44b8bb57e774b328812dd22ac8b8",
                        "image": "docker.io/jujusolutions/jujud-operator:2.9.42",
                        "imageID": "docker.io/jujusolutions/jujud-operator@sha256:c2283c0b55c54981ce6306735f3769f880d807a5050f42b615b37da87b28e9db",
                        "lastState": {},
                        "name": "juju-pod-init",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "containerd://6bdcafd232b7c1c40a0d4f72f6b0b8b2c10a44b8bb57e774b328812dd22ac8b8",
                                "exitCode": 0,
                                "finishedAt": "2023-03-08T22:38:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-03-08T22:37:48Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "10.1.236.3",
                "podIPs": [
                    {
                        "ip": "10.1.236.3"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-03-08T22:37:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T21:59:00Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "name": "kubernetes",
                "namespace": "default",
                "resourceVersion": "73",
                "uid": "f4c1e1b1-c9b0-461c-8f7a-710b36cd86d0"
            },
            "spec": {
                "clusterIP": "10.152.183.1",
                "clusterIPs": [
                    "10.152.183.1"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 16443
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.152.183.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"},{\"name\":\"metrics\",\"port\":9153,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T21:59:37Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "kube-dns",
                "namespace": "kube-system",
                "resourceVersion": "380",
                "uid": "57b93372-a491-4ef6-a52c-ca9b8976016d"
            },
            "spec": {
                "clusterIP": "10.152.183.10",
                "clusterIPs": [
                    "10.152.183.10"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "dns",
                        "port": 53,
                        "protocol": "UDP",
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "port": 53,
                        "protocol": "TCP",
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "port": 9153,
                        "protocol": "TCP",
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:02Z",
                "labels": {
                    "k8s-app": "metrics-server"
                },
                "name": "metrics-server",
                "namespace": "kube-system",
                "resourceVersion": "455",
                "uid": "472cc9a2-f93d-4eb8-98a7-21582be50b47"
            },
            "spec": {
                "clusterIP": "10.152.183.179",
                "clusterIPs": [
                    "10.152.183.179"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "https"
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"targetPort\":8443}],\"selector\":{\"k8s-app\":\"kubernetes-dashboard\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:06Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resourceVersion": "464",
                "uid": "4e644a4c-9b58-45da-8e32-aeeb368ad863"
            },
            "spec": {
                "clusterIP": "10.152.183.57",
                "clusterIPs": [
                    "10.152.183.57"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":8000,\"targetPort\":8000}],\"selector\":{\"k8s-app\":\"dashboard-metrics-scraper\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:06Z",
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "name": "dashboard-metrics-scraper",
                "namespace": "kube-system",
                "resourceVersion": "476",
                "uid": "dff07bc2-2ac0-49c6-b289-a320e2bafaee"
            },
            "spec": {
                "clusterIP": "10.152.183.218",
                "clusterIPs": [
                    "10.152.183.218"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 8000,
                        "protocol": "TCP",
                        "targetPort": 8000
                    }
                ],
                "selector": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\",\"service.alpha.openshift.io/serving-cert-secret-name\":\"operator-tls\"},\"labels\":{\"name\":\"minio-operator\"},\"name\":\"operator\",\"namespace\":\"minio-operator\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":4222},{\"name\":\"http\",\"port\":4221}],\"selector\":{\"name\":\"minio-operator\",\"operator\":\"leader\"},\"type\":\"ClusterIP\"}}\n",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io",
                    "service.alpha.openshift.io/serving-cert-secret-name": "operator-tls"
                },
                "creationTimestamp": "2023-03-08T22:00:32Z",
                "labels": {
                    "name": "minio-operator"
                },
                "name": "operator",
                "namespace": "minio-operator",
                "resourceVersion": "511",
                "uid": "1bb9a381-033a-4b48-b7bd-bdd7b789f572"
            },
            "spec": {
                "clusterIP": "10.152.183.114",
                "clusterIPs": [
                    "10.152.183.114"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 4222,
                        "protocol": "TCP",
                        "targetPort": 4222
                    },
                    {
                        "name": "http",
                        "port": 4221,
                        "protocol": "TCP",
                        "targetPort": 4221
                    }
                ],
                "selector": {
                    "name": "minio-operator",
                    "operator": "leader"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\"},\"labels\":{\"name\":\"console\"},\"name\":\"console\",\"namespace\":\"minio-operator\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":9090},{\"name\":\"https\",\"port\":9443}],\"selector\":{\"app\":\"console\"}}}\n",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:00:32Z",
                "labels": {
                    "name": "console"
                },
                "name": "console",
                "namespace": "minio-operator",
                "resourceVersion": "520",
                "uid": "652ab19e-c040-45fc-91a6-2809018a812c"
            },
            "spec": {
                "clusterIP": "10.152.183.156",
                "clusterIPs": [
                    "10.152.183.156"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 9090,
                        "protocol": "TCP",
                        "targetPort": 9090
                    },
                    {
                        "name": "https",
                        "port": 9443,
                        "protocol": "TCP",
                        "targetPort": 9443
                    }
                ],
                "selector": {
                    "app": "console"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-kube-scheduler",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "jobLabel": "kube-scheduler",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-kube-scheduler",
                "namespace": "kube-system",
                "resourceVersion": "805",
                "uid": "abd741cf-2833-485a-9c4e-1c1fb694207a"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4",
                    "IPv6"
                ],
                "ipFamilyPolicy": "RequireDualStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 10259,
                        "protocol": "TCP",
                        "targetPort": 10259
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-kube-proxy",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "jobLabel": "kube-proxy",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-kube-proxy",
                "namespace": "kube-system",
                "resourceVersion": "806",
                "uid": "f19dda3f-132b-47d6-9f51-64a31275fc29"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4",
                    "IPv6"
                ],
                "ipFamilyPolicy": "RequireDualStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 10249,
                        "protocol": "TCP",
                        "targetPort": 10249
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-kube-controller-manager",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "jobLabel": "kube-controller-manager",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-kube-controller-manager",
                "namespace": "kube-system",
                "resourceVersion": "807",
                "uid": "b55e3707-52e8-477d-8cac-61c69f0c746b"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4",
                    "IPv6"
                ],
                "ipFamilyPolicy": "RequireDualStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 10257,
                        "protocol": "TCP",
                        "targetPort": 10257
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-coredns",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "jobLabel": "coredns",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-coredns",
                "namespace": "kube-system",
                "resourceVersion": "808",
                "uid": "0e8b1275-826e-4602-8b16-4ff2260e7ddb"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 9153,
                        "protocol": "TCP",
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-kube-etcd",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "jobLabel": "kube-etcd",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-kube-etcd",
                "namespace": "kube-system",
                "resourceVersion": "810",
                "uid": "72b77303-a4fe-4305-b192-cf8678f4bc61"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 2381,
                        "protocol": "TCP",
                        "targetPort": 2381
                    }
                ],
                "selector": {
                    "component": "etcd"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-prometheus",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "release": "kube-prom-stack",
                    "self-monitor": "true"
                },
                "name": "kube-prom-stack-kube-prome-prometheus",
                "namespace": "observability",
                "resourceVersion": "814",
                "uid": "e7d0ed07-11d1-4653-96c0-9605885f73c7"
            },
            "spec": {
                "clusterIP": "10.152.183.236",
                "clusterIPs": [
                    "10.152.183.236"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-web",
                        "port": 9090,
                        "protocol": "TCP",
                        "targetPort": 9090
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "prometheus",
                    "prometheus": "kube-prom-stack-kube-prome-prometheus"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "prometheus-node-exporter",
                    "app.kubernetes.io/part-of": "prometheus-node-exporter",
                    "app.kubernetes.io/version": "1.5.0",
                    "helm.sh/chart": "prometheus-node-exporter-4.14.0",
                    "jobLabel": "node-exporter",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-prometheus-node-exporter",
                "namespace": "observability",
                "resourceVersion": "820",
                "uid": "3f319bc4-1be5-448c-ba44-15bdc5e0ca0f"
            },
            "spec": {
                "clusterIP": "10.152.183.174",
                "clusterIPs": [
                    "10.152.183.174"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 9100,
                        "protocol": "TCP",
                        "targetPort": 9100
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/name": "prometheus-node-exporter"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "app.kubernetes.io/part-of": "kube-state-metrics",
                    "app.kubernetes.io/version": "2.8.1",
                    "helm.sh/chart": "kube-state-metrics-5.0.0",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-state-metrics",
                "namespace": "observability",
                "resourceVersion": "824",
                "uid": "ac1d8d5f-6143-43de-82de-7b27fa53d557"
            },
            "spec": {
                "clusterIP": "10.152.183.207",
                "clusterIPs": [
                    "10.152.183.207"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/name": "kube-state-metrics"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "grafana",
                    "app.kubernetes.io/version": "9.3.8",
                    "helm.sh/chart": "grafana-6.51.5"
                },
                "name": "kube-prom-stack-grafana",
                "namespace": "observability",
                "resourceVersion": "828",
                "uid": "e821bb34-e416-4eb0-b480-9dfc5cc0f3ae"
            },
            "spec": {
                "clusterIP": "10.152.183.108",
                "clusterIPs": [
                    "10.152.183.108"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-web",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 3000
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/name": "grafana"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-alertmanager",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "release": "kube-prom-stack",
                    "self-monitor": "true"
                },
                "name": "kube-prom-stack-kube-prome-alertmanager",
                "namespace": "observability",
                "resourceVersion": "832",
                "uid": "c9ed3abf-27de-4acd-ab6f-0434e00b4efb"
            },
            "spec": {
                "clusterIP": "10.152.183.204",
                "clusterIPs": [
                    "10.152.183.204"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-web",
                        "port": 9093,
                        "protocol": "TCP",
                        "targetPort": 9093
                    }
                ],
                "selector": {
                    "alertmanager": "kube-prom-stack-kube-prome-alertmanager",
                    "app.kubernetes.io/name": "alertmanager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:19Z",
                "labels": {
                    "app": "kube-prometheus-stack-operator",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-operator",
                "namespace": "observability",
                "resourceVersion": "836",
                "uid": "deb458da-d990-48b7-91fc-5382ede58b12"
            },
            "spec": {
                "clusterIP": "10.152.183.184",
                "clusterIPs": [
                    "10.152.183.184"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "https"
                    }
                ],
                "selector": {
                    "app": "kube-prometheus-stack-operator",
                    "release": "kube-prom-stack"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "loki",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:12Z",
                "labels": {
                    "app": "loki",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "loki-2.16.0",
                    "heritage": "Helm",
                    "release": "loki",
                    "variant": "headless"
                },
                "name": "loki-headless",
                "namespace": "observability",
                "resourceVersion": "1110",
                "uid": "f812b037-3f36-49fd-bfd0-85be0bc27b0d"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 3100,
                        "protocol": "TCP",
                        "targetPort": "http-metrics"
                    }
                ],
                "selector": {
                    "app": "loki",
                    "release": "loki"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "loki",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:12Z",
                "labels": {
                    "app": "loki",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "loki-2.16.0",
                    "heritage": "Helm",
                    "release": "loki"
                },
                "name": "loki-memberlist",
                "namespace": "observability",
                "resourceVersion": "1111",
                "uid": "77e086ea-2d18-41d2-827d-0707274fbf08"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 7946,
                        "protocol": "TCP",
                        "targetPort": "memberlist-port"
                    }
                ],
                "publishNotReadyAddresses": true,
                "selector": {
                    "app": "loki",
                    "release": "loki"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "loki",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:12Z",
                "labels": {
                    "app": "loki",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "loki-2.16.0",
                    "heritage": "Helm",
                    "release": "loki"
                },
                "name": "loki",
                "namespace": "observability",
                "resourceVersion": "1113",
                "uid": "2f96b7a9-eb30-44df-9209-83beddeb1efc"
            },
            "spec": {
                "clusterIP": "10.152.183.96",
                "clusterIPs": [
                    "10.152.183.96"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-metrics",
                        "port": 3100,
                        "protocol": "TCP",
                        "targetPort": "http-metrics"
                    }
                ],
                "selector": {
                    "app": "loki",
                    "release": "loki"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "tempo",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:14Z",
                "labels": {
                    "app.kubernetes.io/instance": "tempo",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "tempo",
                    "app.kubernetes.io/version": "2.0.1",
                    "helm.sh/chart": "tempo-1.0.2"
                },
                "name": "tempo",
                "namespace": "observability",
                "resourceVersion": "1128",
                "uid": "1a9bebaa-52ab-4d51-bf4f-f1a22e3dfe2b"
            },
            "spec": {
                "clusterIP": "10.152.183.216",
                "clusterIPs": [
                    "10.152.183.216"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "tempo-prom-metrics",
                        "port": 3100,
                        "protocol": "TCP",
                        "targetPort": 3100
                    },
                    {
                        "name": "jaeger-metrics",
                        "port": 16687,
                        "protocol": "TCP",
                        "targetPort": 16687
                    },
                    {
                        "name": "tempo-query-jaeger-ui",
                        "port": 16686,
                        "protocol": "TCP",
                        "targetPort": 16686
                    },
                    {
                        "name": "tempo-jaeger-thrift-compact",
                        "port": 6831,
                        "protocol": "UDP",
                        "targetPort": 6831
                    },
                    {
                        "name": "tempo-jaeger-thrift-binary",
                        "port": 6832,
                        "protocol": "UDP",
                        "targetPort": 6832
                    },
                    {
                        "name": "tempo-jaeger-thrift-http",
                        "port": 14268,
                        "protocol": "TCP",
                        "targetPort": 14268
                    },
                    {
                        "name": "grpc-tempo-jaeger",
                        "port": 14250,
                        "protocol": "TCP",
                        "targetPort": 14250
                    },
                    {
                        "name": "tempo-zipkin",
                        "port": 9411,
                        "protocol": "TCP",
                        "targetPort": 9411
                    },
                    {
                        "name": "tempo-otlp-legacy",
                        "port": 55680,
                        "protocol": "TCP",
                        "targetPort": 55680
                    },
                    {
                        "name": "tempo-otlp-http-legacy",
                        "port": 55681,
                        "protocol": "TCP",
                        "targetPort": 4318
                    },
                    {
                        "name": "grpc-tempo-otlp",
                        "port": 4317,
                        "protocol": "TCP",
                        "targetPort": 4317
                    },
                    {
                        "name": "tempo-otlp-http",
                        "port": 4318,
                        "protocol": "TCP",
                        "targetPort": 4318
                    },
                    {
                        "name": "tempo-opencensus",
                        "port": 55678,
                        "protocol": "TCP",
                        "targetPort": 55678
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "tempo",
                    "app.kubernetes.io/name": "tempo"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:02:19Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "prometheus-operator",
                    "app.kubernetes.io/name": "kubelet",
                    "k8s-app": "kubelet"
                },
                "name": "kube-prom-stack-kube-prome-kubelet",
                "namespace": "kube-system",
                "resourceVersion": "1156",
                "uid": "78aad9f1-2cb7-4000-928a-f0e36a8ae686"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4",
                    "IPv6"
                ],
                "ipFamilyPolicy": "RequireDualStack",
                "ports": [
                    {
                        "name": "https-metrics",
                        "port": 10250,
                        "protocol": "TCP",
                        "targetPort": 10250
                    },
                    {
                        "name": "http-metrics",
                        "port": 10255,
                        "protocol": "TCP",
                        "targetPort": 10255
                    },
                    {
                        "name": "cadvisor",
                        "port": 4194,
                        "protocol": "TCP",
                        "targetPort": 4194
                    }
                ],
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:02:19Z",
                "labels": {
                    "operated-alertmanager": "true"
                },
                "name": "alertmanager-operated",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "monitoring.coreos.com/v1",
                        "kind": "Alertmanager",
                        "name": "kube-prom-stack-kube-prome-alertmanager",
                        "uid": "d996a560-67f8-43e3-b6c7-01ba9be05f14"
                    }
                ],
                "resourceVersion": "1163",
                "uid": "0ebd2b7c-1701-43fa-90ed-6baa15fc2095"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-web",
                        "port": 9093,
                        "protocol": "TCP",
                        "targetPort": "http-web"
                    },
                    {
                        "name": "tcp-mesh",
                        "port": 9094,
                        "protocol": "TCP",
                        "targetPort": 9094
                    },
                    {
                        "name": "udp-mesh",
                        "port": 9094,
                        "protocol": "UDP",
                        "targetPort": 9094
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "alertmanager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:02:19Z",
                "labels": {
                    "operated-prometheus": "true"
                },
                "name": "prometheus-operated",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "monitoring.coreos.com/v1",
                        "kind": "Prometheus",
                        "name": "kube-prom-stack-kube-prome-prometheus",
                        "uid": "5389b090-face-4d81-969d-d70a0a667740"
                    }
                ],
                "resourceVersion": "1170",
                "uid": "4987f0a7-a3e6-4efe-b203-bfc6432a8802"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-web",
                        "port": 9090,
                        "protocol": "TCP",
                        "targetPort": "http-web"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "prometheus"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:06:59Z",
                "labels": {
                    "v1.min.io/tenant": "microk8s"
                },
                "name": "minio",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "minio.min.io/v2",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Tenant",
                        "name": "microk8s",
                        "uid": "9ae123a4-5ed1-41da-9e64-275bddf6a1c4"
                    }
                ],
                "resourceVersion": "1811",
                "uid": "2d96cd3c-87d9-4e03-800d-01fd12a1e3fe"
            },
            "spec": {
                "clusterIP": "10.152.183.133",
                "clusterIPs": [
                    "10.152.183.133"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-minio",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 9000
                    }
                ],
                "selector": {
                    "v1.min.io/tenant": "microk8s"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:07:00Z",
                "name": "microk8s-console",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "minio.min.io/v2",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Tenant",
                        "name": "microk8s",
                        "uid": "9ae123a4-5ed1-41da-9e64-275bddf6a1c4"
                    }
                ],
                "resourceVersion": "1819",
                "uid": "97d5bbf8-9ee6-4c64-a165-3369a2eb198b"
            },
            "spec": {
                "clusterIP": "10.152.183.40",
                "clusterIPs": [
                    "10.152.183.40"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-console",
                        "port": 9090,
                        "protocol": "TCP",
                        "targetPort": 9090
                    }
                ],
                "selector": {
                    "v1.min.io/tenant": "microk8s"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:07:00Z",
                "labels": {
                    "v1.min.io/tenant": "microk8s"
                },
                "name": "microk8s-hl",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "minio.min.io/v2",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Tenant",
                        "name": "microk8s",
                        "uid": "9ae123a4-5ed1-41da-9e64-275bddf6a1c4"
                    }
                ],
                "resourceVersion": "1827",
                "uid": "9e895511-032f-41fa-a83b-13526f500a43"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http-minio",
                        "port": 9000,
                        "protocol": "TCP",
                        "targetPort": 9000
                    }
                ],
                "selector": {
                    "v1.min.io/tenant": "microk8s"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "redis",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-redis",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-redis",
                "namespace": "argocd",
                "resourceVersion": "2319",
                "uid": "58a70133-6d34-44e5-bada-d7ab984c8883"
            },
            "spec": {
                "clusterIP": "10.152.183.95",
                "clusterIPs": [
                    "10.152.183.95"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "redis",
                        "port": 6379,
                        "protocol": "TCP",
                        "targetPort": 6379
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-redis"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "repo-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-repo-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-repo-server",
                "namespace": "argocd",
                "resourceVersion": "2323",
                "uid": "36efe09d-bec3-44cf-87a6-c137489c615c"
            },
            "spec": {
                "clusterIP": "10.152.183.82",
                "clusterIPs": [
                    "10.152.183.82"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https-repo-server",
                        "port": 8081,
                        "protocol": "TCP",
                        "targetPort": "repo-server"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-repo-server"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "dex-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-dex-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-dex-server",
                "namespace": "argocd",
                "resourceVersion": "2328",
                "uid": "563fb4af-ba0e-41c0-b8d0-4d0564671f92"
            },
            "spec": {
                "clusterIP": "10.152.183.139",
                "clusterIPs": [
                    "10.152.183.139"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 5556,
                        "protocol": "TCP",
                        "targetPort": "http"
                    },
                    {
                        "name": "grpc",
                        "port": 5557,
                        "protocol": "TCP",
                        "targetPort": "grpc"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-dex-server"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "application-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-application-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-application-controller",
                "namespace": "argocd",
                "resourceVersion": "2332",
                "uid": "3b7092de-8caf-40cc-8dcc-b5191f3314ef"
            },
            "spec": {
                "clusterIP": "10.152.183.86",
                "clusterIPs": [
                    "10.152.183.86"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "https-controller",
                        "port": 8082,
                        "protocol": "TCP",
                        "targetPort": 8082
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-application-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-server",
                "namespace": "argocd",
                "resourceVersion": "2336",
                "uid": "489bb3e7-61b5-4636-a60d-ffc0243aa75d"
            },
            "spec": {
                "clusterIP": "10.152.183.235",
                "clusterIPs": [
                    "10.152.183.235"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": "server"
                    },
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": "server"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-server"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "labels": {
                    "app.kubernetes.io/component": "applicationset-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-applicationset-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-applicationset-controller",
                "namespace": "argocd",
                "resourceVersion": "2340",
                "uid": "2b613ab8-129f-4cee-bdb0-768103f82414"
            },
            "spec": {
                "clusterIP": "10.152.183.244",
                "clusterIPs": [
                    "10.152.183.244"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "webhook",
                        "port": 7000,
                        "protocol": "TCP",
                        "targetPort": "webhook"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/name": "argocd-applicationset-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"grpc-xds\",\"port\":15010,\"protocol\":\"TCP\"},{\"name\":\"https-dns\",\"port\":15012,\"protocol\":\"TCP\"},{\"name\":\"https-webhook\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":15017},{\"name\":\"http-monitoring\",\"port\":15014,\"protocol\":\"TCP\"}],\"selector\":{\"app\":\"istiod\",\"istio\":\"pilot\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:09:48Z",
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istiod",
                "namespace": "istio-system",
                "resourceVersion": "2584",
                "uid": "af8e0cac-86a6-488c-9988-365f682950fb"
            },
            "spec": {
                "clusterIP": "10.152.183.217",
                "clusterIPs": [
                    "10.152.183.217"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "grpc-xds",
                        "port": 15010,
                        "protocol": "TCP",
                        "targetPort": 15010
                    },
                    {
                        "name": "https-dns",
                        "port": 15012,
                        "protocol": "TCP",
                        "targetPort": 15012
                    },
                    {
                        "name": "https-webhook",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 15017
                    },
                    {
                        "name": "http-monitoring",
                        "port": 15014,
                        "protocol": "TCP",
                        "targetPort": 15014
                    }
                ],
                "selector": {
                    "app": "istiod",
                    "istio": "pilot"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-egressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istio-egressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"http2\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443}],\"selector\":{\"app\":\"istio-egressgateway\",\"istio\":\"egressgateway\"},\"type\":\"ClusterIP\"}}\n"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "labels": {
                    "app": "istio-egressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istio-egressgateway",
                "namespace": "istio-system",
                "resourceVersion": "2757",
                "uid": "4786ee58-5625-47c9-bc5c-d8bde79aaa66"
            },
            "spec": {
                "clusterIP": "10.152.183.239",
                "clusterIPs": [
                    "10.152.183.239"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http2",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "name": "https",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "app": "istio-egressgateway",
                    "istio": "egressgateway"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-ingressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istio-ingressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"ports\":[{\"name\":\"status-port\",\"port\":15021,\"protocol\":\"TCP\",\"targetPort\":15021},{\"name\":\"http2\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":8443},{\"name\":\"tcp\",\"port\":31400,\"protocol\":\"TCP\",\"targetPort\":31400},{\"name\":\"tls\",\"port\":15443,\"protocol\":\"TCP\",\"targetPort\":15443}],\"selector\":{\"app\":\"istio-ingressgateway\",\"istio\":\"ingressgateway\"},\"type\":\"LoadBalancer\"}}\n"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "labels": {
                    "app": "istio-ingressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "resourceVersion": "2773",
                "uid": "094a12eb-9683-4049-a2ca-dda433958841"
            },
            "spec": {
                "allocateLoadBalancerNodePorts": true,
                "clusterIP": "10.152.183.154",
                "clusterIPs": [
                    "10.152.183.154"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "status-port",
                        "nodePort": 31560,
                        "port": 15021,
                        "protocol": "TCP",
                        "targetPort": 15021
                    },
                    {
                        "name": "http2",
                        "nodePort": 30608,
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "name": "https",
                        "nodePort": 32661,
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 8443
                    },
                    {
                        "name": "tcp",
                        "nodePort": 31917,
                        "port": 31400,
                        "protocol": "TCP",
                        "targetPort": 31400
                    },
                    {
                        "name": "tls",
                        "nodePort": 31293,
                        "port": 15443,
                        "protocol": "TCP",
                        "targetPort": 15443
                    }
                ],
                "selector": {
                    "app": "istio-ingressgateway",
                    "istio": "ingressgateway"
                },
                "sessionAffinity": "None",
                "type": "LoadBalancer"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "app.kubernetes.io/version": "v0.10.1",
                    "helm.sh/chart": "node-feature-discovery-0.10.1",
                    "role": "master"
                },
                "name": "gpu-operator-node-feature-discovery-master",
                "namespace": "gpu-operator-resources",
                "resourceVersion": "3146",
                "uid": "c1156887-bc42-4961-bb3b-5b82be91bc8e"
            },
            "spec": {
                "clusterIP": "10.152.183.80",
                "clusterIPs": [
                    "10.152.183.80"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "grpc",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": "grpc"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/name": "node-feature-discovery"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T22:10:46Z",
                "labels": {
                    "app": "gpu-operator"
                },
                "name": "gpu-operator",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3312",
                "uid": "9bcf37a9-4647-44ed-8379-1634c9eea03d"
            },
            "spec": {
                "clusterIP": "10.152.183.122",
                "clusterIPs": [
                    "10.152.183.122"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "gpu-operator-metrics",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "gpu-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "labels": {
                    "app": "nvidia-dcgm-exporter"
                },
                "name": "nvidia-dcgm-exporter",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3361",
                "uid": "e54e1a45-3018-44b5-be69-643fbc4ec9e2"
            },
            "spec": {
                "clusterIP": "10.152.183.148",
                "clusterIPs": [
                    "10.152.183.148"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "gpu-metrics",
                        "port": 9400,
                        "protocol": "TCP",
                        "targetPort": 9400
                    }
                ],
                "selector": {
                    "app": "nvidia-dcgm-exporter"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "cvc-operator",
                    "heritage": "Helm",
                    "name": "cvc-operator",
                    "openebs.io/component-name": "cvc-operator-svc",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cvc-operator-svc",
                "namespace": "openebs",
                "resourceVersion": "5658",
                "uid": "91ff586b-c59b-4338-9732-77ce469e89a5"
            },
            "spec": {
                "clusterIP": "10.152.183.94",
                "clusterIPs": [
                    "10.152.183.94"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "api",
                        "port": 5757,
                        "protocol": "TCP",
                        "targetPort": 5757
                    }
                ],
                "selector": {
                    "name": "cvc-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:18:46Z",
                "labels": {
                    "app": "cstor-admission-webhook",
                    "openebs.io/component-name": "cstor-admission-webhook",
                    "openebs.io/version": "3.3.0"
                },
                "name": "openebs-cstor-admission-server",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-cstor-admission-server",
                        "uid": "4ea45e3a-6b9b-4724-8127-59e3cccc97a3"
                    }
                ],
                "resourceVersion": "6019",
                "uid": "aecffe3f-a5ce-4259-8a0f-e3cfbfb53e1d"
            },
            "spec": {
                "clusterIP": "10.152.183.252",
                "clusterIPs": [
                    "10.152.183.252"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "app": "cstor-admission-webhook"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "portainer",
                    "meta.helm.sh/release-namespace": "portainer"
                },
                "creationTimestamp": "2023-03-08T22:22:42Z",
                "labels": {
                    "app.kubernetes.io/instance": "portainer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "portainer",
                    "app.kubernetes.io/version": "ce-latest-ee-2.17.1",
                    "helm.sh/chart": "portainer-1.0.40",
                    "io.portainer.kubernetes.application.stack": "portainer"
                },
                "name": "portainer",
                "namespace": "portainer",
                "resourceVersion": "7375",
                "uid": "6c461d54-3d96-4879-a4bd-8495540b4797"
            },
            "spec": {
                "clusterIP": "10.152.183.17",
                "clusterIPs": [
                    "10.152.183.17"
                ],
                "externalTrafficPolicy": "Cluster",
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "nodePort": 30777,
                        "port": 9000,
                        "protocol": "TCP",
                        "targetPort": 9000
                    },
                    {
                        "name": "https",
                        "nodePort": 30779,
                        "port": 9443,
                        "protocol": "TCP",
                        "targetPort": 9443
                    },
                    {
                        "name": "edge",
                        "nodePort": 30776,
                        "port": 30776,
                        "protocol": "TCP",
                        "targetPort": 30776
                    }
                ],
                "selector": {
                    "app.kubernetes.io/instance": "portainer",
                    "app.kubernetes.io/name": "portainer"
                },
                "sessionAffinity": "None",
                "type": "NodePort"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b"
                },
                "creationTimestamp": "2023-03-08T22:24:02Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "controller"
                },
                "name": "controller-service",
                "namespace": "controller-microk8s-localhost",
                "resourceVersion": "7933",
                "uid": "90172db4-4e57-4a73-8b52-686ba01559b1"
            },
            "spec": {
                "clusterIP": "10.152.183.171",
                "clusterIPs": [
                    "10.152.183.171"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "api-server",
                        "port": 17070,
                        "protocol": "TCP",
                        "targetPort": 17070
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:25:03Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "name": "modeloperator",
                "namespace": "controller-microk8s-localhost",
                "resourceVersion": "8388",
                "uid": "45f86430-bf52-4de5-8f42-868221e7d2ee"
            },
            "spec": {
                "clusterIP": "10.152.183.195",
                "clusterIPs": [
                    "10.152.183.195"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 17071,
                        "protocol": "TCP",
                        "targetPort": "api"
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:33:37Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "name": "modeloperator",
                "namespace": "kubeflow",
                "resourceVersion": "10941",
                "uid": "0db5c725-2634-4250-bad9-d4a4c2502842"
            },
            "spec": {
                "clusterIP": "10.152.183.101",
                "clusterIPs": [
                    "10.152.183.101"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 17071,
                        "protocol": "TCP",
                        "targetPort": "api"
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:24Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "admission-webhook",
                    "operator.juju.is/target": "application"
                },
                "name": "admission-webhook-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11476",
                "uid": "40a16a4e-8488-4f50-8bd7-8bbb75b80e9d"
            },
            "spec": {
                "clusterIP": "10.152.183.167",
                "clusterIPs": [
                    "10.152.183.167"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "admission-webhook",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:29Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "argo-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "argo-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11522",
                "uid": "80e5633c-6c0b-4bec-b964-9e004b5b5ef1"
            },
            "spec": {
                "clusterIP": "10.152.183.164",
                "clusterIPs": [
                    "10.152.183.164"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "argo-controller",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:34Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "argo-server",
                    "operator.juju.is/target": "application"
                },
                "name": "argo-server-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11578",
                "uid": "4f11145f-09d5-4d43-8ec7-a18575d2467f"
            },
            "spec": {
                "clusterIP": "10.152.183.119",
                "clusterIPs": [
                    "10.152.183.119"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "argo-server",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:35:38Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "dex-auth"
                },
                "name": "dex-auth-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "11623",
                "uid": "16cc29db-384b-42e1-8f50-b159d86ea6b9"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "dex-auth"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:46Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-ingressgateway"
                },
                "name": "istio-ingressgateway",
                "namespace": "kubeflow",
                "resourceVersion": "11691",
                "uid": "6f210f2f-1905-4d9b-8e5b-217e2ba0ffb0"
            },
            "spec": {
                "clusterIP": "10.152.183.208",
                "clusterIPs": [
                    "10.152.183.208"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "placeholder",
                        "port": 65535,
                        "protocol": "TCP",
                        "targetPort": 65535
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "istio-ingressgateway"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:35:47Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-ingressgateway"
                },
                "name": "istio-ingressgateway-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "11697",
                "uid": "df7fa11d-d3a6-4523-bff9-80131b115f00"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "istio-ingressgateway"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:56Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-pilot"
                },
                "name": "istio-pilot",
                "namespace": "kubeflow",
                "resourceVersion": "11776",
                "uid": "5228e149-8889-454a-9d07-ae1322d502a1"
            },
            "spec": {
                "clusterIP": "10.152.183.83",
                "clusterIPs": [
                    "10.152.183.83"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "placeholder",
                        "port": 65535,
                        "protocol": "TCP",
                        "targetPort": 65535
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "istio-pilot"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:35:58Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-pilot"
                },
                "name": "istio-pilot-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "11790",
                "uid": "27866d74-3876-4604-ad86-da1cd43b5c35"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "istio-pilot"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:59Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "jupyter-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "jupyter-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11799",
                "uid": "68b3c833-f3d5-4f7c-b19f-54ea14769f3b"
            },
            "spec": {
                "clusterIP": "10.152.183.245",
                "clusterIPs": [
                    "10.152.183.245"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "jupyter-controller",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:15Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "admission-webhook"
                },
                "name": "admission-webhook",
                "namespace": "kubeflow",
                "resourceVersion": "11945",
                "uid": "b27a086c-9785-463e-948d-2dc2c82c2a28"
            },
            "spec": {
                "clusterIP": "10.152.183.240",
                "clusterIPs": [
                    "10.152.183.240"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "webhook",
                        "port": 4443,
                        "protocol": "TCP",
                        "targetPort": 4443
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "admission-webhook"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:16Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "jupyter-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "jupyter-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11952",
                "uid": "8b321785-14a4-4d55-8aa2-1d6957113eb8"
            },
            "spec": {
                "clusterIP": "10.152.183.197",
                "clusterIPs": [
                    "10.152.183.197"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "jupyter-ui",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:38Z",
                "labels": {
                    "app.juju.is/created-by": "dex-auth",
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "dex-auth"
                },
                "name": "dex-auth",
                "namespace": "kubeflow",
                "resourceVersion": "12095",
                "uid": "e3621bfe-239a-475a-826e-edd1fb149afe"
            },
            "spec": {
                "clusterIP": "10.152.183.125",
                "clusterIPs": [
                    "10.152.183.125"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "dex",
                        "port": 5556,
                        "protocol": "TCP",
                        "targetPort": 5556
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "dex-auth"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:40Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "12202",
                "uid": "8a7914f0-3eec-467f-8bc9-8f95478e63ae"
            },
            "spec": {
                "clusterIP": "10.152.183.88",
                "clusterIPs": [
                    "10.152.183.88"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "katib-controller",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"kubeflow\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.11.0\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"kubeflow\"},\"spec\":{\"ports\":[{\"name\":\"grpc-xds\",\"port\":15010,\"protocol\":\"TCP\"},{\"name\":\"https-dns\",\"port\":15012,\"protocol\":\"TCP\"},{\"name\":\"https-webhook\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":15017},{\"name\":\"http-monitoring\",\"port\":15014,\"protocol\":\"TCP\"}],\"selector\":{\"app\":\"istiod\",\"istio\":\"pilot\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:36:43Z",
                "labels": {
                    "app": "istiod",
                    "app.juju.is/created-by": "istio-pilot",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "kubeflow",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.11.0",
                    "release": "istio"
                },
                "name": "istiod",
                "namespace": "kubeflow",
                "resourceVersion": "12270",
                "uid": "f86bd862-895f-4d7a-aeab-53df8065e558"
            },
            "spec": {
                "clusterIP": "10.152.183.163",
                "clusterIPs": [
                    "10.152.183.163"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "grpc-xds",
                        "port": 15010,
                        "protocol": "TCP",
                        "targetPort": 15010
                    },
                    {
                        "name": "https-dns",
                        "port": 15012,
                        "protocol": "TCP",
                        "targetPort": 15012
                    },
                    {
                        "name": "https-webhook",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 15017
                    },
                    {
                        "name": "http-monitoring",
                        "port": 15014,
                        "protocol": "TCP",
                        "targetPort": 15014
                    }
                ],
                "selector": {
                    "app": "istiod",
                    "istio": "pilot"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:00Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-db",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-db-operator",
                "namespace": "kubeflow",
                "resourceVersion": "12444",
                "uid": "a4e50785-c180-496b-91c9-f46adddee69f"
            },
            "spec": {
                "clusterIP": "10.152.183.58",
                "clusterIPs": [
                    "10.152.183.58"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "katib-db",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:17Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-roles"
                },
                "name": "kubeflow-roles",
                "namespace": "kubeflow",
                "resourceVersion": "12598",
                "uid": "9991175f-7e09-412c-bc4a-b08668e42f70"
            },
            "spec": {
                "clusterIP": "10.152.183.175",
                "clusterIPs": [
                    "10.152.183.175"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "placeholder",
                        "port": 65535,
                        "protocol": "TCP",
                        "targetPort": 65535
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kubeflow-roles"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:37:18Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-roles"
                },
                "name": "kubeflow-roles-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "12601",
                "uid": "f3fadc57-0bc4-4d29-8328-5e5e26f5c23a"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "kubeflow-roles"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:20Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "jupyter-ui"
                },
                "name": "jupyter-ui",
                "namespace": "kubeflow",
                "resourceVersion": "12626",
                "uid": "4af1ce8c-307a-4c07-ba0c-f7b86d57ad52"
            },
            "spec": {
                "clusterIP": "10.152.183.241",
                "clusterIPs": [
                    "10.152.183.241"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 5000,
                        "protocol": "TCP",
                        "targetPort": 5000
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "jupyter-ui"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:28Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-db"
                },
                "name": "katib-db",
                "namespace": "kubeflow",
                "resourceVersion": "12733",
                "uid": "c41cf737-5bc6-4b8d-b1d2-6418078c8055"
            },
            "spec": {
                "clusterIP": "10.152.183.87",
                "clusterIPs": [
                    "10.152.183.87"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "main",
                        "port": 3306,
                        "protocol": "TCP",
                        "targetPort": 3306
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "katib-db"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:37:32Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-db"
                },
                "name": "katib-db-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "12758",
                "uid": "0a1d5757-72db-4081-90bd-69b7d3abb6f1"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "katib-db"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:42Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-db-manager",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-db-manager-operator",
                "namespace": "kubeflow",
                "resourceVersion": "13409",
                "uid": "fb720ae4-80e6-4c6a-ae1e-be35eec80995"
            },
            "spec": {
                "clusterIP": "10.152.183.251",
                "clusterIPs": [
                    "10.152.183.251"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "katib-db-manager",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:43Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "metacontroller-operator"
                },
                "name": "metacontroller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "13424",
                "uid": "95da0d45-5b0b-4f4a-a2c3-12f2b133302e"
            },
            "spec": {
                "clusterIP": "10.152.183.196",
                "clusterIPs": [
                    "10.152.183.196"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "placeholder",
                        "port": 65535,
                        "protocol": "TCP",
                        "targetPort": 65535
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "metacontroller-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:44Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-controller"
                },
                "name": "katib-controller",
                "namespace": "kubeflow",
                "resourceVersion": "13553",
                "uid": "18cd064f-2929-4003-928d-44da33a8a2d4"
            },
            "spec": {
                "clusterIP": "10.152.183.98",
                "clusterIPs": [
                    "10.152.183.98"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "webhook",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 443
                    },
                    {
                        "name": "metrics",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "katib-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:37:45Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "metacontroller-operator"
                },
                "name": "metacontroller-operator-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "13620",
                "uid": "7fb41410-084f-4f81-947d-c91e3b7a5617"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "metacontroller-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:49Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "13935",
                "uid": "32379f68-f30c-4119-8831-993ec4270a0d"
            },
            "spec": {
                "clusterIP": "10.152.183.75",
                "clusterIPs": [
                    "10.152.183.75"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "katib-ui",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:26Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-api",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-api-operator",
                "namespace": "kubeflow",
                "resourceVersion": "16777",
                "uid": "b17daaa3-74ca-4158-98b4-b8df298312fa"
            },
            "spec": {
                "clusterIP": "10.152.183.165",
                "clusterIPs": [
                    "10.152.183.165"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-api",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:54Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "training-operator"
                },
                "name": "training-operator",
                "namespace": "kubeflow",
                "resourceVersion": "18782",
                "uid": "c7dc0e2a-b3ff-4e50-b501-fd9cc60dae0b"
            },
            "spec": {
                "clusterIP": "10.152.183.19",
                "clusterIPs": [
                    "10.152.183.19"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "placeholder",
                        "port": 65535,
                        "protocol": "TCP",
                        "targetPort": 65535
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "training-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:54Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-db-manager"
                },
                "name": "katib-db-manager",
                "namespace": "kubeflow",
                "resourceVersion": "18799",
                "uid": "d9892f85-31fd-4e9d-b653-545f887479ac"
            },
            "spec": {
                "clusterIP": "10.152.183.173",
                "clusterIPs": [
                    "10.152.183.173"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "api",
                        "port": 6789,
                        "protocol": "TCP",
                        "targetPort": 6789
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "katib-db-manager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:38:55Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "training-operator"
                },
                "name": "training-operator-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "18836",
                "uid": "24fc7da9-f9d0-4354-a74d-11cec17f4828"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "training-operator"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:56Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-db",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-db-operator",
                "namespace": "kubeflow",
                "resourceVersion": "18911",
                "uid": "ff098d45-3ee1-430b-82e3-3b90a0e84f79"
            },
            "spec": {
                "clusterIP": "10.152.183.134",
                "clusterIPs": [
                    "10.152.183.134"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-db",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:11Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-persistence",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-persistence-operator",
                "namespace": "kubeflow",
                "resourceVersion": "19841",
                "uid": "e863323a-c348-4258-9b8e-393bf89911b0"
            },
            "spec": {
                "clusterIP": "10.152.183.84",
                "clusterIPs": [
                    "10.152.183.84"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-persistence",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:19Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-ui"
                },
                "name": "katib-ui",
                "namespace": "kubeflow",
                "resourceVersion": "20410",
                "uid": "a0fc2801-0315-49be-8edd-6283fc0d883e"
            },
            "spec": {
                "clusterIP": "10.152.183.76",
                "clusterIPs": [
                    "10.152.183.76"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "katib-ui"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:36Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-db"
                },
                "name": "kfp-db",
                "namespace": "kubeflow",
                "resourceVersion": "21547",
                "uid": "eb1027ae-d333-4f93-a9f5-379d298ec1d1"
            },
            "spec": {
                "clusterIP": "10.152.183.138",
                "clusterIPs": [
                    "10.152.183.138"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "main",
                        "port": 3306,
                        "protocol": "TCP",
                        "targetPort": 3306
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kfp-db"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:39:40Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-db"
                },
                "name": "kfp-db-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "21733",
                "uid": "2ed7672d-904a-4dc0-ac5b-c96c17f6f8b4"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "kfp-db"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:08Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-profile-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-profile-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "23578",
                "uid": "d6ed5066-a1d8-4c6f-ab65-d94ee423b282"
            },
            "spec": {
                "clusterIP": "10.152.183.20",
                "clusterIPs": [
                    "10.152.183.20"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-profile-controller",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:11Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-schedwf",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-schedwf-operator",
                "namespace": "kubeflow",
                "resourceVersion": "23765",
                "uid": "5497a684-3d7b-401f-816d-9ae662e3cde9"
            },
            "spec": {
                "clusterIP": "10.152.183.43",
                "clusterIPs": [
                    "10.152.183.43"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-schedwf",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:16Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24050",
                "uid": "c921446b-9daf-469a-b687-c53cd67bdbc0"
            },
            "spec": {
                "clusterIP": "10.152.183.231",
                "clusterIPs": [
                    "10.152.183.231"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-ui",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:23Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-viewer",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-viewer-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24382",
                "uid": "2a774fc4-4689-4eb4-a8c2-38964ebe2186"
            },
            "spec": {
                "clusterIP": "10.152.183.149",
                "clusterIPs": [
                    "10.152.183.149"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-viewer",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:38Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-viz",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-viz-operator",
                "namespace": "kubeflow",
                "resourceVersion": "25213",
                "uid": "8c3485ce-d2f5-40ec-9f53-97a4bcee1d37"
            },
            "spec": {
                "clusterIP": "10.152.183.250",
                "clusterIPs": [
                    "10.152.183.250"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kfp-viz",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:40Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-dashboard",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-dashboard-operator",
                "namespace": "kubeflow",
                "resourceVersion": "25317",
                "uid": "313a6f73-ae6d-40db-9a63-bb75c2cb7d86"
            },
            "spec": {
                "clusterIP": "10.152.183.144",
                "clusterIPs": [
                    "10.152.183.144"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kubeflow-dashboard",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:15Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-profiles",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-profiles-operator",
                "namespace": "kubeflow",
                "resourceVersion": "27147",
                "uid": "7d8fbc9b-6099-4cb4-b87f-cda513c8bf49"
            },
            "spec": {
                "clusterIP": "10.152.183.112",
                "clusterIPs": [
                    "10.152.183.112"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kubeflow-profiles",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:51Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-viz"
                },
                "name": "kfp-viz",
                "namespace": "kubeflow",
                "resourceVersion": "29041",
                "uid": "d7e8b2ed-ae37-4efa-9ed5-94ae5b1d0700"
            },
            "spec": {
                "clusterIP": "10.152.183.135",
                "clusterIPs": [
                    "10.152.183.135"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8888,
                        "protocol": "TCP",
                        "targetPort": 8888
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kfp-viz"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:38Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-profiles"
                },
                "name": "kubeflow-profiles",
                "namespace": "kubeflow",
                "resourceVersion": "31493",
                "uid": "de3c6794-24dd-4330-87c6-9fc5facff02c"
            },
            "spec": {
                "clusterIP": "10.152.183.142",
                "clusterIPs": [
                    "10.152.183.142"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "manager",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "name": "http",
                        "port": 8081,
                        "protocol": "TCP",
                        "targetPort": 8081
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kubeflow-profiles"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:47Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "tensorboard-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "tensorboard-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "31964",
                "uid": "47839a54-0e70-4ebd-b044-6b82f0ef2f05"
            },
            "spec": {
                "clusterIP": "10.152.183.219",
                "clusterIPs": [
                    "10.152.183.219"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "tensorboard-controller",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:48Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-volumes",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-volumes-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32048",
                "uid": "98a2e17d-df47-40a0-bcc3-2aa11ee0a37f"
            },
            "spec": {
                "clusterIP": "10.152.183.97",
                "clusterIPs": [
                    "10.152.183.97"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "kubeflow-volumes",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:51Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "minio",
                    "operator.juju.is/target": "application"
                },
                "name": "minio-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32187",
                "uid": "82af14e2-a1ce-4460-8edb-8f4a4181f224"
            },
            "spec": {
                "clusterIP": "10.152.183.176",
                "clusterIPs": [
                    "10.152.183.176"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "minio",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:55Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "tensorboards-web-app",
                    "operator.juju.is/target": "application"
                },
                "name": "tensorboards-web-app-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32386",
                "uid": "3fcbbe79-9d30-49fe-aa11-43915a1a85b7"
            },
            "spec": {
                "clusterIP": "10.152.183.211",
                "clusterIPs": [
                    "10.152.183.211"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "tensorboards-web-app",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:57Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "oidc-gatekeeper",
                    "operator.juju.is/target": "application"
                },
                "name": "oidc-gatekeeper-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32476",
                "uid": "e96ddf12-b98b-43dd-b4e4-c57c5a1a0ad5"
            },
            "spec": {
                "clusterIP": "10.152.183.126",
                "clusterIPs": [
                    "10.152.183.126"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "oidc-gatekeeper",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:00Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "seldon-controller-manager",
                    "operator.juju.is/target": "application"
                },
                "name": "seldon-controller-manager-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32623",
                "uid": "5c553aad-c025-4db4-aa82-f480f5891062"
            },
            "spec": {
                "clusterIP": "10.152.183.37",
                "clusterIPs": [
                    "10.152.183.37"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "port": 30666,
                        "protocol": "TCP",
                        "targetPort": 30666
                    }
                ],
                "selector": {
                    "operator.juju.is/name": "seldon-controller-manager",
                    "operator.juju.is/target": "application"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:45Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-volumes"
                },
                "name": "kubeflow-volumes",
                "namespace": "kubeflow",
                "resourceVersion": "34795",
                "uid": "f3e83e6b-3d1f-4daf-aaaf-b5e898489284"
            },
            "spec": {
                "clusterIP": "10.152.183.210",
                "clusterIPs": [
                    "10.152.183.210"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 5000,
                        "protocol": "TCP",
                        "targetPort": 5000
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kubeflow-volumes"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:49Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "seldon-controller-manager"
                },
                "name": "seldon-controller-manager",
                "namespace": "kubeflow",
                "resourceVersion": "34985",
                "uid": "dbade1c1-4558-4576-93dc-14adf12e6dd9"
            },
            "spec": {
                "clusterIP": "10.152.183.79",
                "clusterIPs": [
                    "10.152.183.79"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "metrics",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "name": "webhook",
                        "port": 4443,
                        "protocol": "TCP",
                        "targetPort": 4443
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "seldon-controller-manager"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:54Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "tensorboards-web-app"
                },
                "name": "tensorboards-web-app",
                "namespace": "kubeflow",
                "resourceVersion": "35204",
                "uid": "1e6d55eb-3138-49a1-8b59-cae2db66a867"
            },
            "spec": {
                "clusterIP": "10.152.183.177",
                "clusterIPs": [
                    "10.152.183.177"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 5000,
                        "protocol": "TCP",
                        "targetPort": 5000
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "tensorboards-web-app"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:55Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "minio"
                },
                "name": "minio",
                "namespace": "kubeflow",
                "resourceVersion": "35244",
                "uid": "72de7bc6-f7df-4639-ba89-88126eb0240f"
            },
            "spec": {
                "clusterIP": "10.152.183.54",
                "clusterIPs": [
                    "10.152.183.54"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "minio",
                        "port": 9000,
                        "protocol": "TCP",
                        "targetPort": 9000
                    },
                    {
                        "name": "console",
                        "port": 9001,
                        "protocol": "TCP",
                        "targetPort": 9001
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "minio"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "creationTimestamp": "2023-03-08T22:43:56Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "minio"
                },
                "name": "minio-endpoints",
                "namespace": "kubeflow",
                "resourceVersion": "35304",
                "uid": "aa568864-eccd-47d7-a853-de97790294ef"
            },
            "spec": {
                "clusterIP": "None",
                "clusterIPs": [
                    "None"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "publishNotReadyAddresses": true,
                "selector": {
                    "app.kubernetes.io/name": "minio"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:23Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-api"
                },
                "name": "ml-pipeline",
                "namespace": "kubeflow",
                "resourceVersion": "36692",
                "uid": "8aa8a6eb-56c6-40f6-b592-87987d8d9320"
            },
            "spec": {
                "clusterIP": "10.152.183.246",
                "clusterIPs": [
                    "10.152.183.246"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "grpc",
                        "port": 8887,
                        "protocol": "TCP",
                        "targetPort": 8887
                    },
                    {
                        "name": "http",
                        "port": 8888,
                        "protocol": "TCP",
                        "targetPort": 8888
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kfp-api"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:23Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-api"
                },
                "name": "kfp-api",
                "namespace": "kubeflow",
                "resourceVersion": "36739",
                "uid": "cdfbab8f-8a5f-46ea-a236-c2473619b2d3"
            },
            "spec": {
                "clusterIP": "10.152.183.102",
                "clusterIPs": [
                    "10.152.183.102"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 8888,
                        "protocol": "TCP",
                        "targetPort": 8888
                    },
                    {
                        "name": "grpc",
                        "port": 8887,
                        "protocol": "TCP",
                        "targetPort": 8887
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kfp-api"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:26Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-profile-controller"
                },
                "name": "kfp-profile-controller",
                "namespace": "kubeflow",
                "resourceVersion": "36867",
                "uid": "472f4231-1ef1-4109-bcd5-e47418fdd4cf"
            },
            "spec": {
                "clusterIP": "10.152.183.81",
                "clusterIPs": [
                    "10.152.183.81"
                ],
                "internalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "ports": [
                    {
                        "name": "http",
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 80
                    }
                ],
                "selector": {
                    "app.kubernetes.io/name": "kfp-profile-controller"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-node\"},\"name\":\"calico-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-node\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"},{\"name\":\"WAIT_FOR_DATASTORE\",\"value\":\"true\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}},{\"name\":\"CLUSTER_TYPE\",\"value\":\"k8s,bgp\"},{\"name\":\"IP\",\"value\":\"autodetect\"},{\"name\":\"IP_AUTODETECTION_METHOD\",\"value\":\"first-found\"},{\"name\":\"CALICO_IPV4POOL_VXLAN\",\"value\":\"Always\"},{\"name\":\"CALICO_IPV6POOL_VXLAN\",\"value\":\"Never\"},{\"name\":\"FELIX_IPINIPMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_VXLANMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"FELIX_WIREGUARDMTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"CALICO_IPV4POOL_CIDR\",\"value\":\"10.1.0.0/16\"},{\"name\":\"CALICO_DISABLE_FILE_LOGGING\",\"value\":\"true\"},{\"name\":\"FELIX_DEFAULTENDPOINTTOHOSTACTION\",\"value\":\"ACCEPT\"},{\"name\":\"FELIX_IPV6SUPPORT\",\"value\":\"false\"},{\"name\":\"FELIX_HEALTHENABLED\",\"value\":\"true\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/node:v3.23.5\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-shutdown\"]}}},\"livenessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-live\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-node\",\"readinessProbe\":{\"exec\":{\"command\":[\"/bin/calico-node\",\"-felix-ready\"]},\"periodSeconds\":10,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"250m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/var/run/calico\",\"name\":\"var-run-calico\",\"readOnly\":false},{\"mountPath\":\"/var/lib/calico\",\"name\":\"var-lib-calico\",\"readOnly\":false},{\"mountPath\":\"/var/run/nodeagent\",\"name\":\"policysync\"},{\"mountPath\":\"/var/log/calico/cni\",\"name\":\"cni-log-dir\",\"readOnly\":true}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/opt/cni/bin/calico-ipam\",\"-upgrade\"],\"env\":[{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CALICO_NETWORKING_BACKEND\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"calico_backend\",\"name\":\"calico-config\"}}}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.23.5\",\"name\":\"upgrade-ipam\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/cni/networks\",\"name\":\"host-local-net-dir\"},{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]},{\"command\":[\"/opt/cni/bin/install\"],\"env\":[{\"name\":\"CNI_CONF_NAME\",\"value\":\"10-calico.conflist\"},{\"name\":\"CNI_NETWORK_CONFIG\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cni_network_config\",\"name\":\"calico-config\"}}},{\"name\":\"KUBERNETES_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CNI_MTU\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"veth_mtu\",\"name\":\"calico-config\"}}},{\"name\":\"SLEEP\",\"value\":\"false\"},{\"name\":\"CNI_NET_DIR\",\"value\":\"/var/snap/microk8s/current/args/cni-network\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"kubernetes-services-endpoint\",\"optional\":true}}],\"image\":\"docker.io/calico/cni:v3.23.5\",\"name\":\"install-cni\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"calico-node\",\"terminationGracePeriodSeconds\":0,\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/run/calico\"},\"name\":\"var-run-calico\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/lib/calico\"},\"name\":\"var-lib-calico\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/sys/fs/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"sys-fs\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/args/cni-network\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/common/var/log/calico/cni\"},\"name\":\"cni-log-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/lib/cni/networks\"},\"name\":\"host-local-net-dir\"},{\"hostPath\":{\"path\":\"/var/snap/microk8s/current/var/run/nodeagent\",\"type\":\"DirectoryOrCreate\"},\"name\":\"policysync\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                },
                "creationTimestamp": "2023-03-08T21:59:01Z",
                "generation": 2,
                "labels": {
                    "k8s-app": "calico-node"
                },
                "name": "calico-node",
                "namespace": "kube-system",
                "resourceVersion": "331",
                "uid": "8e47c25b-d91f-42c8-9da7-0baeeb80dab0"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-node"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2023-03-08T13:59:07-08:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-node"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    },
                                    {
                                        "name": "WAIT_FOR_DATASTORE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "calico_backend",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CLUSTER_TYPE",
                                        "value": "k8s,bgp"
                                    },
                                    {
                                        "name": "IP",
                                        "value": "autodetect"
                                    },
                                    {
                                        "name": "IP_AUTODETECTION_METHOD",
                                        "value": "first-found"
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_VXLAN",
                                        "value": "Always"
                                    },
                                    {
                                        "name": "CALICO_IPV6POOL_VXLAN",
                                        "value": "Never"
                                    },
                                    {
                                        "name": "FELIX_IPINIPMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "veth_mtu",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_VXLANMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "veth_mtu",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FELIX_WIREGUARDMTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "veth_mtu",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_IPV4POOL_CIDR",
                                        "value": "10.1.0.0/16"
                                    },
                                    {
                                        "name": "CALICO_DISABLE_FILE_LOGGING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "FELIX_DEFAULTENDPOINTTOHOSTACTION",
                                        "value": "ACCEPT"
                                    },
                                    {
                                        "name": "FELIX_IPV6SUPPORT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "FELIX_HEALTHENABLED",
                                        "value": "true"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "docker.io/calico/node:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/calico-node",
                                                "-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-live"
                                        ]
                                    },
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "calico-node",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/calico-node",
                                            "-felix-ready"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "250m"
                                    }
                                },
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "cni-net-dir"
                                    },
                                    {
                                        "mountPath": "/lib/modules",
                                        "name": "lib-modules",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/run/xtables.lock",
                                        "name": "xtables-lock"
                                    },
                                    {
                                        "mountPath": "/var/run/calico",
                                        "name": "var-run-calico"
                                    },
                                    {
                                        "mountPath": "/var/lib/calico",
                                        "name": "var-lib-calico"
                                    },
                                    {
                                        "mountPath": "/var/run/nodeagent",
                                        "name": "policysync"
                                    },
                                    {
                                        "mountPath": "/var/log/calico/cni",
                                        "name": "cni-log-dir",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "initContainers": [
                            {
                                "command": [
                                    "/opt/cni/bin/calico-ipam",
                                    "-upgrade"
                                ],
                                "env": [
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CALICO_NETWORKING_BACKEND",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "calico_backend",
                                                "name": "calico-config"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "docker.io/calico/cni:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "upgrade-ipam",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/cni/networks",
                                        "name": "host-local-net-dir"
                                    },
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "cni-bin-dir"
                                    }
                                ]
                            },
                            {
                                "command": [
                                    "/opt/cni/bin/install"
                                ],
                                "env": [
                                    {
                                        "name": "CNI_CONF_NAME",
                                        "value": "10-calico.conflist"
                                    },
                                    {
                                        "name": "CNI_NETWORK_CONFIG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "cni_network_config",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CNI_MTU",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "key": "veth_mtu",
                                                "name": "calico-config"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SLEEP",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CNI_NET_DIR",
                                        "value": "/var/snap/microk8s/current/args/cni-network"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "kubernetes-services-endpoint",
                                            "optional": true
                                        }
                                    }
                                ],
                                "image": "docker.io/calico/cni:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "install-cni",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/opt/cni/bin",
                                        "name": "cni-bin-dir"
                                    },
                                    {
                                        "mountPath": "/host/etc/cni/net.d",
                                        "name": "cni-net-dir"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "calico-node",
                        "serviceAccountName": "calico-node",
                        "terminationGracePeriodSeconds": 0,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "operator": "Exists"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoExecute",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                },
                                "name": "lib-modules"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/run/calico",
                                    "type": ""
                                },
                                "name": "var-run-calico"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/lib/calico",
                                    "type": ""
                                },
                                "name": "var-lib-calico"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                },
                                "name": "xtables-lock"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys/fs/",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "sys-fs"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/opt/cni/bin",
                                    "type": ""
                                },
                                "name": "cni-bin-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/args/cni-network",
                                    "type": ""
                                },
                                "name": "cni-net-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/log/calico/cni",
                                    "type": ""
                                },
                                "name": "cni-log-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/lib/cni/networks",
                                    "type": ""
                                },
                                "name": "host-local-net-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/var/run/nodeagent",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "policysync"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 2,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "prometheus-node-exporter",
                    "app.kubernetes.io/part-of": "prometheus-node-exporter",
                    "app.kubernetes.io/version": "1.5.0",
                    "helm.sh/chart": "prometheus-node-exporter-4.14.0",
                    "jobLabel": "node-exporter",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-prometheus-node-exporter",
                "namespace": "observability",
                "resourceVersion": "1485",
                "uid": "5ef7244e-01a2-462c-af38-39eb3fdd7496"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack",
                        "app.kubernetes.io/name": "prometheus-node-exporter"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "metrics",
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "prometheus-node-exporter",
                            "app.kubernetes.io/part-of": "prometheus-node-exporter",
                            "app.kubernetes.io/version": "1.5.0",
                            "helm.sh/chart": "prometheus-node-exporter-4.14.0",
                            "jobLabel": "node-exporter",
                            "release": "kube-prom-stack"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "args": [
                                    "--path.procfs=/host/proc",
                                    "--path.sysfs=/host/sys",
                                    "--path.rootfs=/host/root",
                                    "--path.udev.data=/host/root/run/udev/data",
                                    "--web.listen-address=[$(HOST_IP)]:9100",
                                    "--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)",
                                    "--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
                                ],
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "value": "0.0.0.0"
                                    }
                                ],
                                "image": "quay.io/prometheus/node-exporter:v1.5.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9100,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "node-exporter",
                                "ports": [
                                    {
                                        "containerPort": 9100,
                                        "hostPort": 9100,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9100,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/proc",
                                        "name": "proc",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host/sys",
                                        "name": "sys",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host/root",
                                        "mountPropagation": "HostToContainer",
                                        "name": "root",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "hostPID": true,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 65534,
                            "runAsNonRoot": true,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "kube-prom-stack-prometheus-node-exporter",
                        "serviceAccountName": "kube-prom-stack-prometheus-node-exporter",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/proc",
                                    "type": ""
                                },
                                "name": "proc"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys",
                                    "type": ""
                                },
                                "name": "sys"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                },
                                "name": "root"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"microk8s-application\":\"nginx-ingress-microk8s\"},\"name\":\"nginx-ingress-microk8s-controller\",\"namespace\":\"ingress\"},\"spec\":{\"selector\":{\"matchLabels\":{\"name\":\"nginx-ingress-microk8s\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"nginx-ingress-microk8s\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf\",\"--tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf\",\"--udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf\",\"--ingress-class=public\",\" \",\"--publish-status-address=127.0.0.1\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"registry.k8s.io/ingress-nginx/controller:v1.5.1\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"nginx-ingress-microk8s\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\"},{\"containerPort\":10254,\"hostPort\":10254,\"name\":\"health\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":5},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101}}],\"serviceAccountName\":\"nginx-ingress-microk8s-serviceaccount\",\"terminationGracePeriodSeconds\":60}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:02:26Z",
                "generation": 1,
                "labels": {
                    "microk8s-application": "nginx-ingress-microk8s"
                },
                "name": "nginx-ingress-microk8s-controller",
                "namespace": "ingress",
                "resourceVersion": "1684",
                "uid": "ce8f9a2d-0000-4c78-9f2d-3f13e6612648"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "name": "nginx-ingress-microk8s"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "nginx-ingress-microk8s"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf",
                                    "--tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf",
                                    "--udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf",
                                    "--ingress-class=public",
                                    " ",
                                    "--publish-status-address=127.0.0.1"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/wait-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "nginx-ingress-microk8s",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "hostPort": 80,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 443,
                                        "hostPort": 443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 10254,
                                        "hostPort": 10254,
                                        "name": "health",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 101
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nginx-ingress-microk8s-serviceaccount",
                        "serviceAccountName": "nginx-ingress-microk8s-serviceaccount",
                        "terminationGracePeriodSeconds": 60
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "loki",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:12Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "loki",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "promtail",
                    "app.kubernetes.io/version": "2.7.2",
                    "helm.sh/chart": "promtail-6.8.2"
                },
                "name": "loki-promtail",
                "namespace": "observability",
                "resourceVersion": "1790",
                "uid": "e1e51c7b-7e50-48b7-b077-47ff4c089b70"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "loki",
                        "app.kubernetes.io/name": "promtail"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "48bf099256f45e0b28a4d01c6955618289feb360239ec911f6228a68d3fb1a3d"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "loki",
                            "app.kubernetes.io/name": "promtail"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-config.file=/etc/promtail/promtail.yaml"
                                ],
                                "env": [
                                    {
                                        "name": "HOSTNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "docker.io/grafana/promtail:2.7.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "promtail",
                                "ports": [
                                    {
                                        "containerPort": 3101,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "http-metrics",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/promtail",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/run/promtail",
                                        "name": "run"
                                    },
                                    {
                                        "mountPath": "/var/lib/docker/containers",
                                        "name": "containers",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/log/pods",
                                        "name": "pods",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsGroup": 0,
                            "runAsUser": 0
                        },
                        "serviceAccount": "loki-promtail",
                        "serviceAccountName": "loki-promtail",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "config",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "loki-promtail"
                                }
                            },
                            {
                                "hostPath": {
                                    "path": "/run/promtail",
                                    "type": ""
                                },
                                "name": "run"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/lib/docker/containers",
                                    "type": ""
                                },
                                "name": "containers"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/log/pods",
                                    "type": ""
                                },
                                "name": "pods"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "app.kubernetes.io/version": "v0.10.1",
                    "helm.sh/chart": "node-feature-discovery-0.10.1",
                    "role": "worker"
                },
                "name": "gpu-operator-node-feature-discovery-worker",
                "namespace": "gpu-operator-resources",
                "resourceVersion": "3256",
                "uid": "43d82f72-fb2b-44cc-91ed-44ae9b2bed4f"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "gpu-operator",
                        "app.kubernetes.io/name": "node-feature-discovery",
                        "role": "worker"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "gpu-operator",
                            "app.kubernetes.io/name": "node-feature-discovery",
                            "role": "worker"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--server=gpu-operator-node-feature-discovery-master:8080"
                                ],
                                "command": [
                                    "nfd-worker"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "worker",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host-boot",
                                        "name": "host-boot",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host-etc/os-release",
                                        "name": "host-os-release",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host-sys",
                                        "name": "host-sys",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/host-usr/lib",
                                        "name": "host-usr-lib",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/kubernetes/node-feature-discovery/source.d/",
                                        "name": "source-d",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/kubernetes/node-feature-discovery/features.d/",
                                        "name": "features-d",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/kubernetes/node-feature-discovery",
                                        "name": "nfd-worker-conf",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirstWithHostNet",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "node-feature-discovery",
                        "serviceAccountName": "node-feature-discovery",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Equal",
                                "value": "present"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/boot",
                                    "type": ""
                                },
                                "name": "host-boot"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/os-release",
                                    "type": ""
                                },
                                "name": "host-os-release"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys",
                                    "type": ""
                                },
                                "name": "host-sys"
                            },
                            {
                                "hostPath": {
                                    "path": "/usr/lib",
                                    "type": ""
                                },
                                "name": "host-usr-lib"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/kubernetes/node-feature-discovery/source.d/",
                                    "type": ""
                                },
                                "name": "source-d"
                            },
                            {
                                "hostPath": {
                                    "path": "/etc/kubernetes/node-feature-discovery/features.d/",
                                    "type": ""
                                },
                                "name": "features-d"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "nfd-worker.conf",
                                            "path": "nfd-worker.conf"
                                        }
                                    ],
                                    "name": "gpu-operator-node-feature-discovery-worker-conf"
                                },
                                "name": "nfd-worker-conf"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "886a5b2b0cdff4aa"
                },
                "creationTimestamp": "2023-03-08T22:10:48Z",
                "generation": 1,
                "labels": {
                    "app": "nvidia-mig-manager"
                },
                "name": "nvidia-mig-manager",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3405",
                "uid": "3d33d7e3-9bd3-48ce-ba9e-40ac5a2ae406"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nvidia-mig-manager"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nvidia-mig-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    " [[ -f /run/nvidia/validations/host-driver-ready ]] \u0026\u0026 host_driver=true || host_driver=false; export WITH_SHUTDOWN_HOST_GPU_CLIENTS=$host_driver; exec nvidia-mig-manager"
                                ],
                                "command": [
                                    "bash",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONFIG_FILE",
                                        "value": "/mig-parted-config/config.yaml"
                                    },
                                    {
                                        "name": "GPU_CLIENTS_FILE",
                                        "value": "/gpu-clients/clients.yaml"
                                    },
                                    {
                                        "name": "DEFAULT_GPU_CLIENTS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WITH_REBOOT",
                                        "value": "false"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager:v0.5.0-ubuntu20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nvidia-mig-manager",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/sys",
                                        "name": "host-sys"
                                    },
                                    {
                                        "mountPath": "/mig-parted-config",
                                        "name": "mig-parted-config"
                                    },
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root"
                                    },
                                    {
                                        "mountPath": "/gpu-clients",
                                        "name": "gpu-clients"
                                    },
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "HostToContainer",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostIPC": true,
                        "hostPID": true,
                        "initContainers": [
                            {
                                "args": [
                                    "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container toolkit to be setup; sleep 5; done"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "toolkit-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "HostToContainer",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.mig-manager": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-mig-manager",
                        "serviceAccountName": "nvidia-mig-manager",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/sys",
                                    "type": "Directory"
                                },
                                "name": "host-sys"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "default-mig-parted-config"
                                },
                                "name": "mig-parted-config"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia",
                                    "type": "Directory"
                                },
                                "name": "run-nvidia"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                },
                                "name": "host-root"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "default-gpu-clients"
                                },
                                "name": "gpu-clients"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 0,
                "desiredNumberScheduled": 0,
                "numberMisscheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "f27ca11f585aba29",
                    "openshift.io/scc": "hostmount-anyuid"
                },
                "creationTimestamp": "2023-03-08T22:10:46Z",
                "generation": 1,
                "labels": {
                    "app": "nvidia-container-toolkit-daemonset"
                },
                "name": "nvidia-container-toolkit-daemonset",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3473",
                "uid": "cf81ab82-9e28-40b1-a503-a60492eeed04"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nvidia-container-toolkit-daemonset"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nvidia-container-toolkit-daemonset"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "[[ -f /run/nvidia/validations/host-driver-ready ]] \u0026\u0026 driver_root=/ || driver_root=/run/nvidia/driver; export NVIDIA_DRIVER_ROOT=$driver_root; exec nvidia-toolkit /usr/local/nvidia"
                                ],
                                "command": [
                                    "bash",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "RUNTIME_ARGS",
                                        "value": "--socket /runtime/sock-dir/containerd.sock --config /runtime/config-dir/containerd-template.toml"
                                    },
                                    {
                                        "name": "CONTAINERD_CONFIG",
                                        "value": "/var/snap/microk8s/current/args/containerd-template.toml"
                                    },
                                    {
                                        "name": "CONTAINERD_SOCKET",
                                        "value": "/var/snap/microk8s/common/run/containerd.sock"
                                    },
                                    {
                                        "name": "CONTAINERD_SET_AS_DEFAULT",
                                        "value": "1"
                                    },
                                    {
                                        "name": "RUNTIME",
                                        "value": "containerd"
                                    },
                                    {
                                        "name": "CONTAINERD_RUNTIME_CLASS",
                                        "value": "nvidia"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/k8s/container-toolkit:v1.11.0-ubuntu20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nvidia-container-toolkit-ctr",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true,
                                    "seLinuxOptions": {
                                        "level": "s0"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "Bidirectional",
                                        "name": "nvidia-run-path"
                                    },
                                    {
                                        "mountPath": "/usr/local/nvidia",
                                        "name": "toolkit-install-dir"
                                    },
                                    {
                                        "mountPath": "/usr/share/containers/oci/hooks.d",
                                        "name": "crio-hooks"
                                    },
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/runtime/config-dir/",
                                        "name": "containerd-config"
                                    },
                                    {
                                        "mountPath": "/runtime/sock-dir/",
                                        "name": "containerd-socket"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostPID": true,
                        "initContainers": [
                            {
                                "args": [
                                    "nvidia-validator"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "WITH_WAIT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "COMPONENT",
                                        "value": "driver"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "driver-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true,
                                    "seLinuxOptions": {
                                        "level": "s0"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia/driver",
                                        "mountPropagation": "HostToContainer",
                                        "name": "driver-install-path"
                                    },
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    },
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.container-toolkit": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-container-toolkit",
                        "serviceAccountName": "nvidia-container-toolkit",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/run/nvidia",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "nvidia-run-path"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/validations",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "run-nvidia-validations"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/driver",
                                    "type": ""
                                },
                                "name": "driver-install-path"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                },
                                "name": "host-root"
                            },
                            {
                                "hostPath": {
                                    "path": "/usr/local/nvidia",
                                    "type": ""
                                },
                                "name": "toolkit-install-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/containers/oci/hooks.d",
                                    "type": ""
                                },
                                "name": "crio-hooks"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/current/args",
                                    "type": ""
                                },
                                "name": "containerd-config"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/run",
                                    "type": ""
                                },
                                "name": "containerd-socket"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "ba65f9df14588d83"
                },
                "creationTimestamp": "2023-03-08T22:10:48Z",
                "generation": 1,
                "labels": {
                    "app": "gpu-feature-discovery",
                    "app.kubernetes.io/part-of": "nvidia-gpu"
                },
                "name": "gpu-feature-discovery",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3595",
                "uid": "867089ad-f959-4e0e-85d1-bf51e11c23ce"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "gpu-feature-discovery",
                        "app.kubernetes.io/part-of": "nvidia-gpu"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "gpu-feature-discovery",
                            "app.kubernetes.io/part-of": "nvidia-gpu"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "GFD_SLEEP_INTERVAL",
                                        "value": "60s"
                                    },
                                    {
                                        "name": "GFD_FAIL_ON_INIT_ERROR",
                                        "value": "true"
                                    },
                                    {
                                        "name": "GFD_MIG_STRATEGY",
                                        "value": "single"
                                    },
                                    {
                                        "name": "NVIDIA_MIG_MONITOR_DEVICES",
                                        "value": "all"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/gpu-feature-discovery:v0.6.2-ubi8",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "gpu-feature-discovery",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kubernetes/node-feature-discovery/features.d",
                                        "name": "output-dir"
                                    },
                                    {
                                        "mountPath": "/sys/class/dmi/id/product_name",
                                        "name": "dmi-product-name"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "toolkit-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-gpu-feature-discovery",
                        "serviceAccountName": "nvidia-gpu-feature-discovery",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/etc/kubernetes/node-feature-discovery/features.d",
                                    "type": ""
                                },
                                "name": "output-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/sys/class/dmi/id/product_name",
                                    "type": ""
                                },
                                "name": "dmi-product-name"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia",
                                    "type": "Directory"
                                },
                                "name": "run-nvidia"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "69059c12ec827f14",
                    "openshift.io/scc": "nvidia-dcgm-exporter"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generation": 1,
                "labels": {
                    "app": "nvidia-dcgm-exporter"
                },
                "name": "nvidia-dcgm-exporter",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "3744",
                "uid": "20a12c27-e854-42d4-a034-db836f53e5f0"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nvidia-dcgm-exporter"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nvidia-dcgm-exporter"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "DCGM_EXPORTER_LISTEN",
                                        "value": ":9400"
                                    },
                                    {
                                        "name": "DCGM_EXPORTER_KUBERNETES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "DCGM_EXPORTER_COLLECTORS",
                                        "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/k8s/dcgm-exporter:3.0.4-3.0.0-ubuntu20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nvidia-dcgm-exporter",
                                "ports": [
                                    {
                                        "containerPort": 9400,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/kubelet/pod-resources",
                                        "name": "pod-gpu-resources",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "toolkit-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "HostToContainer",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.dcgm-exporter": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-dcgm-exporter",
                        "serviceAccountName": "nvidia-dcgm-exporter",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/lib/kubelet/pod-resources",
                                    "type": ""
                                },
                                "name": "pod-gpu-resources"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia",
                                    "type": ""
                                },
                                "name": "run-nvidia"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "openebs",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "openebs-3.3.1",
                    "component": "ndm",
                    "heritage": "Helm",
                    "openebs.io/component-name": "ndm",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-ndm",
                "namespace": "openebs",
                "resourceVersion": "5880",
                "uid": "7add4983-29e1-4940-b299-e6d76801b048"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "openebs",
                        "component": "ndm",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "openebs",
                            "component": "ndm",
                            "name": "openebs-ndm",
                            "openebs.io/component-name": "ndm",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-v=4",
                                    "--feature-gates=GPTBasedUUID"
                                ],
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SPARSE_FILE_DIR",
                                        "value": "/var/snap/microk8s/common/var/openebs/sparse"
                                    },
                                    {
                                        "name": "SPARSE_FILE_SIZE",
                                        "value": "10737418240"
                                    },
                                    {
                                        "name": "SPARSE_FILE_COUNT",
                                        "value": "0"
                                    }
                                ],
                                "image": "openebs/node-disk-manager:2.0.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "pgrep",
                                            "ndm"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "openebs-ndm",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host/node-disk-manager.config",
                                        "name": "config",
                                        "readOnly": true,
                                        "subPath": "node-disk-manager.config"
                                    },
                                    {
                                        "mountPath": "/run/udev",
                                        "name": "udev"
                                    },
                                    {
                                        "mountPath": "/host/proc",
                                        "name": "procmount",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/dev",
                                        "name": "devmount"
                                    },
                                    {
                                        "mountPath": "/var/openebs/ndm",
                                        "name": "basepath"
                                    },
                                    {
                                        "mountPath": "/var/snap/microk8s/common/var/openebs/sparse",
                                        "name": "sparsepath"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs",
                        "serviceAccountName": "openebs",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "openebs-ndm-config"
                                },
                                "name": "config"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/udev",
                                    "type": "Directory"
                                },
                                "name": "udev"
                            },
                            {
                                "hostPath": {
                                    "path": "/proc",
                                    "type": "Directory"
                                },
                                "name": "procmount"
                            },
                            {
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                },
                                "name": "devmount"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/openebs/ndm",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "basepath"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/openebs/sparse",
                                    "type": ""
                                },
                                "name": "sparsepath"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "openebs-cstor-csi-node",
                    "heritage": "Helm",
                    "name": "openebs-cstor-csi-node",
                    "openebs.io/component-name": "openebs-cstor-csi-node",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-csi-node",
                "namespace": "openebs",
                "resourceVersion": "6080",
                "uid": "1cce3d08-7ed6-4f26-97b8-c6714747daff"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "openebs-cstor-csi-node",
                        "name": "openebs-cstor-csi-node",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "openebs-cstor-csi-node",
                            "heritage": "Helm",
                            "name": "openebs-cstor-csi-node",
                            "openebs.io/component-name": "openebs-cstor-csi-node",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/plugin/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/snap/microk8s/common/var/lib/kubelet/plugins/cstor.csi.openebs.io/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_DRIVER",
                                        "value": "openebs-cstor-csi"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "rm -rf /registration/cstor.csi.openebs.io /registration/cstor.csi.openebs.io-reg.sock"
                                            ]
                                        }
                                    }
                                },
                                "name": "csi-node-driver-registrar",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/plugin",
                                        "name": "plugin-dir"
                                    },
                                    {
                                        "mountPath": "/registration",
                                        "name": "registration-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--nodeid=$(OPENEBS_NODE_ID)",
                                    "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                                    "--url=$(OPENEBS_CSI_API_URL)",
                                    "--plugin=$(OPENEBS_NODE_DRIVER)"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NODE_ID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_CSI_ENDPOINT",
                                        "value": "unix:///plugin/csi.sock"
                                    },
                                    {
                                        "name": "OPENEBS_NODE_DRIVER",
                                        "value": "node"
                                    },
                                    {
                                        "name": "OPENEBS_CSI_API_URL",
                                        "value": "https://openebs.io"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REMOUNT",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/cstor-csi-driver:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cstor-csi-plugin",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/plugin",
                                        "name": "plugin-dir"
                                    },
                                    {
                                        "mountPath": "/dev",
                                        "name": "device-dir"
                                    },
                                    {
                                        "mountPath": "/var/snap/microk8s/common/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional",
                                        "name": "pods-mount-dir"
                                    },
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root"
                                    },
                                    {
                                        "mountPath": "/sbin/iscsiadm",
                                        "name": "chroot-iscsiadm",
                                        "subPath": "iscsiadm"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "priorityClassName": "openebs-cstor-csi-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-csi-node-sa",
                        "serviceAccountName": "openebs-cstor-csi-node-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                },
                                "name": "device-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "registration-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins/cstor.csi.openebs.io/",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "plugin-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/",
                                    "type": "Directory"
                                },
                                "name": "pods-mount-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "openebs-cstor-csi-iscsiadm"
                                },
                                "name": "chroot-iscsiadm"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": "Directory"
                                },
                                "name": "host-root"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "jiva-3.3.0",
                    "component": "openebs-jiva-csi-node",
                    "heritage": "Helm",
                    "name": "openebs-jiva-csi-node",
                    "openebs.io/component-name": "openebs-jiva-csi-node",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-jiva-csi-node",
                "namespace": "openebs",
                "resourceVersion": "6191",
                "uid": "2005e698-1fdd-40f3-96f6-21e89bf80047"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "openebs-jiva-csi-node",
                        "name": "openebs-jiva-csi-node",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "jiva-3.3.0",
                            "component": "openebs-jiva-csi-node",
                            "heritage": "Helm",
                            "name": "openebs-jiva-csi-node",
                            "openebs.io/component-name": "openebs-jiva-csi-node",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/plugin/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/snap/microk8s/common/var/lib/kubelet/plugins/jiva.csi.openebs.io/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_DRIVER",
                                        "value": "openebs-jiva-csi"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "rm -rf /registration/jiva.csi.openebs.io /registration/jiva.csi.openebs.io-reg.sock"
                                            ]
                                        }
                                    }
                                },
                                "name": "csi-node-driver-registrar",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/plugin",
                                        "name": "plugin-dir"
                                    },
                                    {
                                        "mountPath": "/registration",
                                        "name": "registration-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--name=jiva.csi.openebs.io",
                                    "--nodeid=$(OPENEBS_NODE_ID)",
                                    "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                                    "--plugin=$(OPENEBS_NODE_DRIVER)",
                                    "--enableiscsidebug=true",
                                    "--retrycount=20",
                                    "--metricsBindAddress=:9505"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NODE_ID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_CSI_ENDPOINT",
                                        "value": "unix:///plugin/csi.sock"
                                    },
                                    {
                                        "name": "OPENEBS_NODE_DRIVER",
                                        "value": "node"
                                    },
                                    {
                                        "name": "OPENEBS_CSI_API_URL",
                                        "value": "https://openebs.io"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REMOUNT",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/jiva-csi:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jiva-csi-plugin",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/plugin",
                                        "name": "plugin-dir"
                                    },
                                    {
                                        "mountPath": "/dev",
                                        "name": "device-dir"
                                    },
                                    {
                                        "mountPath": "/var/snap/microk8s/common/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional",
                                        "name": "pods-mount-dir"
                                    },
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root"
                                    },
                                    {
                                        "mountPath": "/sbin/iscsiadm",
                                        "name": "chroot-iscsiadm",
                                        "subPath": "iscsiadm"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--csi-address=/plugin/csi.sock"
                                ],
                                "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "liveness-probe",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/plugin",
                                        "name": "plugin-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "hostNetwork": true,
                        "priorityClassName": "openebs-jiva-csi-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-jiva-csi-node-sa",
                        "serviceAccountName": "openebs-jiva-csi-node-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                },
                                "name": "device-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "registration-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/plugins/jiva.csi.openebs.io/",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "plugin-dir"
                            },
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/var/lib/kubelet/",
                                    "type": "Directory"
                                },
                                "name": "pods-mount-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 365,
                                    "name": "openebs-jiva-csi-iscsiadm"
                                },
                                "name": "chroot-iscsiadm"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": "Directory"
                                },
                                "name": "host-root"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "9182980bc9ba0300",
                    "openshift.io/scc": "hostmount-anyuid"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generation": 1,
                "labels": {
                    "app": "nvidia-device-plugin-daemonset"
                },
                "name": "nvidia-device-plugin-daemonset",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "7649",
                "uid": "a77aac12-c0c5-4bf9-9284-691034f38668"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nvidia-device-plugin-daemonset"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nvidia-device-plugin-daemonset"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "[[ -f /run/nvidia/validations/host-driver-ready ]] \u0026\u0026 driver_root=/ || driver_root=/run/nvidia/driver; export NVIDIA_DRIVER_ROOT=$driver_root; exec nvidia-device-plugin;"
                                ],
                                "command": [
                                    "bash",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "PASS_DEVICE_SPECS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "FAIL_ON_INIT_ERROR",
                                        "value": "true"
                                    },
                                    {
                                        "name": "DEVICE_LIST_STRATEGY",
                                        "value": "envvar"
                                    },
                                    {
                                        "name": "DEVICE_ID_STRATEGY",
                                        "value": "uuid"
                                    },
                                    {
                                        "name": "NVIDIA_VISIBLE_DEVICES",
                                        "value": "all"
                                    },
                                    {
                                        "name": "NVIDIA_DRIVER_CAPABILITIES",
                                        "value": "all"
                                    },
                                    {
                                        "name": "MIG_STRATEGY",
                                        "value": "single"
                                    },
                                    {
                                        "name": "NVIDIA_MIG_MONITOR_DEVICES",
                                        "value": "all"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/k8s-device-plugin:v0.12.3-ubi8",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "nvidia-device-plugin",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/kubelet/device-plugins",
                                        "name": "device-plugin"
                                    },
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "HostToContainer",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "until [ -f /run/nvidia/validations/toolkit-ready ]; do echo waiting for nvidia container stack to be setup; sleep 5; done"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "toolkit-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia",
                                        "mountPropagation": "HostToContainer",
                                        "name": "run-nvidia"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.device-plugin": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-device-plugin",
                        "serviceAccountName": "nvidia-device-plugin",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/lib/kubelet/device-plugins",
                                    "type": ""
                                },
                                "name": "device-plugin"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia",
                                    "type": "Directory"
                                },
                                "name": "run-nvidia"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "metadata": {
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "nvidia.com/last-applied-hash": "a3ef6bedb83e099a"
                },
                "creationTimestamp": "2023-03-08T22:10:47Z",
                "generation": 1,
                "labels": {
                    "app": "nvidia-operator-validator",
                    "app.kubernetes.io/part-of": "gpu-operator"
                },
                "name": "nvidia-operator-validator",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "nvidia.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ClusterPolicy",
                        "name": "cluster-policy",
                        "uid": "55941a24-7930-4102-b91e-a055a3546d7d"
                    }
                ],
                "resourceVersion": "7650",
                "uid": "e7218198-7918-4fa4-88a0-ec05f47c3a9e"
            },
            "spec": {
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "nvidia-operator-validator",
                        "app.kubernetes.io/part-of": "gpu-operator"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "nvidia-operator-validator",
                            "app.kubernetes.io/part-of": "gpu-operator"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "echo all validations are successful; sleep infinity"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "rm -f /run/nvidia/validations/*-ready"
                                            ]
                                        }
                                    }
                                },
                                "name": "nvidia-operator-validator",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "nvidia-validator"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "WITH_WAIT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "COMPONENT",
                                        "value": "driver"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "driver-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true,
                                    "seLinuxOptions": {
                                        "level": "s0"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host",
                                        "mountPropagation": "HostToContainer",
                                        "name": "host-root",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/run/nvidia/driver",
                                        "mountPropagation": "HostToContainer",
                                        "name": "driver-install-path"
                                    },
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "nvidia-validator"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "WITH_WAIT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "COMPONENT",
                                        "value": "toolkit"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "toolkit-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "nvidia-validator"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "WITH_WAIT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "COMPONENT",
                                        "value": "cuda"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "VALIDATOR_IMAGE",
                                        "value": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0"
                                    },
                                    {
                                        "name": "VALIDATOR_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent"
                                    },
                                    {
                                        "name": "VALIDATOR_RUNTIME_CLASS",
                                        "value": "nvidia"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cuda-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "nvidia-validator"
                                ],
                                "command": [
                                    "sh",
                                    "-c"
                                ],
                                "env": [
                                    {
                                        "name": "COMPONENT",
                                        "value": "plugin"
                                    },
                                    {
                                        "name": "WITH_WAIT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "WITH_WORKLOAD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "MIG_STRATEGY",
                                        "value": "single"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "VALIDATOR_IMAGE",
                                        "value": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0"
                                    },
                                    {
                                        "name": "VALIDATOR_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent"
                                    },
                                    {
                                        "name": "VALIDATOR_RUNTIME_CLASS",
                                        "value": "nvidia"
                                    }
                                ],
                                "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "plugin-validation",
                                "resources": {},
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/run/nvidia/validations",
                                        "mountPropagation": "Bidirectional",
                                        "name": "run-nvidia-validations"
                                    }
                                ]
                            }
                        ],
                        "nodeSelector": {
                            "nvidia.com/gpu.deploy.operator-validator": "true"
                        },
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "runtimeClassName": "nvidia",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "nvidia-operator-validator",
                        "serviceAccountName": "nvidia-operator-validator",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "nvidia.com/gpu",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/validations",
                                    "type": "DirectoryOrCreate"
                                },
                                "name": "run-nvidia-validations"
                            },
                            {
                                "hostPath": {
                                    "path": "/run/nvidia/driver",
                                    "type": ""
                                },
                                "name": "driver-install-path"
                            },
                            {
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                },
                                "name": "host-root"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "maxSurge": 0,
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "currentNumberScheduled": 1,
                "desiredNumberScheduled": 1,
                "numberAvailable": 1,
                "numberMisscheduled": 0,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"k8s-app\":\"calico-kube-controllers\"}},\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"calico-kube-controllers\"},\"name\":\"calico-kube-controllers\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"ENABLED_CONTROLLERS\",\"value\":\"node\"},{\"name\":\"DATASTORE_TYPE\",\"value\":\"kubernetes\"}],\"image\":\"docker.io/calico/kube-controllers:v3.23.5\",\"livenessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-l\"]},\"failureThreshold\":6,\"initialDelaySeconds\":10,\"periodSeconds\":10,\"timeoutSeconds\":10},\"name\":\"calico-kube-controllers\",\"readinessProbe\":{\"exec\":{\"command\":[\"/usr/bin/check-status\",\"-r\"]},\"periodSeconds\":10}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"calico-kube-controllers\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T21:59:01Z",
                "generation": 2,
                "labels": {
                    "k8s-app": "calico-kube-controllers"
                },
                "name": "calico-kube-controllers",
                "namespace": "kube-system",
                "resourceVersion": "363",
                "uid": "f6484cc8-ad86-49fe-8305-1cbbe691f2a4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2023-03-08T13:59:07-08:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers"
                        },
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "image": "docker.io/calico/kube-controllers:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "calico-kube-controllers",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "calico-kube-controllers",
                        "serviceAccountName": "calico-kube-controllers",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T21:59:32Z",
                        "lastUpdateTime": "2023-03-08T21:59:32Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T21:59:06Z",
                        "lastUpdateTime": "2023-03-08T21:59:32Z",
                        "message": "ReplicaSet \"calico-kube-controllers-69d6f7455c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"10%\",\"maxUnavailable\":0},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"priorityClassName\":\"system-cluster-critical\"},\"labels\":{\"k8s-app\":\"kube-dns\"}},\"spec\":{\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"coredns/coredns:1.9.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T21:59:37Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "413",
                "uid": "8c9ed8cc-a5b1-4a3d-bec9-453b07f7fca1"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "10%",
                        "maxUnavailable": 0
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "priorityClassName": "system-cluster-critical"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "coredns/coredns:1.9.3",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T21:59:41Z",
                        "lastUpdateTime": "2023-03-08T21:59:41Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T21:59:37Z",
                        "lastUpdateTime": "2023-03-08T21:59:41Z",
                        "message": "ReplicaSet \"coredns-6f5f9b5d74\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"hostpath-provisioner\"},\"name\":\"hostpath-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":0,\"selector\":{\"matchLabels\":{\"k8s-app\":\"hostpath-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"hostpath-provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"PV_DIR\",\"value\":\"/var/snap/microk8s/common/default-storage\"},{\"name\":\"BUSYBOX_IMAGE\",\"value\":\"busybox:1.28.4\"}],\"image\":\"cdkbot/hostpath-provisioner:1.4.2\",\"name\":\"hostpath-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/var/snap/microk8s/common/default-storage\",\"name\":\"pv-volume\"}]}],\"serviceAccountName\":\"microk8s-hostpath\",\"volumes\":[{\"hostPath\":{\"path\":\"/var/snap/microk8s/common/default-storage\"},\"name\":\"pv-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T21:59:48Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "hostpath-provisioner"
                },
                "name": "hostpath-provisioner",
                "namespace": "kube-system",
                "resourceVersion": "742",
                "uid": "7875e7d4-6c9a-431e-a3a6-a2a895e9290a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hostpath-provisioner"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "hostpath-provisioner"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PV_DIR",
                                        "value": "/var/snap/microk8s/common/default-storage"
                                    },
                                    {
                                        "name": "BUSYBOX_IMAGE",
                                        "value": "busybox:1.28.4"
                                    }
                                ],
                                "image": "cdkbot/hostpath-provisioner:1.4.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "hostpath-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/snap/microk8s/common/default-storage",
                                        "name": "pv-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "microk8s-hostpath",
                        "serviceAccountName": "microk8s-hostpath",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/default-storage",
                                    "type": ""
                                },
                                "name": "pv-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:01:18Z",
                        "lastUpdateTime": "2023-03-08T22:01:18Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:01:18Z",
                        "message": "ReplicaSet \"hostpath-provisioner-69cd9ff5b8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"},\"name\":\"dashboard-metrics-scraper\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"dashboard-metrics-scraper\"}},\"spec\":{\"containers\":[{\"image\":\"kubernetesui/metrics-scraper:v1.0.8\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8000,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"dashboard-metrics-scraper\",\"ports\":[{\"containerPort\":8000,\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"kubernetes-dashboard\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:06Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper"
                },
                "name": "dashboard-metrics-scraper",
                "namespace": "kube-system",
                "resourceVersion": "964",
                "uid": "e9c925cc-4640-48c7-8d6a-5f2c801764da"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "dashboard-metrics-scraper"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "dashboard-metrics-scraper"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "kubernetesui/metrics-scraper:v1.0.8",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "dashboard-metrics-scraper",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 2001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "kubernetes-dashboard",
                        "serviceAccountName": "kubernetes-dashboard",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:01:22Z",
                        "lastUpdateTime": "2023-03-08T22:01:22Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:01:22Z",
                        "message": "ReplicaSet \"dashboard-metrics-scraper-7bc864c59\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":0}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"}},\"spec\":{\"containers\":[{\"args\":[\"--cert-dir=/tmp\",\"--secure-port=4443\",\"--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname\",\"--kubelet-use-node-status-port\",\"--metric-resolution=15s\",\"--kubelet-insecure-tls\"],\"image\":\"registry.k8s.io/metrics-server/metrics-server:v0.5.2\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"periodSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"securityContext\":{\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":1000},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"nodeSelector\":{\"kubernetes.io/arch\":\"amd64\",\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"metrics-server\",\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:02Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "metrics-server"
                },
                "name": "metrics-server",
                "namespace": "kube-system",
                "resourceVersion": "1548",
                "uid": "e41e9224-0886-4550-b817-5b686fe99f0f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 0
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=15s",
                                    "--kubelet-insecure-tls"
                                ],
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.5.2",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "metrics-server",
                                "ports": [
                                    {
                                        "containerPort": 4443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64",
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "metrics-server",
                        "serviceAccountName": "metrics-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "ReplicaSet \"metrics-server-6f754f88d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kubernetes-dashboard\"}},\"spec\":{\"containers\":[{\"args\":[\"--auto-generate-certificates\",\"--namespace=kube-system\"],\"image\":\"kubernetesui/dashboard:v2.7.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":8443,\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":30},\"name\":\"kubernetes-dashboard\",\"ports\":[{\"containerPort\":8443,\"protocol\":\"TCP\"}],\"securityContext\":{\"allowPrivilegeEscalation\":false,\"readOnlyRootFilesystem\":true,\"runAsGroup\":2001,\"runAsUser\":1001},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"kubernetes-dashboard-certs\"},{\"mountPath\":\"/tmp\",\"name\":\"tmp-volume\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"kubernetes-dashboard\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"}],\"volumes\":[{\"name\":\"kubernetes-dashboard-certs\",\"secret\":{\"secretName\":\"kubernetes-dashboard-certs\"}},{\"emptyDir\":{},\"name\":\"tmp-volume\"}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:00:06Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resourceVersion": "1549",
                "uid": "c26b62be-a525-43f8-92ec-0c8cea9f6d76"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--auto-generate-certificates",
                                    "--namespace=kube-system"
                                ],
                                "image": "kubernetesui/dashboard:v2.7.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "kubernetes-dashboard",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 2001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/certs",
                                        "name": "kubernetes-dashboard-certs"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "kubernetes-dashboard",
                        "serviceAccountName": "kubernetes-dashboard",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kubernetes-dashboard-certs"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "ReplicaSet \"kubernetes-dashboard-dc96f9fc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\"},\"name\":\"console\",\"namespace\":\"minio-operator\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"console\"}},\"template\":{\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\"},\"labels\":{\"app\":\"console\"}},\"spec\":{\"containers\":[{\"args\":[\"server\"],\"env\":[{\"name\":\"CONSOLE_OPERATOR_MODE\",\"value\":\"on\"}],\"image\":\"minio/console:v0.20.3\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"console\",\"ports\":[{\"containerPort\":9090,\"name\":\"http\"},{\"containerPort\":9433,\"name\":\"https\"}],\"securityContext\":{\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000}}],\"serviceAccountName\":\"console-sa\"}}}}\n",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:00:32Z",
                "generation": 1,
                "name": "console",
                "namespace": "minio-operator",
                "resourceVersion": "1550",
                "uid": "3df3996c-702d-4546-b2b1-564e557a6450"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "console"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "operator.min.io/authors": "MinIO, Inc.",
                            "operator.min.io/license": "AGPLv3",
                            "operator.min.io/support": "https://subnet.min.io"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "console"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "server"
                                ],
                                "env": [
                                    {
                                        "name": "CONSOLE_OPERATOR_MODE",
                                        "value": "on"
                                    }
                                ],
                                "image": "minio/console:v0.20.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "console",
                                "ports": [
                                    {
                                        "containerPort": 9090,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9433,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 1000,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "console-sa",
                        "serviceAccountName": "console-sa",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "ReplicaSet \"console-66c4b79fbd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "app.kubernetes.io/part-of": "kube-state-metrics",
                    "app.kubernetes.io/version": "2.8.1",
                    "helm.sh/chart": "kube-state-metrics-5.0.0",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-state-metrics",
                "namespace": "observability",
                "resourceVersion": "1551",
                "uid": "4476f86f-6e00-4b0b-9725-64f0a315891c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack",
                        "app.kubernetes.io/name": "kube-state-metrics"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "metrics",
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "kube-state-metrics",
                            "app.kubernetes.io/part-of": "kube-state-metrics",
                            "app.kubernetes.io/version": "2.8.1",
                            "helm.sh/chart": "kube-state-metrics-5.0.0",
                            "release": "kube-prom-stack"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--port=8080",
                                    "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments"
                                ],
                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "kube-state-metrics",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 65534,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "kube-prom-stack-kube-state-metrics",
                        "serviceAccountName": "kube-prom-stack-kube-state-metrics",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "ReplicaSet \"kube-prom-stack-kube-state-metrics-8577f76959\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app": "kube-prometheus-stack-operator",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-operator",
                "namespace": "observability",
                "resourceVersion": "1552",
                "uid": "4ab0c536-0b74-4aa0-b517-1594139be9f9"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kube-prometheus-stack-operator",
                        "release": "kube-prom-stack"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kube-prometheus-stack-operator",
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/part-of": "kube-prometheus-stack",
                            "app.kubernetes.io/version": "45.7.1",
                            "chart": "kube-prometheus-stack-45.7.1",
                            "heritage": "Helm",
                            "release": "kube-prom-stack"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--kubelet-service=kube-system/kube-prom-stack-kube-prome-kubelet",
                                    "--localhost=127.0.0.1",
                                    "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                                    "--config-reloader-cpu-request=200m",
                                    "--config-reloader-cpu-limit=200m",
                                    "--config-reloader-memory-request=50Mi",
                                    "--config-reloader-memory-limit=50Mi",
                                    "--thanos-default-base-image=quay.io/thanos/thanos:v0.30.2",
                                    "--web.enable-tls=true",
                                    "--web.cert-file=/cert/cert",
                                    "--web.key-file=/cert/key",
                                    "--web.listen-address=:10250",
                                    "--web.tls-min-version=VersionTLS13"
                                ],
                                "image": "quay.io/prometheus-operator/prometheus-operator:v0.63.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-prometheus-stack",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/cert",
                                        "name": "tls-secret",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 65534,
                            "runAsNonRoot": true,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "kube-prom-stack-kube-prome-operator",
                        "serviceAccountName": "kube-prom-stack-kube-prome-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "tls-secret",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kube-prom-stack-kube-prome-admission"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:12Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "lastUpdateTime": "2023-03-08T22:06:12Z",
                        "message": "ReplicaSet \"kube-prom-stack-kube-prome-operator-5fd9456cd9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "grafana",
                    "app.kubernetes.io/version": "9.3.8",
                    "helm.sh/chart": "grafana-6.51.5"
                },
                "name": "kube-prom-stack-grafana",
                "namespace": "observability",
                "resourceVersion": "1567",
                "uid": "9b475332-1e5d-46dd-82d6-74bf9aa2c1b4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack",
                        "app.kubernetes.io/name": "grafana"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "60947034e066545907edba4161f3d1f9823e730437eb2883446cc81b624e4086",
                            "checksum/dashboards-json-config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                            "checksum/sc-dashboard-provider-config": "2a79bd8307ccae3521afb43ea4a5f1f0d2deda4b6481f8b131efe44277bc502f",
                            "checksum/secret": "3d5dc20ad0dbb3f93006527887f0d3ffa2a535c06d911c586facc0d7d9421902"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/name": "grafana"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "METHOD",
                                        "value": "WATCH"
                                    },
                                    {
                                        "name": "LABEL",
                                        "value": "grafana_dashboard"
                                    },
                                    {
                                        "name": "LABEL_VALUE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FOLDER",
                                        "value": "/tmp/dashboards"
                                    },
                                    {
                                        "name": "RESOURCE",
                                        "value": "both"
                                    },
                                    {
                                        "name": "REQ_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_URL",
                                        "value": "http://localhost:3000/api/admin/provisioning/dashboards/reload"
                                    },
                                    {
                                        "name": "REQ_METHOD",
                                        "value": "POST"
                                    }
                                ],
                                "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "grafana-sc-dashboard",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/dashboards",
                                        "name": "sc-dashboard-volume"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "METHOD",
                                        "value": "WATCH"
                                    },
                                    {
                                        "name": "LABEL",
                                        "value": "grafana_datasource"
                                    },
                                    {
                                        "name": "LABEL_VALUE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FOLDER",
                                        "value": "/etc/grafana/provisioning/datasources"
                                    },
                                    {
                                        "name": "RESOURCE",
                                        "value": "both"
                                    },
                                    {
                                        "name": "REQ_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_URL",
                                        "value": "http://localhost:3000/api/admin/provisioning/datasources/reload"
                                    },
                                    {
                                        "name": "REQ_METHOD",
                                        "value": "POST"
                                    }
                                ],
                                "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "grafana-sc-datasources",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/grafana/provisioning/datasources",
                                        "name": "sc-datasources-volume"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_SECURITY_ADMIN_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_SECURITY_ADMIN_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_PATHS_DATA",
                                        "value": "/var/lib/grafana/"
                                    },
                                    {
                                        "name": "GF_PATHS_LOGS",
                                        "value": "/var/log/grafana"
                                    },
                                    {
                                        "name": "GF_PATHS_PLUGINS",
                                        "value": "/var/lib/grafana/plugins"
                                    },
                                    {
                                        "name": "GF_PATHS_PROVISIONING",
                                        "value": "/etc/grafana/provisioning"
                                    }
                                ],
                                "image": "grafana/grafana:9.3.8",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "path": "/api/health",
                                        "port": 3000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "grafana",
                                "ports": [
                                    {
                                        "containerPort": 3000,
                                        "name": "grafana",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "gossip-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "gossip-udp",
                                        "protocol": "UDP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/api/health",
                                        "port": 3000,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/grafana/grafana.ini",
                                        "name": "config",
                                        "subPath": "grafana.ini"
                                    },
                                    {
                                        "mountPath": "/var/lib/grafana",
                                        "name": "storage"
                                    },
                                    {
                                        "mountPath": "/tmp/dashboards",
                                        "name": "sc-dashboard-volume"
                                    },
                                    {
                                        "mountPath": "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml",
                                        "name": "sc-dashboard-provider",
                                        "subPath": "provider.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/grafana/provisioning/datasources",
                                        "name": "sc-datasources-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 472,
                            "runAsGroup": 472,
                            "runAsUser": 472
                        },
                        "serviceAccount": "kube-prom-stack-grafana",
                        "serviceAccountName": "kube-prom-stack-grafana",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-prom-stack-grafana"
                                },
                                "name": "config"
                            },
                            {
                                "emptyDir": {},
                                "name": "storage"
                            },
                            {
                                "emptyDir": {},
                                "name": "sc-dashboard-volume"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-prom-stack-grafana-config-dashboards"
                                },
                                "name": "sc-dashboard-provider"
                            },
                            {
                                "emptyDir": {},
                                "name": "sc-datasources-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:06:13Z",
                        "lastUpdateTime": "2023-03-08T22:06:13Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:01:20Z",
                        "lastUpdateTime": "2023-03-08T22:06:13Z",
                        "message": "ReplicaSet \"kube-prom-stack-grafana-55cdcd77fb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "redis",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-redis",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "6.2.6-alpine",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-redis",
                "namespace": "argocd",
                "resourceVersion": "2475",
                "uid": "ef7aeb5e-00c8-4d1b-a980-bc35db76be7e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "redis",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-redis",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "6.2.6-alpine",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "args": [
                                    "--save",
                                    "",
                                    "--appendonly",
                                    "no"
                                ],
                                "image": "redis:6.2.6-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "argo-cd-argocd-redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "name": "redis",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 999
                        },
                        "serviceAccount": "default",
                        "serviceAccountName": "default",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:09:43Z",
                        "lastUpdateTime": "2023-03-08T22:09:43Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:38Z",
                        "lastUpdateTime": "2023-03-08T22:09:43Z",
                        "message": "ReplicaSet \"argo-cd-argocd-redis-5c54d675d4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "notifications-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-notifications-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-notifications-controller",
                "namespace": "argocd",
                "resourceVersion": "2610",
                "uid": "0fb9c986-d10a-47ea-8521-5e92e39ec53f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-notifications-controller"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "notifications-controller",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-notifications-controller",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "argocd-notifications",
                                    "--loglevel=info",
                                    "--namespace=argocd",
                                    "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                                    "--secret-name=argo-cd-argocd-notifications-controller-secret",
                                    "--config-map-name=argo-cd-argocd-notifications-controller-cm"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "notifications-controller",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    }
                                ],
                                "workingDir": "/app"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true
                        },
                        "serviceAccount": "argocd-notifications-controller",
                        "serviceAccountName": "argocd-notifications-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:09:53Z",
                        "lastUpdateTime": "2023-03-08T22:09:53Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:38Z",
                        "lastUpdateTime": "2023-03-08T22:09:53Z",
                        "message": "ReplicaSet \"argo-cd-argocd-notifications-controller-7d978b7df\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "applicationset-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-applicationset-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v0.4.1",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-applicationset-controller",
                "namespace": "argocd",
                "resourceVersion": "2643",
                "uid": "356efc70-647a-491c-9b72-586ed1efb2da"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-applicationset-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "applicationset-controller",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-applicationset-controller",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v0.4.1",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "applicationset-controller",
                                    "--metrics-addr=:8080",
                                    "--probe-addr=:8081",
                                    "--namespace=argocd",
                                    "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                                    "--policy=sync",
                                    "--debug=false",
                                    "--dry-run=false"
                                ],
                                "image": "quay.io/argoproj/argocd-applicationset:v0.4.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "applicationset-controller",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 7000,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-cd-argocd-applicationset-controller",
                        "serviceAccountName": "argo-cd-argocd-applicationset-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:09:58Z",
                        "lastUpdateTime": "2023-03-08T22:09:58Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:38Z",
                        "lastUpdateTime": "2023-03-08T22:09:58Z",
                        "message": "ReplicaSet \"argo-cd-argocd-applicationset-controller-5c9d544f47\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"istio-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"istio\":\"pilot\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"15014\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"containers\":[{\"args\":[\"discovery\",\"--monitoringAddr=:15014\",\"--log_output_level=default:info\",\"--domain\",\"cluster.local\",\"--keepaliveMaxServerConnectionAge\",\"30m\"],\"env\":[{\"name\":\"REVISION\",\"value\":\"default\"},{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"KUBECONFIG\",\"value\":\"/var/run/secrets/remote/config\"},{\"name\":\"PILOT_TRACE_SAMPLING\",\"value\":\"100\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND\",\"value\":\"true\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND\",\"value\":\"true\"},{\"name\":\"ISTIOD_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"PILOT_ENABLE_ANALYSIS\",\"value\":\"false\"},{\"name\":\"CLUSTER_ID\",\"value\":\"Kubernetes\"}],\"image\":\"docker.io/istio/pilot:1.15.3\",\"name\":\"discovery\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":15010,\"protocol\":\"TCP\"},{\"containerPort\":15017,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8080},\"initialDelaySeconds\":1,\"periodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/istio-dns\",\"name\":\"local-certs\"},{\"mountPath\":\"/etc/cacerts\",\"name\":\"cacerts\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/remote\",\"name\":\"istio-kubeconfig\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"istiod\",\"volumes\":[{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"local-certs\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"name\":\"cacerts\",\"secret\":{\"optional\":true,\"secretName\":\"cacerts\"}},{\"name\":\"istio-kubeconfig\",\"secret\":{\"optional\":true,\"secretName\":\"istio-kubeconfig\"}}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:09:48Z",
                "generation": 1,
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istiod",
                "namespace": "istio-system",
                "resourceVersion": "2711",
                "uid": "d07f65ed-aef6-4412-890d-08d6d5305319"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "100%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "100"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/pilot:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "discovery",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1337
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio-dns",
                                        "name": "local-certs"
                                    },
                                    {
                                        "mountPath": "/etc/cacerts",
                                        "name": "cacerts",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/remote",
                                        "name": "istio-kubeconfig",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "istiod",
                        "serviceAccountName": "istiod",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "local-certs"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "cacerts"
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-kubeconfig"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:06Z",
                        "lastUpdateTime": "2023-03-08T22:10:06Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:48Z",
                        "lastUpdateTime": "2023-03-08T22:10:06Z",
                        "message": "ReplicaSet \"istiod-558cdbcbff\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "dex-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-dex-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.30.2",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-dex-server",
                "namespace": "argocd",
                "resourceVersion": "2788",
                "uid": "be8b7ecf-78bc-4be7-884c-24f39776b959"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-dex-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "dex-server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-dex-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.30.2",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/shared/argocd-dex",
                                    "rundex"
                                ],
                                "image": "ghcr.io/dexidp/dex:v2.30.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "dex-server",
                                "ports": [
                                    {
                                        "containerPort": 5556,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5557,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5558,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/shared/argocd-dex"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "copyutil",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-dex-server",
                        "serviceAccountName": "argocd-dex-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "emptyDir": {},
                                "name": "static-files"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:09Z",
                        "lastUpdateTime": "2023-03-08T22:10:09Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "lastUpdateTime": "2023-03-08T22:10:09Z",
                        "message": "ReplicaSet \"argo-cd-argocd-dex-server-9dfff8587\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-server",
                "namespace": "argocd",
                "resourceVersion": "2794",
                "uid": "194ecc4d-cc9e-495d-80e2-d1971db4afb2"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 5,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "argocd-server",
                                    "--staticassets",
                                    "/shared/app",
                                    "--repo-server",
                                    "argo-cd-argocd-repo-server:8081",
                                    "--dex-server",
                                    "http://argo-cd-argocd-dex-server:5556",
                                    "--logformat",
                                    "text",
                                    "--loglevel",
                                    "info",
                                    "--redis",
                                    "argo-cd-argocd-redis:6379"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "server",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/server/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/home/argocd",
                                        "name": "plugins-home"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-server",
                        "serviceAccountName": "argocd-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "plugins-home"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:10Z",
                        "lastUpdateTime": "2023-03-08T22:10:10Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "lastUpdateTime": "2023-03-08T22:10:10Z",
                        "message": "ReplicaSet \"argo-cd-argocd-server-6d78494c47\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "repo-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-repo-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-repo-server",
                "namespace": "argocd",
                "resourceVersion": "2805",
                "uid": "eb8c7cf2-baf3-473c-a119-b554a2df0337"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 5,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-repo-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "repo-server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-repo-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "argocd-repo-server",
                                    "--redis",
                                    "argo-cd-argocd-redis:6379",
                                    "--logformat",
                                    "text",
                                    "--loglevel",
                                    "info"
                                ],
                                "command": [
                                    "entrypoint.sh"
                                ],
                                "env": [
                                    {
                                        "name": "HELM_CACHE_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_CONFIG_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_DATA_HOME",
                                        "value": "/helm-working-dir"
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 8081
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "repo-server",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "repo-server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 8081
                                    },
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    },
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/helm-working-dir",
                                        "name": "helm-working-dir"
                                    },
                                    {
                                        "mountPath": "/home/argocd/cmp-server/plugins",
                                        "name": "plugins"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/var/run/argocd/argocd-cmp-server"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "copyutil",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/argocd",
                                        "name": "var-files"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-cd-argocd-repo-server",
                        "serviceAccountName": "argo-cd-argocd-repo-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "emptyDir": {},
                                "name": "helm-working-dir"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "emptyDir": {},
                                "name": "var-files"
                            },
                            {
                                "emptyDir": {},
                                "name": "plugins"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:11Z",
                        "lastUpdateTime": "2023-03-08T22:10:11Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:09:39Z",
                        "lastUpdateTime": "2023-03-08T22:10:11Z",
                        "message": "ReplicaSet \"argo-cd-argocd-repo-server-5f67c7b647\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-egressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istio-egressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"istio-egressgateway\",\"istio\":\"egressgateway\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/stats/prometheus\",\"prometheus.io/port\":\"15020\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istio-egressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"egressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"EgressGateways\",\"release\":\"istio\",\"service.istio.io/canonical-name\":\"istio-egressgateway\",\"service.istio.io/canonical-revision\":\"latest\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":null,\"requiredDuringSchedulingIgnoredDuringExecution\":null}},\"containers\":[{\"args\":[\"proxy\",\"router\",\"--domain\",\"$(POD_NAMESPACE).svc.cluster.local\",\"--proxyLogLevel=warning\",\"--proxyComponentLogLevel=misc:error\",\"--log_output_level=default:info\"],\"env\":[{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"CA_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"INSTANCE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"ISTIO_META_WORKLOAD_NAME\",\"value\":\"istio-egressgateway\"},{\"name\":\"ISTIO_META_OWNER\",\"value\":\"kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway\"},{\"name\":\"ISTIO_META_MESH_ID\",\"value\":\"cluster.local\"},{\"name\":\"TRUST_DOMAIN\",\"value\":\"cluster.local\"},{\"name\":\"ISTIO_META_UNPRIVILEGED_POD\",\"value\":\"true\"},{\"name\":\"ISTIO_META_CLUSTER_ID\",\"value\":\"Kubernetes\"}],\"image\":\"docker.io/istio/proxyv2:1.15.3\",\"name\":\"istio-proxy\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":8443,\"protocol\":\"TCP\"},{\"containerPort\":15090,\"name\":\"http-envoy-prom\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":30,\"httpGet\":{\"path\":\"/healthz/ready\",\"port\":15021,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":1,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/workload-spiffe-uds\",\"name\":\"workload-socket\"},{\"mountPath\":\"/var/run/secrets/credential-uds\",\"name\":\"credential-socket\"},{\"mountPath\":\"/var/run/secrets/workload-spiffe-credentials\",\"name\":\"workload-certs\"},{\"mountPath\":\"/etc/istio/proxy\",\"name\":\"istio-envoy\"},{\"mountPath\":\"/etc/istio/config\",\"name\":\"config-volume\"},{\"mountPath\":\"/var/run/secrets/istio\",\"name\":\"istiod-ca-cert\"},{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/lib/istio/data\",\"name\":\"istio-data\"},{\"mountPath\":\"/etc/istio/pod\",\"name\":\"podinfo\"},{\"mountPath\":\"/etc/istio/egressgateway-certs\",\"name\":\"egressgateway-certs\",\"readOnly\":true},{\"mountPath\":\"/etc/istio/egressgateway-ca-certs\",\"name\":\"egressgateway-ca-certs\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"serviceAccountName\":\"istio-egressgateway-service-account\",\"volumes\":[{\"emptyDir\":{},\"name\":\"workload-socket\"},{\"emptyDir\":{},\"name\":\"credential-socket\"},{\"emptyDir\":{},\"name\":\"workload-certs\"},{\"configMap\":{\"name\":\"istio-ca-root-cert\"},\"name\":\"istiod-ca-cert\"},{\"downwardAPI\":{\"items\":[{\"fieldRef\":{\"fieldPath\":\"metadata.labels\"},\"path\":\"labels\"},{\"fieldRef\":{\"fieldPath\":\"metadata.annotations\"},\"path\":\"annotations\"}]},\"name\":\"podinfo\"},{\"emptyDir\":{},\"name\":\"istio-envoy\"},{\"emptyDir\":{},\"name\":\"istio-data\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"configMap\":{\"name\":\"istio\",\"optional\":true},\"name\":\"config-volume\"},{\"name\":\"egressgateway-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-egressgateway-certs\"}},{\"name\":\"egressgateway-ca-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-egressgateway-ca-certs\"}}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generation": 1,
                "labels": {
                    "app": "istio-egressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istio-egressgateway",
                "namespace": "istio-system",
                "resourceVersion": "2837",
                "uid": "779e3201-9b51-4ead-9247-ac7091f8f8c5"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "istio-egressgateway",
                        "istio": "egressgateway"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "100%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-egressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "egressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "EgressGateways",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-egressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "containers": [
                            {
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/proxyv2:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "istio-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15090,
                                        "name": "http-envoy-prom",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 30,
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                        "name": "workload-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/credential-uds",
                                        "name": "credential-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                        "name": "workload-certs"
                                    },
                                    {
                                        "mountPath": "/etc/istio/proxy",
                                        "name": "istio-envoy"
                                    },
                                    {
                                        "mountPath": "/etc/istio/config",
                                        "name": "config-volume"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio",
                                        "name": "istiod-ca-cert"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/istio/data",
                                        "name": "istio-data"
                                    },
                                    {
                                        "mountPath": "/etc/istio/pod",
                                        "name": "podinfo"
                                    },
                                    {
                                        "mountPath": "/etc/istio/egressgateway-certs",
                                        "name": "egressgateway-certs",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/istio/egressgateway-ca-certs",
                                        "name": "egressgateway-ca-certs",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "serviceAccount": "istio-egressgateway-service-account",
                        "serviceAccountName": "istio-egressgateway-service-account",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "workload-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "credential-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "workload-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio-ca-root-cert"
                                },
                                "name": "istiod-ca-cert"
                            },
                            {
                                "downwardAPI": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            },
                                            "path": "labels"
                                        },
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            },
                                            "path": "annotations"
                                        }
                                    ]
                                },
                                "name": "podinfo"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-envoy"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-data"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio",
                                    "optional": true
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "egressgateway-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-egressgateway-certs"
                                }
                            },
                            {
                                "name": "egressgateway-ca-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-egressgateway-ca-certs"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:15Z",
                        "lastUpdateTime": "2023-03-08T22:10:15Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "lastUpdateTime": "2023-03-08T22:10:15Z",
                        "message": "ReplicaSet \"istio-egressgateway-6b957f5b7d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-ingressgateway\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"istio-system\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.15.3\",\"release\":\"istio\"},\"name\":\"istio-ingressgateway\",\"namespace\":\"istio-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"istio-ingressgateway\",\"istio\":\"ingressgateway\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/stats/prometheus\",\"prometheus.io/port\":\"15020\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istio-ingressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"ingressgateway\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"IngressGateways\",\"release\":\"istio\",\"service.istio.io/canonical-name\":\"istio-ingressgateway\",\"service.istio.io/canonical-revision\":\"latest\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":null,\"requiredDuringSchedulingIgnoredDuringExecution\":null}},\"containers\":[{\"args\":[\"proxy\",\"router\",\"--domain\",\"$(POD_NAMESPACE).svc.cluster.local\",\"--proxyLogLevel=warning\",\"--proxyComponentLogLevel=misc:error\",\"--log_output_level=default:info\"],\"env\":[{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"CA_ADDR\",\"value\":\"istiod.istio-system.svc:15012\"},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"INSTANCE_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.podIP\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"ISTIO_META_WORKLOAD_NAME\",\"value\":\"istio-ingressgateway\"},{\"name\":\"ISTIO_META_OWNER\",\"value\":\"kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway\"},{\"name\":\"ISTIO_META_MESH_ID\",\"value\":\"cluster.local\"},{\"name\":\"TRUST_DOMAIN\",\"value\":\"cluster.local\"},{\"name\":\"ISTIO_META_UNPRIVILEGED_POD\",\"value\":\"true\"},{\"name\":\"ISTIO_META_CLUSTER_ID\",\"value\":\"Kubernetes\"}],\"image\":\"docker.io/istio/proxyv2:1.15.3\",\"name\":\"istio-proxy\",\"ports\":[{\"containerPort\":15021,\"protocol\":\"TCP\"},{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":8443,\"protocol\":\"TCP\"},{\"containerPort\":31400,\"protocol\":\"TCP\"},{\"containerPort\":15443,\"protocol\":\"TCP\"},{\"containerPort\":15090,\"name\":\"http-envoy-prom\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":30,\"httpGet\":{\"path\":\"/healthz/ready\",\"port\":15021,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":1,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"2000m\",\"memory\":\"1024Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":false,\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/workload-spiffe-uds\",\"name\":\"workload-socket\"},{\"mountPath\":\"/var/run/secrets/credential-uds\",\"name\":\"credential-socket\"},{\"mountPath\":\"/var/run/secrets/workload-spiffe-credentials\",\"name\":\"workload-certs\"},{\"mountPath\":\"/etc/istio/proxy\",\"name\":\"istio-envoy\"},{\"mountPath\":\"/etc/istio/config\",\"name\":\"config-volume\"},{\"mountPath\":\"/var/run/secrets/istio\",\"name\":\"istiod-ca-cert\"},{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/lib/istio/data\",\"name\":\"istio-data\"},{\"mountPath\":\"/etc/istio/pod\",\"name\":\"podinfo\"},{\"mountPath\":\"/etc/istio/ingressgateway-certs\",\"name\":\"ingressgateway-certs\",\"readOnly\":true},{\"mountPath\":\"/etc/istio/ingressgateway-ca-certs\",\"name\":\"ingressgateway-ca-certs\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337,\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"serviceAccountName\":\"istio-ingressgateway-service-account\",\"volumes\":[{\"emptyDir\":{},\"name\":\"workload-socket\"},{\"emptyDir\":{},\"name\":\"credential-socket\"},{\"emptyDir\":{},\"name\":\"workload-certs\"},{\"configMap\":{\"name\":\"istio-ca-root-cert\"},\"name\":\"istiod-ca-cert\"},{\"downwardAPI\":{\"items\":[{\"fieldRef\":{\"fieldPath\":\"metadata.labels\"},\"path\":\"labels\"},{\"fieldRef\":{\"fieldPath\":\"metadata.annotations\"},\"path\":\"annotations\"}]},\"name\":\"podinfo\"},{\"emptyDir\":{},\"name\":\"istio-envoy\"},{\"emptyDir\":{},\"name\":\"istio-data\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"configMap\":{\"name\":\"istio\",\"optional\":true},\"name\":\"config-volume\"},{\"name\":\"ingressgateway-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-ingressgateway-certs\"}},{\"name\":\"ingressgateway-ca-certs\",\"secret\":{\"optional\":true,\"secretName\":\"istio-ingressgateway-ca-certs\"}}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generation": 1,
                "labels": {
                    "app": "istio-ingressgateway",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "istio-system",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.15.3",
                    "release": "istio"
                },
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "resourceVersion": "2846",
                "uid": "790b04c1-6d72-4751-9010-557a1e43b5ab"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "istio-ingressgateway",
                        "istio": "ingressgateway"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "100%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-ingressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "ingressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "IngressGateways",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-ingressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "containers": [
                            {
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/proxyv2:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "istio-proxy",
                                "ports": [
                                    {
                                        "containerPort": 15021,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 31400,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15090,
                                        "name": "http-envoy-prom",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 30,
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                        "name": "workload-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/credential-uds",
                                        "name": "credential-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                        "name": "workload-certs"
                                    },
                                    {
                                        "mountPath": "/etc/istio/proxy",
                                        "name": "istio-envoy"
                                    },
                                    {
                                        "mountPath": "/etc/istio/config",
                                        "name": "config-volume"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio",
                                        "name": "istiod-ca-cert"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/istio/data",
                                        "name": "istio-data"
                                    },
                                    {
                                        "mountPath": "/etc/istio/pod",
                                        "name": "podinfo"
                                    },
                                    {
                                        "mountPath": "/etc/istio/ingressgateway-certs",
                                        "name": "ingressgateway-certs",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/istio/ingressgateway-ca-certs",
                                        "name": "ingressgateway-ca-certs",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "serviceAccount": "istio-ingressgateway-service-account",
                        "serviceAccountName": "istio-ingressgateway-service-account",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "workload-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "credential-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "workload-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio-ca-root-cert"
                                },
                                "name": "istiod-ca-cert"
                            },
                            {
                                "downwardAPI": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            },
                                            "path": "labels"
                                        },
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            },
                                            "path": "annotations"
                                        }
                                    ]
                                },
                                "name": "podinfo"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-envoy"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-data"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio",
                                    "optional": true
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "ingressgateway-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-ingressgateway-certs"
                                }
                            },
                            {
                                "name": "ingressgateway-ca-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-ingressgateway-ca-certs"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:15Z",
                        "lastUpdateTime": "2023-03-08T22:10:15Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:10:08Z",
                        "lastUpdateTime": "2023-03-08T22:10:15Z",
                        "message": "ReplicaSet \"istio-ingressgateway-5f57c68988\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "app.kubernetes.io/version": "v0.10.1",
                    "helm.sh/chart": "node-feature-discovery-0.10.1",
                    "role": "master"
                },
                "name": "gpu-operator-node-feature-discovery-master",
                "namespace": "gpu-operator-resources",
                "resourceVersion": "3278",
                "uid": "120bf976-38aa-48ef-a932-76245f9d165a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "gpu-operator",
                        "app.kubernetes.io/name": "node-feature-discovery",
                        "role": "master"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "gpu-operator",
                            "app.kubernetes.io/name": "node-feature-discovery",
                            "role": "master"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/master",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    },
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/control-plane",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--extra-label-ns=nvidia.com",
                                    "-featurerules-controller=true"
                                ],
                                "command": [
                                    "nfd-master"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/grpc_health_probe",
                                            "-addr=:8080"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "master",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/grpc_health_probe",
                                            "-addr=:8080"
                                        ]
                                    },
                                    "failureThreshold": 10,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "node-feature-discovery",
                        "serviceAccountName": "node-feature-discovery",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane",
                                "operator": "Equal"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:40Z",
                        "lastUpdateTime": "2023-03-08T22:10:40Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "lastUpdateTime": "2023-03-08T22:10:40Z",
                        "message": "ReplicaSet \"gpu-operator-node-feature-discovery-master-79bc547944\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "gpu-operator",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "gpu-operator",
                "namespace": "gpu-operator-resources",
                "resourceVersion": "3422",
                "uid": "cdc8cb0d-4168-494d-b3d5-18bcc209962f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "gpu-operator",
                        "app.kubernetes.io/component": "gpu-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "openshift.io/scc": "restricted-readonly"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "gpu-operator",
                            "app.kubernetes.io/component": "gpu-operator"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/master",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect"
                                ],
                                "command": [
                                    "gpu-operator"
                                ],
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "nvcr.io/nvidia/gpu-operator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "gpu-operator",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "350Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "100Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host-etc/os-release",
                                        "name": "host-os-release",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "gpu-operator",
                        "serviceAccountName": "gpu-operator",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/etc/os-release",
                                    "type": ""
                                },
                                "name": "host-os-release"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:10:50Z",
                        "lastUpdateTime": "2023-03-08T22:10:50Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:10:29Z",
                        "lastUpdateTime": "2023-03-08T22:10:50Z",
                        "message": "ReplicaSet \"gpu-operator-567cf74d9d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\"},\"name\":\"minio-operator\",\"namespace\":\"minio-operator\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"name\":\"minio-operator\"}},\"template\":{\"metadata\":{\"annotations\":{\"operator.min.io/authors\":\"MinIO, Inc.\",\"operator.min.io/license\":\"AGPLv3\",\"operator.min.io/support\":\"https://subnet.min.io\"},\"labels\":{\"name\":\"minio-operator\"}},\"spec\":{\"affinity\":{\"podAntiAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"name\",\"operator\":\"In\",\"values\":[\"minio-operator\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"}]}},\"containers\":[{\"env\":[{\"name\":\"CLUSTER_DOMAIN\",\"value\":\"cluster.local\"}],\"image\":\"minio/operator:v4.5.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"minio-operator\",\"resources\":{\"requests\":{\"cpu\":\"200m\",\"ephemeral-storage\":\"500Mi\",\"memory\":\"256Mi\"}},\"securityContext\":{\"runAsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000}}],\"serviceAccountName\":\"minio-operator\"}}}}\n",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:00:32Z",
                "generation": 1,
                "name": "minio-operator",
                "namespace": "minio-operator",
                "resourceVersion": "5157",
                "uid": "85dfd7de-074b-495a-b793-138892bc2d2a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "name": "minio-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "operator.min.io/authors": "MinIO, Inc.",
                            "operator.min.io/license": "AGPLv3",
                            "operator.min.io/support": "https://subnet.min.io"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "name": "minio-operator"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "name",
                                                    "operator": "In",
                                                    "values": [
                                                        "minio-operator"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "CLUSTER_DOMAIN",
                                        "value": "cluster.local"
                                    }
                                ],
                                "image": "minio/operator:v4.5.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "minio-operator",
                                "resources": {
                                    "requests": {
                                        "cpu": "200m",
                                        "ephemeral-storage": "500Mi",
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsGroup": 1000,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "minio-operator",
                        "serviceAccountName": "minio-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:01:11Z",
                        "lastUpdateTime": "2023-03-08T22:01:11Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:16:42Z",
                        "lastUpdateTime": "2023-03-08T22:16:42Z",
                        "message": "ReplicaSet \"minio-operator-67dcf6dd7c\" has timed out progressing.",
                        "reason": "ProgressDeadlineExceeded",
                        "status": "False",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 2,
                "unavailableReplicas": 1,
                "updatedReplicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "jiva-3.3.0",
                    "component": "jiva-operator",
                    "heritage": "Helm",
                    "name": "jiva-operator",
                    "openebs.io/component-name": "jiva-operator",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-jiva-operator",
                "namespace": "openebs",
                "resourceVersion": "5912",
                "uid": "8e49e493-ccc4-4ff4-bf04-dfa8d0cbb677"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "jiva-operator",
                        "name": "jiva-operator",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "jiva-3.3.0",
                            "component": "jiva-operator",
                            "heritage": "Helm",
                            "name": "jiva-operator",
                            "openebs.io/component-name": "jiva-operator",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "jiva-operator"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "jiva-operator"
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_JIVA_CONTROLLER_IMAGE",
                                        "value": "openebs/jiva:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_JIVA_REPLICA_IMAGE",
                                        "value": "openebs/jiva:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_MAYA_EXPORTER_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    }
                                ],
                                "image": "openebs/jiva-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-jiva-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-jiva-operator",
                        "serviceAccountName": "openebs-jiva-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:30Z",
                        "lastUpdateTime": "2023-03-08T22:18:30Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:30Z",
                        "message": "ReplicaSet \"openebs-jiva-operator-594fdd69b9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "openebs",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "openebs-3.3.1",
                    "component": "localpv-provisioner",
                    "heritage": "Helm",
                    "openebs.io/component-name": "openebs-localpv-provisioner",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-localpv-provisioner",
                "namespace": "openebs",
                "resourceVersion": "5933",
                "uid": "3e19741c-805c-43c4-bf87-4eea1b322965"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "openebs",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "openebs",
                            "component": "localpv-provisioner",
                            "name": "openebs-localpv-provisioner",
                            "openebs.io/component-name": "openebs-localpv-provisioner",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--bd-time-out=$(BDC_BD_BIND_RETRIES)"
                                ],
                                "env": [
                                    {
                                        "name": "BDC_BD_BIND_RETRIES",
                                        "value": "12"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "value": "openebs"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPENEBS_IO_BASE_PATH",
                                        "value": "/var/snap/microk8s/common/var/openebs/local"
                                    },
                                    {
                                        "name": "OPENEBS_IO_HELPER_IMAGE",
                                        "value": "openebs/linux-utils:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_INSTALLER_TYPE",
                                        "value": "charts-helm"
                                    },
                                    {
                                        "name": "LEADER_ELECTION_ENABLED",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/provisioner-localpv:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "sh",
                                            "-c",
                                            "test `pgrep -c \"^provisioner-loc.*\"` = 1"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "openebs-localpv-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs",
                        "serviceAccountName": "openebs",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:34Z",
                        "lastUpdateTime": "2023-03-08T22:18:34Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:34Z",
                        "message": "ReplicaSet \"openebs-localpv-provisioner-99449bb55\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "cvc-operator",
                    "heritage": "Helm",
                    "name": "cvc-operator",
                    "openebs.io/component-name": "cvc-operator",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cvc-operator",
                "namespace": "openebs",
                "resourceVersion": "5972",
                "uid": "490c1faf-f034-43b1-9c77-b03c663c4e10"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "cvc-operator",
                        "name": "cvc-operator",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "cvc-operator",
                            "heritage": "Helm",
                            "name": "cvc-operator",
                            "openebs.io/component-name": "cvc-operator",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election=false",
                                    "--bind=$(OPENEBS_CVC_POD_IP)"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_IO_BASE_DIR",
                                        "value": "/var/openebs"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_CVC_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_TARGET_IMAGE",
                                        "value": "openebs/cstor-istgt:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE",
                                        "value": "openebs/cstor-volume-manager:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_VOLUME_MONITOR_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    }
                                ],
                                "image": "openebs/cvc-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-cvc-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:40Z",
                        "lastUpdateTime": "2023-03-08T22:18:40Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:40Z",
                        "message": "ReplicaSet \"openebs-cstor-cvc-operator-7946b467f5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "openebs",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "openebs-3.3.1",
                    "component": "ndm-operator",
                    "heritage": "Helm",
                    "name": "ndm-operator",
                    "openebs.io/component-name": "ndm-operator",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-ndm-operator",
                "namespace": "openebs",
                "resourceVersion": "5982",
                "uid": "2051805d-bf5a-443b-97fa-d27d3d586cfe"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "openebs",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "openebs",
                            "component": "ndm-operator",
                            "name": "ndm-operator",
                            "openebs.io/component-name": "ndm-operator",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "node-disk-operator"
                                    },
                                    {
                                        "name": "CLEANUP_JOB_IMAGE",
                                        "value": "openebs/linux-utils:3.3.0"
                                    }
                                ],
                                "image": "openebs/node-disk-operator:2.0.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8585,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "openebs-ndm-operator",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8585,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs",
                        "serviceAccountName": "openebs",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:42Z",
                        "lastUpdateTime": "2023-03-08T22:18:42Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:42Z",
                        "message": "ReplicaSet \"openebs-ndm-operator-74fc47c6cc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "cspc-operator",
                    "heritage": "Helm",
                    "name": "cspc-operator",
                    "openebs.io/component-name": "cspc-operator",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cspc-operator",
                "namespace": "openebs",
                "resourceVersion": "5992",
                "uid": "de117d5d-9e06-4439-b78a-799e5c26b15b"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "cspc-operator",
                        "name": "cspc-operator",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "cspc-operator",
                            "heritage": "Helm",
                            "name": "cspc-operator",
                            "openebs.io/component-name": "cspc-operator",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CSPC_OPERATOR_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_BASE_DIR",
                                        "value": "/var/openebs"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_SPARSE_DIR",
                                        "value": "/var/openebs/sparse"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSPI_MGMT_IMAGE",
                                        "value": "openebs/cstor-pool-manager:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_IMAGE",
                                        "value": "openebs/cstor-pool:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    },
                                    {
                                        "name": "RESYNC_INTERVAL",
                                        "value": "30"
                                    }
                                ],
                                "image": "openebs/cspc-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-cspc-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:43Z",
                        "lastUpdateTime": "2023-03-08T22:18:43Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:43Z",
                        "message": "ReplicaSet \"openebs-cstor-cspc-operator-7dd775b4b8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "cstor-admission-webhook",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "cstor-admission-webhook",
                    "heritage": "Helm",
                    "openebs.io/component-name": "cstor-admission-webhook",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-admission-server",
                "namespace": "openebs",
                "resourceVersion": "6016",
                "uid": "4ea45e3a-6b9b-4724-8127-59e3cccc97a3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "cstor-admission-webhook",
                        "component": "cstor-admission-webhook",
                        "release": "openebs"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cstor-admission-webhook",
                            "chart": "cstor-3.3.0",
                            "component": "cstor-admission-webhook",
                            "heritage": "Helm",
                            "openebs.io/component-name": "cstor-admission-webhook",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-alsologtostderr",
                                    "-v=2",
                                    "2\u003e\u00261"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ADMISSION_WEBHOOK_FAILURE_POLICY",
                                        "value": "Fail"
                                    }
                                ],
                                "image": "openebs/cstor-webhook:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-admission-webhook",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:18:46Z",
                        "lastUpdateTime": "2023-03-08T22:18:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:18:21Z",
                        "lastUpdateTime": "2023-03-08T22:18:46Z",
                        "message": "ReplicaSet \"openebs-cstor-admission-server-f5d57f788\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "portainer",
                    "meta.helm.sh/release-namespace": "portainer"
                },
                "creationTimestamp": "2023-03-08T22:22:42Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "portainer",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "portainer",
                    "app.kubernetes.io/version": "ce-latest-ee-2.17.1",
                    "helm.sh/chart": "portainer-1.0.40",
                    "io.portainer.kubernetes.application.stack": "portainer"
                },
                "name": "portainer",
                "namespace": "portainer",
                "resourceVersion": "7823",
                "uid": "8e05101b-298e-4627-90ab-4d29eb418dad"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "portainer",
                        "app.kubernetes.io/name": "portainer"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "portainer",
                            "app.kubernetes.io/name": "portainer"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--tunnel-port=30776"
                                ],
                                "image": "portainer/portainer-ce:2.17.1",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9443,
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "portainer",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8000,
                                        "name": "tcp-edge",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9443,
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "portainer-sa-clusteradmin",
                        "serviceAccountName": "portainer-sa-clusteradmin",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "data",
                                "persistentVolumeClaim": {
                                    "claimName": "portainer"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:23:46Z",
                        "lastUpdateTime": "2023-03-08T22:23:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:23:33Z",
                        "lastUpdateTime": "2023-03-08T22:23:46Z",
                        "message": "ReplicaSet \"portainer-c875b56d4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:25:03Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "name": "modeloperator",
                "namespace": "controller-microk8s-localhost",
                "resourceVersion": "8417",
                "uid": "0068c03a-eb18-4bbc-8b1b-525490598656"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "modeloperator",
                        "operator.juju.is/target": "model"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "model.juju.is/disable-webhook": "true",
                            "operator.juju.is/name": "modeloperator",
                            "operator.juju.is/target": "model"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=fafa301c-5122-40d8-8856-115417cb6aba\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "HTTP_PORT",
                                        "value": "17071"
                                    },
                                    {
                                        "name": "SERVICE_NAME",
                                        "value": "modeloperator"
                                    },
                                    {
                                        "name": "SERVICE_NAMESPACE",
                                        "value": "controller-microk8s-localhost"
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "ports": [
                                    {
                                        "containerPort": 17071,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/model-fafa301c-5122-40d8-8856-115417cb6aba/template-agent.conf",
                                        "name": "modeloperator",
                                        "subPath": "template-agent.conf"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "modeloperator",
                        "serviceAccountName": "modeloperator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "modeloperator-agent.conf",
                                            "path": "template-agent.conf"
                                        }
                                    ],
                                    "name": "modeloperator"
                                },
                                "name": "modeloperator"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:25:05Z",
                        "lastUpdateTime": "2023-03-08T22:25:05Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:25:04Z",
                        "lastUpdateTime": "2023-03-08T22:25:05Z",
                        "message": "ReplicaSet \"modeloperator-785666f8dc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:33:37Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model"
                },
                "name": "modeloperator",
                "namespace": "kubeflow",
                "resourceVersion": "10976",
                "uid": "82e51be9-0e0e-422d-bfb5-e7e182e9ec85"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "modeloperator",
                        "operator.juju.is/target": "model"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "model.juju.is/disable-webhook": "true",
                            "operator.juju.is/name": "modeloperator",
                            "operator.juju.is/target": "model"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=ac60be0f-c489-48e7-85ca-def37f3f6c70\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "HTTP_PORT",
                                        "value": "17071"
                                    },
                                    {
                                        "name": "SERVICE_NAME",
                                        "value": "modeloperator"
                                    },
                                    {
                                        "name": "SERVICE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "ports": [
                                    {
                                        "containerPort": 17071,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/model-ac60be0f-c489-48e7-85ca-def37f3f6c70/template-agent.conf",
                                        "name": "modeloperator",
                                        "subPath": "template-agent.conf"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "modeloperator",
                        "serviceAccountName": "modeloperator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "modeloperator-agent.conf",
                                            "path": "template-agent.conf"
                                        }
                                    ],
                                    "name": "modeloperator"
                                },
                                "name": "modeloperator"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:33:39Z",
                        "lastUpdateTime": "2023-03-08T22:33:39Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:33:37Z",
                        "lastUpdateTime": "2023-03-08T22:33:39Z",
                        "message": "ReplicaSet \"modeloperator-5bfd6f98cc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"install.operator.istio.io/owning-resource-namespace\":\"kubeflow\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"operator.istio.io/managed\":\"Reconcile\",\"operator.istio.io/version\":\"1.11.0\",\"release\":\"istio\"},\"name\":\"istiod\",\"namespace\":\"kubeflow\"},\"spec\":{\"selector\":{\"matchLabels\":{\"istio\":\"pilot\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"100%\",\"maxUnavailable\":\"25%\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"15014\",\"prometheus.io/scrape\":\"true\",\"sidecar.istio.io/inject\":\"false\"},\"labels\":{\"app\":\"istiod\",\"install.operator.istio.io/owning-resource\":\"unknown\",\"istio\":\"pilot\",\"istio.io/rev\":\"default\",\"operator.istio.io/component\":\"Pilot\",\"sidecar.istio.io/inject\":\"false\"}},\"spec\":{\"containers\":[{\"args\":[\"discovery\",\"--monitoringAddr=:15014\",\"--log_output_level=default:info\",\"--domain\",\"cluster.local\",\"--keepaliveMaxServerConnectionAge\",\"30m\"],\"env\":[{\"name\":\"REVISION\",\"value\":\"default\"},{\"name\":\"JWT_POLICY\",\"value\":\"third-party-jwt\"},{\"name\":\"PILOT_CERT_PROVIDER\",\"value\":\"istiod\"},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"SERVICE_ACCOUNT\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.serviceAccountName\"}}},{\"name\":\"KUBECONFIG\",\"value\":\"/var/run/secrets/remote/config\"},{\"name\":\"ENABLE_LEGACY_FSGROUP_INJECTION\",\"value\":\"false\"},{\"name\":\"PILOT_TRACE_SAMPLING\",\"value\":\"1\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND\",\"value\":\"true\"},{\"name\":\"PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND\",\"value\":\"true\"},{\"name\":\"ISTIOD_ADDR\",\"value\":\"istiod.kubeflow.svc:15012\"},{\"name\":\"PILOT_ENABLE_ANALYSIS\",\"value\":\"false\"},{\"name\":\"CLUSTER_ID\",\"value\":\"Kubernetes\"}],\"image\":\"docker.io/istio/pilot:1.11.0\",\"name\":\"discovery\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"},{\"containerPort\":15010,\"protocol\":\"TCP\"},{\"containerPort\":15017,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8080},\"initialDelaySeconds\":1,\"periodSeconds\":3,\"timeoutSeconds\":5},\"resources\":{\"requests\":{\"cpu\":\"500m\",\"memory\":\"2048Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsGroup\":1337,\"runAsNonRoot\":true,\"runAsUser\":1337},\"volumeMounts\":[{\"mountPath\":\"/var/run/secrets/tokens\",\"name\":\"istio-token\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/istio-dns\",\"name\":\"local-certs\"},{\"mountPath\":\"/etc/cacerts\",\"name\":\"cacerts\",\"readOnly\":true},{\"mountPath\":\"/var/run/secrets/remote\",\"name\":\"istio-kubeconfig\",\"readOnly\":true}]}],\"securityContext\":{\"fsGroup\":1337},\"serviceAccountName\":\"istiod\",\"volumes\":[{\"emptyDir\":{\"medium\":\"Memory\"},\"name\":\"local-certs\"},{\"name\":\"istio-token\",\"projected\":{\"sources\":[{\"serviceAccountToken\":{\"audience\":\"istio-ca\",\"expirationSeconds\":43200,\"path\":\"istio-token\"}}]}},{\"name\":\"cacerts\",\"secret\":{\"optional\":true,\"secretName\":\"cacerts\"}},{\"name\":\"istio-kubeconfig\",\"secret\":{\"optional\":true,\"secretName\":\"istio-kubeconfig\"}}]}}}}\n"
                },
                "creationTimestamp": "2023-03-08T22:36:43Z",
                "generation": 1,
                "labels": {
                    "app": "istiod",
                    "app.juju.is/created-by": "istio-pilot",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "install.operator.istio.io/owning-resource-namespace": "kubeflow",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "operator.istio.io/managed": "Reconcile",
                    "operator.istio.io/version": "1.11.0",
                    "release": "istio"
                },
                "name": "istiod",
                "namespace": "kubeflow",
                "resourceVersion": "12915",
                "uid": "d691a0a6-0652-42f4-b4dd-d2e98fa4c902"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "100%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "ENABLE_LEGACY_FSGROUP_INJECTION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "1"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.kubeflow.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/pilot:1.11.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "discovery",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1337
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio-dns",
                                        "name": "local-certs"
                                    },
                                    {
                                        "mountPath": "/etc/cacerts",
                                        "name": "cacerts",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/remote",
                                        "name": "istio-kubeconfig",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "istiod",
                        "serviceAccountName": "istiod",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "local-certs"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "cacerts"
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-kubeconfig"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:37:36Z",
                        "lastUpdateTime": "2023-03-08T22:37:36Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:36:43Z",
                        "lastUpdateTime": "2023-03-08T22:37:36Z",
                        "message": "ReplicaSet \"istiod-59877f896f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "275cc0e8",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:52Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-viz"
                },
                "name": "kfp-viz",
                "namespace": "kubeflow",
                "resourceVersion": "40063",
                "uid": "acd24d0e-7c97-4c1b-b706-b18552bafb43"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-viz"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-viz-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-viz"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "registry.jujucharms.com/charm/c2o31yht1y825t6n49mwko4wyel0rracnrjn5/oci-image@sha256:23ab9b96810e9871738fe4920905bf541cb7edb476f0d2d86d9bafe754413f3a",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "name": "ml-pipeline-visualizationserver",
                                "ports": [
                                    {
                                        "containerPort": 8888,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-viz-ml-pipeline-visualizationserver-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:41:52Z",
                        "lastUpdateTime": "2023-03-08T22:41:52Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:41:52Z",
                        "lastUpdateTime": "2023-03-08T22:41:53Z",
                        "message": "ReplicaSet \"kfp-viz-79475b58c4\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "1758d21b",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:24Z",
                "generation": 4,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "argo-server"
                },
                "name": "argo-server",
                "namespace": "kubeflow",
                "resourceVersion": "40623",
                "uid": "5ce6f65d-dda4-4e2b-9fad-0a3f0b4727a3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argo-server"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "argo-server-",
                        "labels": {
                            "app.kubernetes.io/name": "argo-server"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "server"
                                ],
                                "image": "registry.jujucharms.com/charm/hs4bjttgix7e2kf3188j168vjafe2mfmr8m16/oci-image@sha256:576d03880b4d608b00607902be8f52692e2b8d40f9fdc21992b65447a93614c2",
                                "imagePullPolicy": "Always",
                                "name": "argo-server",
                                "ports": [
                                    {
                                        "containerPort": 2746,
                                        "name": "web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 2746,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "argo-server-argo-server-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-server",
                        "serviceAccountName": "argo-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "tmp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:37:45Z",
                        "lastUpdateTime": "2023-03-08T22:37:45Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:36:24Z",
                        "lastUpdateTime": "2023-03-08T22:37:45Z",
                        "message": "ReplicaSet \"argo-server-79fc644ff6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "1f78cb93",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:27Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-persistence"
                },
                "name": "kfp-persistence",
                "namespace": "kubeflow",
                "resourceVersion": "40781",
                "uid": "3f074ab9-6412-4c79-8104-8dfed555ae1f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-persistence"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-persistence-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-persistence"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "persistence_agent",
                                    "--logtostderr=true",
                                    "--namespace=",
                                    "--ttlSecondsAfterWorkflowFinish=86400",
                                    "--numWorker=2",
                                    "--mlPipelineAPIServerName=kfp-api.kubeflow"
                                ],
                                "env": [
                                    {
                                        "name": "KUBEFLOW_USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "KUBEFLOW_USERID_PREFIX"
                                    },
                                    {
                                        "name": "MULTIUSER",
                                        "value": "true"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/530iqpar7ey6vmhy5v19z5dnqywn1439aqet2/oci-image@sha256:abcf9710a699b35707ef472355519e5d044708ccbc8b5c8c4c06982d01901132",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-persistenceagent",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-persistence-ml-pipeline-persistenceagent-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-persistence",
                        "serviceAccountName": "kfp-persistence",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:44:28Z",
                        "lastUpdateTime": "2023-03-08T22:44:28Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:44:28Z",
                        "lastUpdateTime": "2023-03-08T22:44:28Z",
                        "message": "ReplicaSet \"kfp-persistence-7b6649cb68\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "de427014",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:56Z",
                "generation": 4,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "jupyter-controller"
                },
                "name": "jupyter-controller",
                "namespace": "kubeflow",
                "resourceVersion": "40962",
                "uid": "6492eb55-9478-4c83-9c43-04ece2ff586f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "jupyter-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "jupyter-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "jupyter-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./manager"
                                ],
                                "env": [
                                    {
                                        "name": "ENABLE_CULLING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_GATEWAY",
                                        "value": "kubeflow/kubeflow-gateway"
                                    },
                                    {
                                        "name": "USE_ISTIO",
                                        "value": "true"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/kaq3thscd44n4eitar0ng5vn41qku3s076d4l/oci-image@sha256:e05857e6f03e0b172521b91193ef0f4470b7c95799991b2eebf44500e630867d",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jupyter-controller",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "jupyter-controller-jupyter-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-controller",
                        "serviceAccountName": "jupyter-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:37:52Z",
                        "lastUpdateTime": "2023-03-08T22:37:52Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:36:56Z",
                        "lastUpdateTime": "2023-03-08T22:37:52Z",
                        "message": "ReplicaSet \"jupyter-controller-588bb5c767\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "8f3f3260",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:35Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-schedwf"
                },
                "name": "kfp-schedwf",
                "namespace": "kubeflow",
                "resourceVersion": "40981",
                "uid": "5c7172af-9701-49d7-8afc-5e3314803690"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-schedwf"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-schedwf-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-schedwf"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "CRON_SCHEDULE_TIMEZONE",
                                        "value": "UTC"
                                    },
                                    {
                                        "name": "NAMESPACE"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/bmliwriin8zo1y7zzfcwxh51y1lmtn4i6llry/oci-image@sha256:9c9f710d6b5c27f95441ffa0c569cfcc78c494dc2b26bd3a547d5f0d47a15d72",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-scheduledworkflow",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-schedwf-ml-pipeline-scheduledworkflow-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-schedwf",
                        "serviceAccountName": "kfp-schedwf",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:42:30Z",
                        "lastUpdateTime": "2023-03-08T22:42:30Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:40:35Z",
                        "lastUpdateTime": "2023-03-08T22:42:30Z",
                        "message": "ReplicaSet \"kfp-schedwf-564b46946f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "af6239f4",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:12Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-viewer"
                },
                "name": "kfp-viewer",
                "namespace": "kubeflow",
                "resourceVersion": "41042",
                "uid": "e795f56c-65b4-4b51-88c2-48bee9722c09"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-viewer"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-viewer-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-viewer"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "MAX_NUM_VIEWERS",
                                        "value": "50"
                                    },
                                    {
                                        "name": "MINIO_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/kk5db8k26h6fdltd2xcoudu3xsuslkihi4w18/oci-image@sha256:94754c058ada8a18e827788e1431433e65cc114b553597b7d1ddc3e51a554075",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-viewer-crd",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-viewer-ml-pipeline-viewer-crd-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-viewer",
                        "serviceAccountName": "kfp-viewer",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:42:08Z",
                        "lastUpdateTime": "2023-03-08T22:42:08Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:41:12Z",
                        "lastUpdateTime": "2023-03-08T22:42:08Z",
                        "message": "ReplicaSet \"kfp-viewer-74866d586d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "43754f0d",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:19Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-ui"
                },
                "name": "katib-ui",
                "namespace": "kubeflow",
                "resourceVersion": "41279",
                "uid": "b2d176ab-9c43-4bae-a974-20af1d00e76f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-ui"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-ui-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-ui"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--port=8080"
                                ],
                                "command": [
                                    "./katib-ui"
                                ],
                                "env": [
                                    {
                                        "name": "KATIB_CORE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/7856sw60z0qbmhucvxurviv23ddjs928qk5pv/oci-image@sha256:c7dc04a2fe88ca6e59c6e70c4f11e5d3fc90b2669f70d88e73f98bab27c12dd7",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "katib-ui",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-ui-katib-ui-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-ui",
                        "serviceAccountName": "katib-ui",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:40:08Z",
                        "lastUpdateTime": "2023-03-08T22:40:08Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:39:19Z",
                        "lastUpdateTime": "2023-03-08T22:40:08Z",
                        "message": "ReplicaSet \"katib-ui-798b5c5fbf\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "7c328134",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:46Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-volumes"
                },
                "name": "kubeflow-volumes",
                "namespace": "kubeflow",
                "resourceVersion": "41295",
                "uid": "383ec647-2b8a-4765-a8e6-95efbfcdc452"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-volumes"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kubeflow-volumes-",
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-volumes"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/volumes"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "false"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/6tvhkd5az86qo4m4zxeoqip1iejoxusiphggc/oci-image@sha256:fdb4a5d15596fe855f49dd63a835e04dc0e86578b282d8132bf7eee31fab7a3c",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "volumes-web-app",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kubeflow-volumes-volumes-web-app-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-volumes",
                        "serviceAccountName": "kubeflow-volumes",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:43:46Z",
                        "lastUpdateTime": "2023-03-08T22:43:46Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:43:46Z",
                        "lastUpdateTime": "2023-03-08T22:43:46Z",
                        "message": "ReplicaSet \"kubeflow-volumes-788467b484\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "f2f53405",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:54Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "tensorboards-web-app"
                },
                "name": "tensorboards-web-app",
                "namespace": "kubeflow",
                "resourceVersion": "41342",
                "uid": "70a80036-27a7-40c8-9c9a-0372f551e1a3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "tensorboards-web-app"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "tensorboards-web-app-",
                        "labels": {
                            "app.kubernetes.io/name": "tensorboards-web-app"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/tensorboards"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "False"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/degj4xf9nzft20x3gi4ucfjy0n3to6q2wzno8/oci-image@sha256:eef68a51bf9af0f69c91ef72e8d5716da3d5dee5f8f159e966ff3ba456568033",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "tensorboards-web-app",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "tensorboards-web-app-tensorboards-web-app-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tensorboards-web-app",
                        "serviceAccountName": "tensorboards-web-app",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "lastUpdateTime": "2023-03-08T22:43:55Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:43:55Z",
                        "lastUpdateTime": "2023-03-08T22:43:55Z",
                        "message": "ReplicaSet \"tensorboards-web-app-54f98cc8cc\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "85d58340",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:03Z",
                "generation": 3,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-db-manager"
                },
                "name": "katib-db-manager",
                "namespace": "kubeflow",
                "resourceVersion": "41540",
                "uid": "acb43d5e-f9f8-4a80-8109-7c7f760402c3"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-db-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-db-manager-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-db-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./katib-db-manager"
                                ],
                                "env": [
                                    {
                                        "name": "DB_NAME",
                                        "value": "mysql"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "root"
                                    },
                                    {
                                        "name": "DB_USER",
                                        "value": "root"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_DATABASE",
                                        "value": "katib"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_HOST",
                                        "value": "10.152.183.87"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_PORT",
                                        "value": "3306"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/5d9mqm3c0kne3mu523ca8oygc7bptv43ape2o/oci-image@sha256:16b33a553631ad7c71944a10181d03c844a6d95cfed8f104135febde3250c8c1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/grpc_health_probe",
                                            "-addr=:6789"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "katib-db-manager",
                                "ports": [
                                    {
                                        "containerPort": 6789,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-db-manager-katib-db-manager-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-db-manager",
                        "serviceAccountName": "katib-db-manager",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:39:32Z",
                        "lastUpdateTime": "2023-03-08T22:39:32Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:39:04Z",
                        "lastUpdateTime": "2023-03-08T22:39:32Z",
                        "message": "ReplicaSet \"katib-db-manager-5f9d778bc6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "f10b8681",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:17Z",
                "generation": 4,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "admission-webhook"
                },
                "name": "admission-webhook",
                "namespace": "kubeflow",
                "resourceVersion": "41837",
                "uid": "ca54d4bd-734c-487b-b72f-df1d2c91ada5"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "admission-webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "admission-webhook-",
                        "labels": {
                            "app.kubernetes.io/name": "admission-webhook"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "registry.jujucharms.com/charm/ktca4ipxj5dyg5s0cl1o0j2hy426j99t2uged/oci-image@sha256:129fe9251569490b90d83643ff548a0bbf78b5ab802b0075848168a4bb7909b1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "admission-webhook",
                                "ports": [
                                    {
                                        "containerPort": 4443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/webhook/certs",
                                        "name": "admission-webhook-certs-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "admission-webhook-admission-webhook-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "admission-webhook",
                        "serviceAccountName": "admission-webhook",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "cert.pem",
                                            "path": "cert.pem"
                                        },
                                        {
                                            "key": "key.pem",
                                            "path": "key.pem"
                                        }
                                    ],
                                    "name": "admission-webhook-certs-config"
                                },
                                "name": "admission-webhook-certs-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:36:18Z",
                        "lastUpdateTime": "2023-03-08T22:38:06Z",
                        "message": "ReplicaSet \"admission-webhook-fc78958db\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:38:07Z",
                        "lastUpdateTime": "2023-03-08T22:38:07Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 4,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "324ffe48",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:50Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "seldon-controller-manager"
                },
                "name": "seldon-controller-manager",
                "namespace": "kubeflow",
                "resourceVersion": "42193",
                "uid": "28a5b9ac-76dd-410a-8fc6-c8ad2f1abf32"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "seldon-controller-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "seldon-controller-manager-",
                        "labels": {
                            "app.kubernetes.io/name": "seldon-controller-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--enable-leader-election",
                                    "--webhook-port",
                                    "4443",
                                    "--create-resources",
                                    "true"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "AMBASSADOR_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CONTROLLER_ID"
                                    },
                                    {
                                        "name": "DEFAULT_USER_ID",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_IMAGE_AND_VERSION",
                                        "value": "docker.io/seldonio/seldon-core-executor:1.14.0"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_SERVICE_ACCOUNT_NAME",
                                        "value": "default"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_USER",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_CPU_LIMIT",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_CPU_REQUEST",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_MEMORY_LIMIT",
                                        "value": "512Mi"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_MEMORY_REQUEST",
                                        "value": "512Mi"
                                    },
                                    {
                                        "name": "EXECUTOR_PROMETHEUS_PATH",
                                        "value": "/prometheus"
                                    },
                                    {
                                        "name": "EXECUTOR_REQUEST_LOGGER_DEFAULT_ENDPOINT",
                                        "value": "http://default-broker"
                                    },
                                    {
                                        "name": "EXECUTOR_SERVER_METRICS_PORT_NAME",
                                        "value": "metrics"
                                    },
                                    {
                                        "name": "EXECUTOR_SERVER_PORT",
                                        "value": "8000"
                                    },
                                    {
                                        "name": "ISTIO_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ISTIO_GATEWAY",
                                        "value": "istio-system/seldon-gateway"
                                    },
                                    {
                                        "name": "ISTIO_TLS_MODE"
                                    },
                                    {
                                        "name": "KEDA_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MANAGER_CREATE_RESOURCES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_DEFAULT_ENV_SECRET_REF_NAME"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_METRICS_PORT_NAME",
                                        "value": "metrics"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_SERVICE_PORT",
                                        "value": "9000"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_EXECUTOR"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_EXPLAINER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_MLFLOWSERVER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_MOCK_CLASSIFIER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_SKLEARNSERVER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_STORAGE_INITIALIZER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_TENSORFLOW"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_TFPROXY"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_XGBOOSTSERVER"
                                    },
                                    {
                                        "name": "USE_EXECUTOR",
                                        "value": "true"
                                    },
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/c5e3s519ko1quc9tqnysy92oeeqmgvwvhxvgf/oci-image@sha256:eb811b6b6fc62f3c41ec353cef15af7a59814afbbeb71cf619d9c58f7d9c2082",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "seldon-core",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 4443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp/operator-resources",
                                        "name": "seldon-controller-manager-operator-resources-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "seldon-controller-manager-seldon-core-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "seldon-controller-manager",
                        "serviceAccountName": "seldon-controller-manager",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "configmap.yaml",
                                            "path": "configmap.yaml"
                                        },
                                        {
                                            "key": "crd-v1.yaml",
                                            "path": "crd-v1.yaml"
                                        },
                                        {
                                            "key": "service.yaml",
                                            "path": "service.yaml"
                                        },
                                        {
                                            "key": "validate.yaml",
                                            "path": "validate.yaml"
                                        }
                                    ],
                                    "name": "seldon-controller-manager-operator-resources-config"
                                },
                                "name": "seldon-controller-manager-operator-resources-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:43:50Z",
                        "lastUpdateTime": "2023-03-08T22:43:50Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:43:50Z",
                        "lastUpdateTime": "2023-03-08T22:43:50Z",
                        "message": "ReplicaSet \"seldon-controller-manager-556f44cf4c\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "545740a6",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:27Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-profile-controller"
                },
                "name": "kfp-profile-controller",
                "namespace": "kubeflow",
                "resourceVersion": "42259",
                "uid": "dea7d20a-f767-4424-a911-386c6065c9ab"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-profile-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-profile-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-profile-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/hooks/sync.py"
                                ],
                                "command": [
                                    "python"
                                ],
                                "env": [
                                    {
                                        "name": "CONTROLLER_PORT",
                                        "value": "80"
                                    },
                                    {
                                        "name": "DISABLE_ISTIO_SIDECAR",
                                        "value": "false"
                                    },
                                    {
                                        "name": "KFP_DEFAULT_PIPELINE_ROOT"
                                    },
                                    {
                                        "name": "KFP_VERSION",
                                        "value": "2.0.0-alpha.3"
                                    },
                                    {
                                        "name": "METADATA_GRPC_SERVICE_HOST",
                                        "value": "mlmd.kubeflow"
                                    },
                                    {
                                        "name": "METADATA_GRPC_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "MINIO_HOST",
                                        "value": "minio"
                                    },
                                    {
                                        "name": "MINIO_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "MINIO_PORT",
                                        "value": "9000"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "kfp-profile-controller-minio-credentials"
                                        }
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/gm1axzm8pxqlan75l3a7znu2mv5bf0pm1wfar/oci-image@sha256:b4de8787873726d9a4b39f2166a30f2d3fc1b8e35079cf55c9aef72c5e841e6a",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kubeflow-pipelines-profile-controller",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/hooks",
                                        "name": "kubeflow-pipelines-profile-controller-code"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-profile-controller-kubeflow-pipelines-profile-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "sync.py",
                                            "path": "sync.py"
                                        }
                                    ],
                                    "name": "kubeflow-pipelines-profile-controller-code"
                                },
                                "name": "kubeflow-pipelines-profile-controller-code"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:44:27Z",
                        "lastUpdateTime": "2023-03-08T22:44:27Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:44:27Z",
                        "lastUpdateTime": "2023-03-08T22:44:28Z",
                        "message": "ReplicaSet \"kfp-profile-controller-7f546c77c6\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "68e2522b",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:30Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "argo-controller"
                },
                "name": "argo-controller",
                "namespace": "kubeflow",
                "resourceVersion": "42279",
                "uid": "4e633aee-9ee2-4baf-b6bc-5f0827e3fc73"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argo-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "argo-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "argo-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--configmap",
                                    "argo-controller-configmap-config",
                                    "--executor-image",
                                    "argoproj/argoexec:v3.3.8"
                                ],
                                "env": [
                                    {
                                        "name": "ARGO_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "LEADER_ELECTION_IDENTITY",
                                        "value": "argo-controller"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/evuh9usc9rqbwxwj0i9lkkjpzs1dwy053isqa/oci-image@sha256:669ebd548e4619d2a4ca03181302c4f19375890ec0fc688ccf7c4cff6bf5972f",
                                "imagePullPolicy": "Always",
                                "name": "argo-controller",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/config-map.yaml",
                                        "name": "argo-controller-configmap-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "argo-controller-argo-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-controller",
                        "serviceAccountName": "argo-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config",
                                            "path": "config"
                                        }
                                    ],
                                    "name": "argo-controller-configmap-config"
                                },
                                "name": "argo-controller-configmap-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:44:30Z",
                        "lastUpdateTime": "2023-03-08T22:44:30Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:44:30Z",
                        "lastUpdateTime": "2023-03-08T22:44:31Z",
                        "message": "ReplicaSet \"argo-controller-777758989\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "9659b668",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:23Z",
                "generation": 4,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "jupyter-ui"
                },
                "name": "jupyter-ui",
                "namespace": "kubeflow",
                "resourceVersion": "42353",
                "uid": "69cadc6d-2990-4553-a6b8-c6c6261b35fc"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "jupyter-ui"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "jupyter-ui-",
                        "labels": {
                            "app.kubernetes.io/name": "jupyter-ui"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/jupyter"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "False"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "CLUSTER_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "UI",
                                        "value": "default"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/9lw7s63ewtlyew486jjn1ez4fe2mh813xni8f/oci-image@sha256:d55c600b690ec802b9bd159ea05d31b1efbc6a7f86f23051da6491f4421b5994",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jupyter-ui",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/config",
                                        "name": "jupyter-ui-config-config"
                                    },
                                    {
                                        "mountPath": "/src/apps/default/static/assets/logos",
                                        "name": "jupyter-ui-logos-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "jupyter-ui-jupyter-ui-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-ui",
                        "serviceAccountName": "jupyter-ui",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "spawner_ui_config.yaml",
                                            "path": "spawner_ui_config.yaml"
                                        }
                                    ],
                                    "name": "jupyter-ui-config-config"
                                },
                                "name": "jupyter-ui-config-config"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "jupyter-icon.svg",
                                            "path": "jupyter-icon.svg"
                                        },
                                        {
                                            "key": "jupyterlab-logo.svg",
                                            "path": "jupyterlab-logo.svg"
                                        },
                                        {
                                            "key": "group-two-icon.svg",
                                            "path": "group-two-icon.svg"
                                        },
                                        {
                                            "key": "group-two-logo.svg",
                                            "path": "group-two-logo.svg"
                                        },
                                        {
                                            "key": "group-one-icon.svg",
                                            "path": "group-one-icon.svg"
                                        },
                                        {
                                            "key": "group-one-logo.svg",
                                            "path": "group-one-logo.svg"
                                        }
                                    ],
                                    "name": "jupyter-ui-logos-config"
                                },
                                "name": "jupyter-ui-logos-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:38:15Z",
                        "lastUpdateTime": "2023-03-08T22:38:15Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:37:23Z",
                        "lastUpdateTime": "2023-03-08T22:38:15Z",
                        "message": "ReplicaSet \"jupyter-ui-fd79d58b4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "e46434d4",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:24Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-api"
                },
                "name": "kfp-api",
                "namespace": "kubeflow",
                "resourceVersion": "42402",
                "uid": "1d880369-f925-4e04-9e17-e8b33e6241d6"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-api"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-api-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-api"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/6dmow0tt4o9ss0keyowwkifpww9nhegg6exlj/oci-image@sha256:bf747d5ca70ff123ec2b6150c91c0783e850039de6dad03c266004187e12d34b",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "name": "ml-pipeline-api-server",
                                "ports": [
                                    {
                                        "containerPort": 8888,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8887,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 12,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/config",
                                        "name": "kfp-api-config-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-api-ml-pipeline-api-server-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-api",
                        "serviceAccountName": "kfp-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config.json",
                                            "path": "config.json"
                                        },
                                        {
                                            "key": "sample_config.json",
                                            "path": "sample_config.json"
                                        }
                                    ],
                                    "name": "kfp-api-config-config"
                                },
                                "name": "kfp-api-config-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:44:25Z",
                        "lastUpdateTime": "2023-03-08T22:44:25Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:44:24Z",
                        "lastUpdateTime": "2023-03-08T22:44:25Z",
                        "message": "ReplicaSet \"kfp-api-6599f459\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c362f871",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:38Z",
                "generation": 2,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-profiles"
                },
                "name": "kubeflow-profiles",
                "namespace": "kubeflow",
                "resourceVersion": "42964",
                "uid": "5b102a4c-a912-49d7-a972-879a0cdfd3ef"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-profiles"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kubeflow-profiles-",
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-profiles"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-userid-header",
                                    "kubeflow-userid",
                                    "-userid-prefix",
                                    "",
                                    "-workload-identity",
                                    ""
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/profile-image@sha256:cfd6935d3e330e6364a1be2a98947046b5181c0c9caa32fea4dcea9637c1af9e",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "kubeflow-profiles",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "manager",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/profile-controller",
                                        "name": "namespace-labels-data"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "-cluster-admin",
                                    "admin",
                                    "-userid-header",
                                    "kubeflow-userid",
                                    "-userid-prefix",
                                    ""
                                ],
                                "command": [
                                    "/access-management"
                                ],
                                "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/kfam-image@sha256:71ba951d266874241bb69106e278e9a79c0b6a222bd093a669ad691a585a0dc7",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "kubeflow-kfam",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kubeflow-profiles-kubeflow-profiles-secret"
                            },
                            {
                                "name": "kubeflow-profiles-kubeflow-kfam-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-profiles",
                        "serviceAccountName": "kubeflow-profiles",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "namespace-labels.yaml",
                                            "path": "namespace-labels.yaml"
                                        }
                                    ],
                                    "name": "namespace-labels-data"
                                },
                                "name": "namespace-labels-data"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:42:39Z",
                        "lastUpdateTime": "2023-03-08T22:42:39Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:42:39Z",
                        "lastUpdateTime": "2023-03-08T22:42:39Z",
                        "message": "ReplicaSet \"kubeflow-profiles-598c6fc44c\" is progressing.",
                        "reason": "ReplicaSetUpdated",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c520430a",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:46Z",
                "generation": 4,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-controller"
                },
                "name": "katib-controller",
                "namespace": "kubeflow",
                "resourceVersion": "53253",
                "uid": "c94493d0-b590-4abd-a0fe-e290b750b891"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--webhook-port=443",
                                    "--trial-resources=Job.v1.batch",
                                    "--trial-resources=TFJob.v1.kubeflow.org",
                                    "--trial-resources=PyTorchJob.v1.kubeflow.org",
                                    "--trial-resources=MPIJob.v1.kubeflow.org",
                                    "--trial-resources=PipelineRun.v1beta1.tekton.dev"
                                ],
                                "command": [
                                    "./katib-controller"
                                ],
                                "env": [
                                    {
                                        "name": "KATIB_CORE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/3fmkpe8hdk6uwmdvuga521r2z95vdr4xeilz9/oci-image@sha256:03d47fb974edbdd41b4a7b0cc704be48d6dd9fae0c9d6216c50d618d6c29f0ba",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "katib-controller",
                                "ports": [
                                    {
                                        "containerPort": 443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp/cert",
                                        "name": "katib-controller-certs-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-controller-katib-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-controller",
                        "serviceAccountName": "katib-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        },
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        }
                                    ],
                                    "name": "katib-controller-certs-config"
                                },
                                "name": "katib-controller-certs-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2023-03-08T22:37:46Z",
                        "lastUpdateTime": "2023-03-08T22:39:01Z",
                        "message": "ReplicaSet \"katib-controller-c79cd5d6f\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-03-08T22:50:26Z",
                        "lastUpdateTime": "2023-03-08T22:50:26Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 4,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T21:59:06Z",
                "generation": 2,
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "79568db7f8"
                },
                "name": "calico-kube-controllers-79568db7f8",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "calico-kube-controllers",
                        "uid": "f6484cc8-ad86-49fe-8305-1cbbe691f2a4"
                    }
                ],
                "resourceVersion": "251",
                "uid": "c2822790-162a-4d54-b465-f234cfb91d7d"
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers",
                        "pod-template-hash": "79568db7f8"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers",
                            "pod-template-hash": "79568db7f8"
                        },
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "image": "docker.io/calico/kube-controllers:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "calico-kube-controllers",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "calico-kube-controllers",
                        "serviceAccountName": "calico-kube-controllers",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ]
                    }
                }
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 0
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "2"
                },
                "creationTimestamp": "2023-03-08T21:59:07Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "calico-kube-controllers",
                    "pod-template-hash": "69d6f7455c"
                },
                "name": "calico-kube-controllers-69d6f7455c",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "calico-kube-controllers",
                        "uid": "f6484cc8-ad86-49fe-8305-1cbbe691f2a4"
                    }
                ],
                "resourceVersion": "362",
                "uid": "2a6ecd23-1ca6-41ae-a438-84e369b191f0"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "calico-kube-controllers",
                        "pod-template-hash": "69d6f7455c"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/restartedAt": "2023-03-08T13:59:07-08:00"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "calico-kube-controllers",
                            "pod-template-hash": "69d6f7455c"
                        },
                        "name": "calico-kube-controllers",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ENABLED_CONTROLLERS",
                                        "value": "node"
                                    },
                                    {
                                        "name": "DATASTORE_TYPE",
                                        "value": "kubernetes"
                                    }
                                ],
                                "image": "docker.io/calico/kube-controllers:v3.23.5",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-l"
                                        ]
                                    },
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 10
                                },
                                "name": "calico-kube-controllers",
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/check-status",
                                            "-r"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "calico-kube-controllers",
                        "serviceAccountName": "calico-kube-controllers",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T21:59:37Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "6f5f9b5d74"
                },
                "name": "coredns-6f5f9b5d74",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "8c9ed8cc-a5b1-4a3d-bec9-453b07f7fca1"
                    }
                ],
                "resourceVersion": "412",
                "uid": "5e6aa281-1a06-4594-977f-628e5f78d10f"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "6f5f9b5d74"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "priorityClassName": "system-cluster-critical"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6f5f9b5d74"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "coredns/coredns:1.9.3",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "hostpath-provisioner",
                    "pod-template-hash": "69cd9ff5b8"
                },
                "name": "hostpath-provisioner-69cd9ff5b8",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "hostpath-provisioner",
                        "uid": "7875e7d4-6c9a-431e-a3a6-a2a895e9290a"
                    }
                ],
                "resourceVersion": "740",
                "uid": "1ea244e6-9e5e-4d53-b0e7-4d8022709863"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "hostpath-provisioner",
                        "pod-template-hash": "69cd9ff5b8"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "hostpath-provisioner",
                            "pod-template-hash": "69cd9ff5b8"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PV_DIR",
                                        "value": "/var/snap/microk8s/common/default-storage"
                                    },
                                    {
                                        "name": "BUSYBOX_IMAGE",
                                        "value": "busybox:1.28.4"
                                    }
                                ],
                                "image": "cdkbot/hostpath-provisioner:1.4.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "hostpath-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/snap/microk8s/common/default-storage",
                                        "name": "pv-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "microk8s-hostpath",
                        "serviceAccountName": "microk8s-hostpath",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/var/snap/microk8s/common/default-storage",
                                    "type": ""
                                },
                                "name": "pv-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "dashboard-metrics-scraper",
                    "pod-template-hash": "7bc864c59"
                },
                "name": "dashboard-metrics-scraper-7bc864c59",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "dashboard-metrics-scraper",
                        "uid": "e9c925cc-4640-48c7-8d6a-5f2c801764da"
                    }
                ],
                "resourceVersion": "961",
                "uid": "0e500f97-551b-425d-8632-32ae12790b3d"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "dashboard-metrics-scraper",
                        "pod-template-hash": "7bc864c59"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "dashboard-metrics-scraper",
                            "pod-template-hash": "7bc864c59"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "kubernetesui/metrics-scraper:v1.0.8",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "dashboard-metrics-scraper",
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 2001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "kubernetes-dashboard",
                        "serviceAccountName": "kubernetes-dashboard",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "6f754f88d"
                },
                "name": "metrics-server-6f754f88d",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "e41e9224-0886-4550-b817-5b686fe99f0f"
                    }
                ],
                "resourceVersion": "1518",
                "uid": "cb1ccbc1-f4b1-4270-a2b8-e049ff9ee673"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "6f754f88d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "6f754f88d"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443",
                                    "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                                    "--kubelet-use-node-status-port",
                                    "--metric-resolution=15s",
                                    "--kubelet-insecure-tls"
                                ],
                                "image": "registry.k8s.io/metrics-server/metrics-server:v0.5.2",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "metrics-server",
                                "ports": [
                                    {
                                        "containerPort": 4443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "securityContext": {
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64",
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "metrics-server",
                        "serviceAccountName": "metrics-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "app": "console",
                    "pod-template-hash": "66c4b79fbd"
                },
                "name": "console-66c4b79fbd",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "console",
                        "uid": "3df3996c-702d-4546-b2b1-564e557a6450"
                    }
                ],
                "resourceVersion": "1519",
                "uid": "982fced7-5588-4b8a-921f-30c52d10b0a5"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "console",
                        "pod-template-hash": "66c4b79fbd"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "operator.min.io/authors": "MinIO, Inc.",
                            "operator.min.io/license": "AGPLv3",
                            "operator.min.io/support": "https://subnet.min.io"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "console",
                            "pod-template-hash": "66c4b79fbd"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "server"
                                ],
                                "env": [
                                    {
                                        "name": "CONSOLE_OPERATOR_MODE",
                                        "value": "on"
                                    }
                                ],
                                "image": "minio/console:v0.20.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "console",
                                "ports": [
                                    {
                                        "containerPort": 9090,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9433,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 1000,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "console-sa",
                        "serviceAccountName": "console-sa",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app": "kube-prometheus-stack-operator",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "pod-template-hash": "5fd9456cd9",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-prome-operator-5fd9456cd9",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kube-prom-stack-kube-prome-operator",
                        "uid": "4ab0c536-0b74-4aa0-b517-1594139be9f9"
                    }
                ],
                "resourceVersion": "1520",
                "uid": "8e2e838a-f5a7-40b6-bb38-eaef5f5ab683"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "kube-prometheus-stack-operator",
                        "pod-template-hash": "5fd9456cd9",
                        "release": "kube-prom-stack"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kube-prometheus-stack-operator",
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/part-of": "kube-prometheus-stack",
                            "app.kubernetes.io/version": "45.7.1",
                            "chart": "kube-prometheus-stack-45.7.1",
                            "heritage": "Helm",
                            "pod-template-hash": "5fd9456cd9",
                            "release": "kube-prom-stack"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--kubelet-service=kube-system/kube-prom-stack-kube-prome-kubelet",
                                    "--localhost=127.0.0.1",
                                    "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                                    "--config-reloader-cpu-request=200m",
                                    "--config-reloader-cpu-limit=200m",
                                    "--config-reloader-memory-request=50Mi",
                                    "--config-reloader-memory-limit=50Mi",
                                    "--thanos-default-base-image=quay.io/thanos/thanos:v0.30.2",
                                    "--web.enable-tls=true",
                                    "--web.cert-file=/cert/cert",
                                    "--web.key-file=/cert/key",
                                    "--web.listen-address=:10250",
                                    "--web.tls-min-version=VersionTLS13"
                                ],
                                "image": "quay.io/prometheus-operator/prometheus-operator:v0.63.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kube-prometheus-stack",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/cert",
                                        "name": "tls-secret",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 65534,
                            "runAsNonRoot": true,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "kube-prom-stack-kube-prome-operator",
                        "serviceAccountName": "kube-prom-stack-kube-prome-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "tls-secret",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kube-prom-stack-kube-prome-admission"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "metrics",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "kube-state-metrics",
                    "app.kubernetes.io/part-of": "kube-state-metrics",
                    "app.kubernetes.io/version": "2.8.1",
                    "helm.sh/chart": "kube-state-metrics-5.0.0",
                    "pod-template-hash": "8577f76959",
                    "release": "kube-prom-stack"
                },
                "name": "kube-prom-stack-kube-state-metrics-8577f76959",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kube-prom-stack-kube-state-metrics",
                        "uid": "4476f86f-6e00-4b0b-9725-64f0a315891c"
                    }
                ],
                "resourceVersion": "1521",
                "uid": "3f4c8a3b-cf99-4d32-9130-865e16cb1805"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack",
                        "app.kubernetes.io/name": "kube-state-metrics",
                        "pod-template-hash": "8577f76959"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "metrics",
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "kube-state-metrics",
                            "app.kubernetes.io/part-of": "kube-state-metrics",
                            "app.kubernetes.io/version": "2.8.1",
                            "helm.sh/chart": "kube-state-metrics-5.0.0",
                            "pod-template-hash": "8577f76959",
                            "release": "kube-prom-stack"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--port=8080",
                                    "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments"
                                ],
                                "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "kube-state-metrics",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 65534,
                            "runAsGroup": 65534,
                            "runAsUser": 65534
                        },
                        "serviceAccount": "kube-prom-stack-kube-state-metrics",
                        "serviceAccountName": "kube-prom-stack-kube-state-metrics",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "pod-template-hash": "dc96f9fc"
                },
                "name": "kubernetes-dashboard-dc96f9fc",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kubernetes-dashboard",
                        "uid": "c26b62be-a525-43f8-92ec-0c8cea9f6d76"
                    }
                ],
                "resourceVersion": "1522",
                "uid": "5c970445-1a5e-475c-8429-fe5df732b656"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "pod-template-hash": "dc96f9fc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "pod-template-hash": "dc96f9fc"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--auto-generate-certificates",
                                    "--namespace=kube-system"
                                ],
                                "image": "kubernetesui/dashboard:v2.7.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "kubernetes-dashboard",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 2001,
                                    "runAsUser": 1001
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/certs",
                                        "name": "kubernetes-dashboard-certs"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "serviceAccount": "kubernetes-dashboard",
                        "serviceAccountName": "kubernetes-dashboard",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            }
                        ],
                        "volumes": [
                            {
                                "name": "kubernetes-dashboard-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "kubernetes-dashboard-certs"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:01:20Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/name": "grafana",
                    "pod-template-hash": "55cdcd77fb"
                },
                "name": "kube-prom-stack-grafana-55cdcd77fb",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kube-prom-stack-grafana",
                        "uid": "9b475332-1e5d-46dd-82d6-74bf9aa2c1b4"
                    }
                ],
                "resourceVersion": "1537",
                "uid": "8f8c6196-a101-4325-97e1-e3c4bb8829fc"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack",
                        "app.kubernetes.io/name": "grafana",
                        "pod-template-hash": "55cdcd77fb"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "60947034e066545907edba4161f3d1f9823e730437eb2883446cc81b624e4086",
                            "checksum/dashboards-json-config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                            "checksum/sc-dashboard-provider-config": "2a79bd8307ccae3521afb43ea4a5f1f0d2deda4b6481f8b131efe44277bc502f",
                            "checksum/secret": "3d5dc20ad0dbb3f93006527887f0d3ffa2a535c06d911c586facc0d7d9421902"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "kube-prom-stack",
                            "app.kubernetes.io/name": "grafana",
                            "pod-template-hash": "55cdcd77fb"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "METHOD",
                                        "value": "WATCH"
                                    },
                                    {
                                        "name": "LABEL",
                                        "value": "grafana_dashboard"
                                    },
                                    {
                                        "name": "LABEL_VALUE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FOLDER",
                                        "value": "/tmp/dashboards"
                                    },
                                    {
                                        "name": "RESOURCE",
                                        "value": "both"
                                    },
                                    {
                                        "name": "REQ_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_URL",
                                        "value": "http://localhost:3000/api/admin/provisioning/dashboards/reload"
                                    },
                                    {
                                        "name": "REQ_METHOD",
                                        "value": "POST"
                                    }
                                ],
                                "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "grafana-sc-dashboard",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/dashboards",
                                        "name": "sc-dashboard-volume"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "METHOD",
                                        "value": "WATCH"
                                    },
                                    {
                                        "name": "LABEL",
                                        "value": "grafana_datasource"
                                    },
                                    {
                                        "name": "LABEL_VALUE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FOLDER",
                                        "value": "/etc/grafana/provisioning/datasources"
                                    },
                                    {
                                        "name": "RESOURCE",
                                        "value": "both"
                                    },
                                    {
                                        "name": "REQ_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "REQ_URL",
                                        "value": "http://localhost:3000/api/admin/provisioning/datasources/reload"
                                    },
                                    {
                                        "name": "REQ_METHOD",
                                        "value": "POST"
                                    }
                                ],
                                "image": "quay.io/kiwigrid/k8s-sidecar:1.22.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "grafana-sc-datasources",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/grafana/provisioning/datasources",
                                        "name": "sc-datasources-volume"
                                    }
                                ]
                            },
                            {
                                "env": [
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_SECURITY_ADMIN_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-user",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_SECURITY_ADMIN_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "admin-password",
                                                "name": "kube-prom-stack-grafana"
                                            }
                                        }
                                    },
                                    {
                                        "name": "GF_PATHS_DATA",
                                        "value": "/var/lib/grafana/"
                                    },
                                    {
                                        "name": "GF_PATHS_LOGS",
                                        "value": "/var/log/grafana"
                                    },
                                    {
                                        "name": "GF_PATHS_PLUGINS",
                                        "value": "/var/lib/grafana/plugins"
                                    },
                                    {
                                        "name": "GF_PATHS_PROVISIONING",
                                        "value": "/etc/grafana/provisioning"
                                    }
                                ],
                                "image": "grafana/grafana:9.3.8",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "path": "/api/health",
                                        "port": 3000,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 30
                                },
                                "name": "grafana",
                                "ports": [
                                    {
                                        "containerPort": 3000,
                                        "name": "grafana",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "gossip-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "gossip-udp",
                                        "protocol": "UDP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/api/health",
                                        "port": 3000,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/grafana/grafana.ini",
                                        "name": "config",
                                        "subPath": "grafana.ini"
                                    },
                                    {
                                        "mountPath": "/var/lib/grafana",
                                        "name": "storage"
                                    },
                                    {
                                        "mountPath": "/tmp/dashboards",
                                        "name": "sc-dashboard-volume"
                                    },
                                    {
                                        "mountPath": "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml",
                                        "name": "sc-dashboard-provider",
                                        "subPath": "provider.yaml"
                                    },
                                    {
                                        "mountPath": "/etc/grafana/provisioning/datasources",
                                        "name": "sc-datasources-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 472,
                            "runAsGroup": 472,
                            "runAsUser": 472
                        },
                        "serviceAccount": "kube-prom-stack-grafana",
                        "serviceAccountName": "kube-prom-stack-grafana",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-prom-stack-grafana"
                                },
                                "name": "config"
                            },
                            {
                                "emptyDir": {},
                                "name": "storage"
                            },
                            {
                                "emptyDir": {},
                                "name": "sc-dashboard-volume"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "kube-prom-stack-grafana-config-dashboards"
                                },
                                "name": "sc-dashboard-provider"
                            },
                            {
                                "emptyDir": {},
                                "name": "sc-datasources-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1",
                    "operator.min.io/authors": "MinIO, Inc.",
                    "operator.min.io/license": "AGPLv3",
                    "operator.min.io/support": "https://subnet.min.io"
                },
                "creationTimestamp": "2023-03-08T22:01:11Z",
                "generation": 1,
                "labels": {
                    "name": "minio-operator",
                    "pod-template-hash": "67dcf6dd7c"
                },
                "name": "minio-operator-67dcf6dd7c",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "minio-operator",
                        "uid": "85dfd7de-074b-495a-b793-138892bc2d2a"
                    }
                ],
                "resourceVersion": "1715",
                "uid": "79ceef73-10e0-44ec-9c35-4b0a881f511d"
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "name": "minio-operator",
                        "pod-template-hash": "67dcf6dd7c"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "operator.min.io/authors": "MinIO, Inc.",
                            "operator.min.io/license": "AGPLv3",
                            "operator.min.io/support": "https://subnet.min.io"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "name": "minio-operator",
                            "pod-template-hash": "67dcf6dd7c"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "name",
                                                    "operator": "In",
                                                    "values": [
                                                        "minio-operator"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "CLUSTER_DOMAIN",
                                        "value": "cluster.local"
                                    }
                                ],
                                "image": "minio/operator:v4.5.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "minio-operator",
                                "resources": {
                                    "requests": {
                                        "cpu": "200m",
                                        "ephemeral-storage": "500Mi",
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "runAsGroup": 1000,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1000
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "minio-operator",
                        "serviceAccountName": "minio-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 2
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "redis",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-redis",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "6.2.6-alpine",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5c54d675d4"
                },
                "name": "argo-cd-argocd-redis-5c54d675d4",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-redis",
                        "uid": "ef7aeb5e-00c8-4d1b-a980-bc35db76be7e"
                    }
                ],
                "resourceVersion": "2474",
                "uid": "933d0aa0-e76c-4b07-871a-67bd49b8597b"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argocd-redis",
                        "pod-template-hash": "5c54d675d4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "redis",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-redis",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "6.2.6-alpine",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "5c54d675d4"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": false,
                        "containers": [
                            {
                                "args": [
                                    "--save",
                                    "",
                                    "--appendonly",
                                    "no"
                                ],
                                "image": "redis:6.2.6-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "argo-cd-argocd-redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "name": "redis",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 999
                        },
                        "serviceAccount": "default",
                        "serviceAccountName": "default",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "notifications-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-notifications-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "7d978b7df"
                },
                "name": "argo-cd-argocd-notifications-controller-7d978b7df",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-notifications-controller",
                        "uid": "0fb9c986-d10a-47ea-8521-5e92e39ec53f"
                    }
                ],
                "resourceVersion": "2609",
                "uid": "a87adef3-92fa-450d-9c60-85b7f112bc37"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-notifications-controller",
                        "pod-template-hash": "7d978b7df"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "notifications-controller",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-notifications-controller",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "7d978b7df"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "argocd-notifications",
                                    "--loglevel=info",
                                    "--namespace=argocd",
                                    "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                                    "--secret-name=argo-cd-argocd-notifications-controller-secret",
                                    "--config-map-name=argo-cd-argocd-notifications-controller-cm"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "notifications-controller",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    }
                                ],
                                "workingDir": "/app"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true
                        },
                        "serviceAccount": "argocd-notifications-controller",
                        "serviceAccountName": "argocd-notifications-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "applicationset-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-applicationset-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v0.4.1",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5c9d544f47"
                },
                "name": "argo-cd-argocd-applicationset-controller-5c9d544f47",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-applicationset-controller",
                        "uid": "356efc70-647a-491c-9b72-586ed1efb2da"
                    }
                ],
                "resourceVersion": "2641",
                "uid": "bbbd7dc0-7619-4534-8cbd-272b1436ac8f"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-applicationset-controller",
                        "pod-template-hash": "5c9d544f47"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "applicationset-controller",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-applicationset-controller",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v0.4.1",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "5c9d544f47"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "applicationset-controller",
                                    "--metrics-addr=:8080",
                                    "--probe-addr=:8081",
                                    "--namespace=argocd",
                                    "--argocd-repo-server=argo-cd-argocd-repo-server:8081",
                                    "--policy=sync",
                                    "--debug=false",
                                    "--dry-run=false"
                                ],
                                "image": "quay.io/argoproj/argocd-applicationset:v0.4.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "applicationset-controller",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 7000,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-cd-argocd-applicationset-controller",
                        "serviceAccountName": "argo-cd-argocd-applicationset-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:09:48Z",
                "generation": 1,
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "558cdbcbff",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istiod-558cdbcbff",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "istiod",
                        "uid": "d07f65ed-aef6-4412-890d-08d6d5305319"
                    }
                ],
                "resourceVersion": "2710",
                "uid": "9ad7d507-d82d-48f2-b7d9-ac95f2569cd0"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot",
                        "pod-template-hash": "558cdbcbff"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "pod-template-hash": "558cdbcbff",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "100"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/pilot:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "discovery",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1337
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio-dns",
                                        "name": "local-certs"
                                    },
                                    {
                                        "mountPath": "/etc/cacerts",
                                        "name": "cacerts",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/remote",
                                        "name": "istio-kubeconfig",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "istiod",
                        "serviceAccountName": "istiod",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "local-certs"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "cacerts"
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-kubeconfig"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "dex-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-dex-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.30.2",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "9dfff8587"
                },
                "name": "argo-cd-argocd-dex-server-9dfff8587",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-dex-server",
                        "uid": "be8b7ecf-78bc-4be7-884c-24f39776b959"
                    }
                ],
                "resourceVersion": "2787",
                "uid": "91cabee2-4080-4099-9257-6a4bf4849030"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-dex-server",
                        "pod-template-hash": "9dfff8587"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "dex-server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-dex-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.30.2",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "9dfff8587"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/shared/argocd-dex",
                                    "rundex"
                                ],
                                "image": "ghcr.io/dexidp/dex:v2.30.2",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "dex-server",
                                "ports": [
                                    {
                                        "containerPort": 5556,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5557,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5558,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/shared/argocd-dex"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "copyutil",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/shared",
                                        "name": "static-files"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-dex-server",
                        "serviceAccountName": "argocd-dex-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "emptyDir": {},
                                "name": "static-files"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "6d78494c47"
                },
                "name": "argo-cd-argocd-server-6d78494c47",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-server",
                        "uid": "194ecc4d-cc9e-495d-80e2-d1971db4afb2"
                    }
                ],
                "resourceVersion": "2793",
                "uid": "fd1b17be-1498-4829-a9c3-f27507220e39"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-server",
                        "pod-template-hash": "6d78494c47"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "6d78494c47"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "argocd-server",
                                    "--staticassets",
                                    "/shared/app",
                                    "--repo-server",
                                    "argo-cd-argocd-repo-server:8081",
                                    "--dex-server",
                                    "http://argo-cd-argocd-dex-server:5556",
                                    "--logformat",
                                    "text",
                                    "--loglevel",
                                    "info",
                                    "--redis",
                                    "argo-cd-argocd-redis:6379"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "server",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/server/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/home/argocd",
                                        "name": "plugins-home"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-server",
                        "serviceAccountName": "argocd-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "plugins-home"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:39Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "repo-server",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-repo-server",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3",
                    "pod-template-hash": "5f67c7b647"
                },
                "name": "argo-cd-argocd-repo-server-5f67c7b647",
                "namespace": "argocd",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-cd-argocd-repo-server",
                        "uid": "eb8c7cf2-baf3-473c-a119-b554a2df0337"
                    }
                ],
                "resourceVersion": "2804",
                "uid": "d91faa55-bc0d-49b2-b99f-0741c1b51116"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-repo-server",
                        "pod-template-hash": "5f67c7b647"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "repo-server",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-repo-server",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3",
                            "pod-template-hash": "5f67c7b647"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "argocd-repo-server",
                                    "--redis",
                                    "argo-cd-argocd-redis:6379",
                                    "--logformat",
                                    "text",
                                    "--loglevel",
                                    "info"
                                ],
                                "command": [
                                    "entrypoint.sh"
                                ],
                                "env": [
                                    {
                                        "name": "HELM_CACHE_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_CONFIG_HOME",
                                        "value": "/helm-working-dir"
                                    },
                                    {
                                        "name": "HELM_DATA_HOME",
                                        "value": "/helm-working-dir"
                                    }
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 8081
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "repo-server",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "repo-server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 8081
                                    },
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/app/config/gpg/source",
                                        "name": "gpg-keys"
                                    },
                                    {
                                        "mountPath": "/app/config/gpg/keys",
                                        "name": "gpg-keyring"
                                    },
                                    {
                                        "mountPath": "/app/config/ssh",
                                        "name": "ssh-known-hosts"
                                    },
                                    {
                                        "mountPath": "/app/config/tls",
                                        "name": "tls-certs"
                                    },
                                    {
                                        "mountPath": "/app/config/reposerver/tls",
                                        "name": "argocd-repo-server-tls"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp-dir"
                                    },
                                    {
                                        "mountPath": "/helm-working-dir",
                                        "name": "helm-working-dir"
                                    },
                                    {
                                        "mountPath": "/home/argocd/cmp-server/plugins",
                                        "name": "plugins"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "cp",
                                    "-n",
                                    "/usr/local/bin/argocd",
                                    "/var/run/argocd/argocd-cmp-server"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "copyutil",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/argocd",
                                        "name": "var-files"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-cd-argocd-repo-server",
                        "serviceAccountName": "argo-cd-argocd-repo-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-gpg-keys-cm"
                                },
                                "name": "gpg-keys"
                            },
                            {
                                "emptyDir": {},
                                "name": "gpg-keyring"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-ssh-known-hosts-cm"
                                },
                                "name": "ssh-known-hosts"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "argocd-tls-certs-cm"
                                },
                                "name": "tls-certs"
                            },
                            {
                                "emptyDir": {},
                                "name": "helm-working-dir"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "tmp-dir"
                            },
                            {
                                "emptyDir": {},
                                "name": "var-files"
                            },
                            {
                                "emptyDir": {},
                                "name": "plugins"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generation": 1,
                "labels": {
                    "app": "istio-egressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "egressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "EgressGateways",
                    "pod-template-hash": "6b957f5b7d",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-egressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istio-egressgateway-6b957f5b7d",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "istio-egressgateway",
                        "uid": "779e3201-9b51-4ead-9247-ac7091f8f8c5"
                    }
                ],
                "resourceVersion": "2836",
                "uid": "38e21254-f56b-41ff-a86d-748b81d7f0a9"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-egressgateway",
                        "istio": "egressgateway",
                        "pod-template-hash": "6b957f5b7d"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-egressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "egressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "EgressGateways",
                            "pod-template-hash": "6b957f5b7d",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-egressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "containers": [
                            {
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/proxyv2:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "istio-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15090,
                                        "name": "http-envoy-prom",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 30,
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                        "name": "workload-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/credential-uds",
                                        "name": "credential-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                        "name": "workload-certs"
                                    },
                                    {
                                        "mountPath": "/etc/istio/proxy",
                                        "name": "istio-envoy"
                                    },
                                    {
                                        "mountPath": "/etc/istio/config",
                                        "name": "config-volume"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio",
                                        "name": "istiod-ca-cert"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/istio/data",
                                        "name": "istio-data"
                                    },
                                    {
                                        "mountPath": "/etc/istio/pod",
                                        "name": "podinfo"
                                    },
                                    {
                                        "mountPath": "/etc/istio/egressgateway-certs",
                                        "name": "egressgateway-certs",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/istio/egressgateway-ca-certs",
                                        "name": "egressgateway-ca-certs",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "serviceAccount": "istio-egressgateway-service-account",
                        "serviceAccountName": "istio-egressgateway-service-account",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "workload-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "credential-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "workload-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio-ca-root-cert"
                                },
                                "name": "istiod-ca-cert"
                            },
                            {
                                "downwardAPI": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            },
                                            "path": "labels"
                                        },
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            },
                                            "path": "annotations"
                                        }
                                    ]
                                },
                                "name": "podinfo"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-envoy"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-data"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio",
                                    "optional": true
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "egressgateway-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-egressgateway-certs"
                                }
                            },
                            {
                                "name": "egressgateway-ca-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-egressgateway-ca-certs"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:10:08Z",
                "generation": 1,
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "ingressgateway",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "IngressGateways",
                    "pod-template-hash": "5f57c68988",
                    "release": "istio",
                    "service.istio.io/canonical-name": "istio-ingressgateway",
                    "service.istio.io/canonical-revision": "latest",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istio-ingressgateway-5f57c68988",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "istio-ingressgateway",
                        "uid": "790b04c1-6d72-4751-9010-557a1e43b5ab"
                    }
                ],
                "resourceVersion": "2845",
                "uid": "95201bcc-5d31-49ea-af44-bbb277fbb6ec"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "istio-ingressgateway",
                        "istio": "ingressgateway",
                        "pod-template-hash": "5f57c68988"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/stats/prometheus",
                            "prometheus.io/port": "15020",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istio-ingressgateway",
                            "chart": "gateways",
                            "heritage": "Tiller",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "ingressgateway",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "IngressGateways",
                            "pod-template-hash": "5f57c68988",
                            "release": "istio",
                            "service.istio.io/canonical-name": "istio-ingressgateway",
                            "service.istio.io/canonical-revision": "latest",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {}
                        },
                        "containers": [
                            {
                                "args": [
                                    "proxy",
                                    "router",
                                    "--domain",
                                    "$(POD_NAMESPACE).svc.cluster.local",
                                    "--proxyLogLevel=warning",
                                    "--proxyComponentLogLevel=misc:error",
                                    "--log_output_level=default:info"
                                ],
                                "env": [
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "CA_ADDR",
                                        "value": "istiod.istio-system.svc:15012"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INSTANCE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ISTIO_META_WORKLOAD_NAME",
                                        "value": "istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_OWNER",
                                        "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                                    },
                                    {
                                        "name": "ISTIO_META_MESH_ID",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "TRUST_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "ISTIO_META_UNPRIVILEGED_POD",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_META_CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/proxyv2:1.15.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "istio-proxy",
                                "ports": [
                                    {
                                        "containerPort": 15021,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 31400,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15090,
                                        "name": "http-envoy-prom",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 30,
                                    "httpGet": {
                                        "path": "/healthz/ready",
                                        "port": 15021,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "40Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-uds",
                                        "name": "workload-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/credential-uds",
                                        "name": "credential-socket"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/workload-spiffe-credentials",
                                        "name": "workload-certs"
                                    },
                                    {
                                        "mountPath": "/etc/istio/proxy",
                                        "name": "istio-envoy"
                                    },
                                    {
                                        "mountPath": "/etc/istio/config",
                                        "name": "config-volume"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio",
                                        "name": "istiod-ca-cert"
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/lib/istio/data",
                                        "name": "istio-data"
                                    },
                                    {
                                        "mountPath": "/etc/istio/pod",
                                        "name": "podinfo"
                                    },
                                    {
                                        "mountPath": "/etc/istio/ingressgateway-certs",
                                        "name": "ingressgateway-certs",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/istio/ingressgateway-ca-certs",
                                        "name": "ingressgateway-ca-certs",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337,
                            "runAsGroup": 1337,
                            "runAsNonRoot": true,
                            "runAsUser": 1337
                        },
                        "serviceAccount": "istio-ingressgateway-service-account",
                        "serviceAccountName": "istio-ingressgateway-service-account",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "workload-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "credential-socket"
                            },
                            {
                                "emptyDir": {},
                                "name": "workload-certs"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio-ca-root-cert"
                                },
                                "name": "istiod-ca-cert"
                            },
                            {
                                "downwardAPI": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.labels"
                                            },
                                            "path": "labels"
                                        },
                                        {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.annotations"
                                            },
                                            "path": "annotations"
                                        }
                                    ]
                                },
                                "name": "podinfo"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-envoy"
                            },
                            {
                                "emptyDir": {},
                                "name": "istio-data"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "istio",
                                    "optional": true
                                },
                                "name": "config-volume"
                            },
                            {
                                "name": "ingressgateway-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-ingressgateway-certs"
                                }
                            },
                            {
                                "name": "ingressgateway-ca-certs",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-ingressgateway-ca-certs"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "gpu-operator",
                    "app.kubernetes.io/name": "node-feature-discovery",
                    "pod-template-hash": "79bc547944",
                    "role": "master"
                },
                "name": "gpu-operator-node-feature-discovery-master-79bc547944",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "gpu-operator-node-feature-discovery-master",
                        "uid": "120bf976-38aa-48ef-a932-76245f9d165a"
                    }
                ],
                "resourceVersion": "3276",
                "uid": "66c327f4-3115-4c50-9004-c0f38f0c2221"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "gpu-operator",
                        "app.kubernetes.io/name": "node-feature-discovery",
                        "pod-template-hash": "79bc547944",
                        "role": "master"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "gpu-operator",
                            "app.kubernetes.io/name": "node-feature-discovery",
                            "pod-template-hash": "79bc547944",
                            "role": "master"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/master",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    },
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/control-plane",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--extra-label-ns=nvidia.com",
                                    "-featurerules-controller=true"
                                ],
                                "command": [
                                    "nfd-master"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "image": "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/grpc_health_probe",
                                            "-addr=:8080"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "master",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/bin/grpc_health_probe",
                                            "-addr=:8080"
                                        ]
                                    },
                                    "failureThreshold": 10,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "runAsNonRoot": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "node-feature-discovery",
                        "serviceAccountName": "node-feature-discovery",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane",
                                "operator": "Equal"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "gpu-operator",
                    "meta.helm.sh/release-namespace": "gpu-operator-resources"
                },
                "creationTimestamp": "2023-03-08T22:10:29Z",
                "generation": 1,
                "labels": {
                    "app": "gpu-operator",
                    "app.kubernetes.io/component": "gpu-operator",
                    "pod-template-hash": "567cf74d9d"
                },
                "name": "gpu-operator-567cf74d9d",
                "namespace": "gpu-operator-resources",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "gpu-operator",
                        "uid": "cdc8cb0d-4168-494d-b3d5-18bcc209962f"
                    }
                ],
                "resourceVersion": "3421",
                "uid": "8b5352dd-28f5-4b6f-bdf3-2714d4f0f3ee"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "gpu-operator",
                        "app.kubernetes.io/component": "gpu-operator",
                        "pod-template-hash": "567cf74d9d"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "openshift.io/scc": "restricted-readonly"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "gpu-operator",
                            "app.kubernetes.io/component": "gpu-operator",
                            "pod-template-hash": "567cf74d9d"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "nodeAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "node-role.kubernetes.io/master",
                                                    "operator": "In",
                                                    "values": [
                                                        ""
                                                    ]
                                                }
                                            ]
                                        },
                                        "weight": 1
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "--leader-elect"
                                ],
                                "command": [
                                    "gpu-operator"
                                ],
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "nvcr.io/nvidia/gpu-operator:v22.9.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "gpu-operator",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "350Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "100Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/host-etc/os-release",
                                        "name": "host-os-release",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "system-node-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "gpu-operator",
                        "serviceAccountName": "gpu-operator",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal"
                            }
                        ],
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/etc/os-release",
                                    "type": ""
                                },
                                "name": "host-os-release"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "chart": "jiva-3.3.0",
                    "component": "jiva-operator",
                    "heritage": "Helm",
                    "name": "jiva-operator",
                    "openebs.io/component-name": "jiva-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "594fdd69b9",
                    "release": "openebs"
                },
                "name": "openebs-jiva-operator-594fdd69b9",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-jiva-operator",
                        "uid": "8e49e493-ccc4-4ff4-bf04-dfa8d0cbb677"
                    }
                ],
                "resourceVersion": "5911",
                "uid": "7ea70538-2654-40a5-a6e8-7f14e24c5ae4"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "jiva-operator",
                        "name": "jiva-operator",
                        "pod-template-hash": "594fdd69b9",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "jiva-3.3.0",
                            "component": "jiva-operator",
                            "heritage": "Helm",
                            "name": "jiva-operator",
                            "openebs.io/component-name": "jiva-operator",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "594fdd69b9",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "jiva-operator"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "jiva-operator"
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_JIVA_CONTROLLER_IMAGE",
                                        "value": "openebs/jiva:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_JIVA_REPLICA_IMAGE",
                                        "value": "openebs/jiva:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_MAYA_EXPORTER_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    }
                                ],
                                "image": "openebs/jiva-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-jiva-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-jiva-operator",
                        "serviceAccountName": "openebs-jiva-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "openebs",
                    "component": "localpv-provisioner",
                    "name": "openebs-localpv-provisioner",
                    "openebs.io/component-name": "openebs-localpv-provisioner",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "99449bb55",
                    "release": "openebs"
                },
                "name": "openebs-localpv-provisioner-99449bb55",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-localpv-provisioner",
                        "uid": "3e19741c-805c-43c4-bf87-4eea1b322965"
                    }
                ],
                "resourceVersion": "5932",
                "uid": "85f86f13-64d8-40c4-9780-80f152789e95"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "openebs",
                        "pod-template-hash": "99449bb55",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "openebs",
                            "component": "localpv-provisioner",
                            "name": "openebs-localpv-provisioner",
                            "openebs.io/component-name": "openebs-localpv-provisioner",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "99449bb55",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--bd-time-out=$(BDC_BD_BIND_RETRIES)"
                                ],
                                "env": [
                                    {
                                        "name": "BDC_BD_BIND_RETRIES",
                                        "value": "12"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "value": "openebs"
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPENEBS_IO_BASE_PATH",
                                        "value": "/var/snap/microk8s/common/var/openebs/local"
                                    },
                                    {
                                        "name": "OPENEBS_IO_HELPER_IMAGE",
                                        "value": "openebs/linux-utils:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_INSTALLER_TYPE",
                                        "value": "charts-helm"
                                    },
                                    {
                                        "name": "LEADER_ELECTION_ENABLED",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/provisioner-localpv:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "sh",
                                            "-c",
                                            "test `pgrep -c \"^provisioner-loc.*\"` = 1"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "openebs-localpv-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs",
                        "serviceAccountName": "openebs",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "cvc-operator",
                    "heritage": "Helm",
                    "name": "cvc-operator",
                    "openebs.io/component-name": "cvc-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "7946b467f5",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cvc-operator-7946b467f5",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-cstor-cvc-operator",
                        "uid": "490c1faf-f034-43b1-9c77-b03c663c4e10"
                    }
                ],
                "resourceVersion": "5969",
                "uid": "92ff0287-1c71-4d57-912a-714801108f88"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "cvc-operator",
                        "name": "cvc-operator",
                        "pod-template-hash": "7946b467f5",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "cvc-operator",
                            "heritage": "Helm",
                            "name": "cvc-operator",
                            "openebs.io/component-name": "cvc-operator",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "7946b467f5",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election=false",
                                    "--bind=$(OPENEBS_CVC_POD_IP)"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_IO_BASE_DIR",
                                        "value": "/var/openebs"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_CVC_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_TARGET_IMAGE",
                                        "value": "openebs/cstor-istgt:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE",
                                        "value": "openebs/cstor-volume-manager:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_VOLUME_MONITOR_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    }
                                ],
                                "image": "openebs/cvc-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-cvc-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "openebs",
                    "component": "ndm-operator",
                    "name": "ndm-operator",
                    "openebs.io/component-name": "ndm-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "74fc47c6cc",
                    "release": "openebs"
                },
                "name": "openebs-ndm-operator-74fc47c6cc",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-ndm-operator",
                        "uid": "2051805d-bf5a-443b-97fa-d27d3d586cfe"
                    }
                ],
                "resourceVersion": "5981",
                "uid": "977794ab-283b-4d16-a2d3-869b9fcb0f4b"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "openebs",
                        "pod-template-hash": "74fc47c6cc",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "openebs",
                            "component": "ndm-operator",
                            "name": "ndm-operator",
                            "openebs.io/component-name": "ndm-operator",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "74fc47c6cc",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "node-disk-operator"
                                    },
                                    {
                                        "name": "CLEANUP_JOB_IMAGE",
                                        "value": "openebs/linux-utils:3.3.0"
                                    }
                                ],
                                "image": "openebs/node-disk-operator:2.0.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8585,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "openebs-ndm-operator",
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8585,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs",
                        "serviceAccountName": "openebs",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "chart": "cstor-3.3.0",
                    "component": "cspc-operator",
                    "heritage": "Helm",
                    "name": "cspc-operator",
                    "openebs.io/component-name": "cspc-operator",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "7dd775b4b8",
                    "release": "openebs"
                },
                "name": "openebs-cstor-cspc-operator-7dd775b4b8",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-cstor-cspc-operator",
                        "uid": "de117d5d-9e06-4439-b78a-799e5c26b15b"
                    }
                ],
                "resourceVersion": "5991",
                "uid": "6e290c39-abb1-43c4-9220-02ee03e9762f"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "cspc-operator",
                        "name": "cspc-operator",
                        "pod-template-hash": "7dd775b4b8",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "cspc-operator",
                            "heritage": "Helm",
                            "name": "cspc-operator",
                            "openebs.io/component-name": "cspc-operator",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "7dd775b4b8",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_SERVICEACCOUNT_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CSPC_OPERATOR_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_BASE_DIR",
                                        "value": "/var/openebs"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_SPARSE_DIR",
                                        "value": "/var/openebs/sparse"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSPI_MGMT_IMAGE",
                                        "value": "openebs/cstor-pool-manager:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_IMAGE",
                                        "value": "openebs/cstor-pool:3.3.0"
                                    },
                                    {
                                        "name": "OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE",
                                        "value": "openebs/m-exporter:3.3.0"
                                    },
                                    {
                                        "name": "RESYNC_INTERVAL",
                                        "value": "30"
                                    }
                                ],
                                "image": "openebs/cspc-operator:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-cspc-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app": "cstor-admission-webhook",
                    "chart": "cstor-3.3.0",
                    "component": "cstor-admission-webhook",
                    "heritage": "Helm",
                    "openebs.io/component-name": "cstor-admission-webhook",
                    "openebs.io/version": "3.3.0",
                    "pod-template-hash": "f5d57f788",
                    "release": "openebs"
                },
                "name": "openebs-cstor-admission-server-f5d57f788",
                "namespace": "openebs",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "openebs-cstor-admission-server",
                        "uid": "4ea45e3a-6b9b-4724-8127-59e3cccc97a3"
                    }
                ],
                "resourceVersion": "6015",
                "uid": "73a08feb-bb6e-4edd-9a88-1ec2dae38ba0"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "cstor-admission-webhook",
                        "component": "cstor-admission-webhook",
                        "pod-template-hash": "f5d57f788",
                        "release": "openebs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cstor-admission-webhook",
                            "chart": "cstor-3.3.0",
                            "component": "cstor-admission-webhook",
                            "heritage": "Helm",
                            "openebs.io/component-name": "cstor-admission-webhook",
                            "openebs.io/version": "3.3.0",
                            "pod-template-hash": "f5d57f788",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-alsologtostderr",
                                    "-v=2",
                                    "2\u003e\u00261"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ADMISSION_WEBHOOK_FAILURE_POLICY",
                                        "value": "Fail"
                                    }
                                ],
                                "image": "openebs/cstor-webhook:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "openebs-cstor-admission-webhook",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-operator",
                        "serviceAccountName": "openebs-cstor-operator",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "portainer",
                    "meta.helm.sh/release-namespace": "portainer"
                },
                "creationTimestamp": "2023-03-08T22:23:33Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "portainer",
                    "app.kubernetes.io/name": "portainer",
                    "pod-template-hash": "c875b56d4"
                },
                "name": "portainer-c875b56d4",
                "namespace": "portainer",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "portainer",
                        "uid": "8e05101b-298e-4627-90ab-4d29eb418dad"
                    }
                ],
                "resourceVersion": "7822",
                "uid": "d62a506d-f56e-4bc8-8dae-1f50144c4f97"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "portainer",
                        "app.kubernetes.io/name": "portainer",
                        "pod-template-hash": "c875b56d4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "portainer",
                            "app.kubernetes.io/name": "portainer",
                            "pod-template-hash": "c875b56d4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--tunnel-port=30776"
                                ],
                                "image": "portainer/portainer-ce:2.17.1",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9443,
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "portainer",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8000,
                                        "name": "tcp-edge",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9443,
                                        "scheme": "HTTPS"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "name": "data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "portainer-sa-clusteradmin",
                        "serviceAccountName": "portainer-sa-clusteradmin",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "data",
                                "persistentVolumeClaim": {
                                    "claimName": "portainer"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:25:04Z",
                "generation": 1,
                "labels": {
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model",
                    "pod-template-hash": "785666f8dc"
                },
                "name": "modeloperator-785666f8dc",
                "namespace": "controller-microk8s-localhost",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "modeloperator",
                        "uid": "0068c03a-eb18-4bbc-8b1b-525490598656"
                    }
                ],
                "resourceVersion": "8416",
                "uid": "ceb5d040-2067-4638-8d01-795325b17605"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "modeloperator",
                        "operator.juju.is/target": "model",
                        "pod-template-hash": "785666f8dc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "model.juju.is/disable-webhook": "true",
                            "operator.juju.is/name": "modeloperator",
                            "operator.juju.is/target": "model",
                            "pod-template-hash": "785666f8dc"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=fafa301c-5122-40d8-8856-115417cb6aba\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "HTTP_PORT",
                                        "value": "17071"
                                    },
                                    {
                                        "name": "SERVICE_NAME",
                                        "value": "modeloperator"
                                    },
                                    {
                                        "name": "SERVICE_NAMESPACE",
                                        "value": "controller-microk8s-localhost"
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "ports": [
                                    {
                                        "containerPort": 17071,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/model-fafa301c-5122-40d8-8856-115417cb6aba/template-agent.conf",
                                        "name": "modeloperator",
                                        "subPath": "template-agent.conf"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "modeloperator",
                        "serviceAccountName": "modeloperator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "modeloperator-agent.conf",
                                            "path": "template-agent.conf"
                                        }
                                    ],
                                    "name": "modeloperator"
                                },
                                "name": "modeloperator"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:33:37Z",
                "generation": 1,
                "labels": {
                    "model.juju.is/disable-webhook": "true",
                    "operator.juju.is/name": "modeloperator",
                    "operator.juju.is/target": "model",
                    "pod-template-hash": "5bfd6f98cc"
                },
                "name": "modeloperator-5bfd6f98cc",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "modeloperator",
                        "uid": "82e51be9-0e0e-422d-bfb5-e7e182e9ec85"
                    }
                ],
                "resourceVersion": "10975",
                "uid": "7dadb881-c2b7-43db-bb48-5c22e4a8559e"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "modeloperator",
                        "operator.juju.is/target": "model",
                        "pod-template-hash": "5bfd6f98cc"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "model.juju.is/disable-webhook": "true",
                            "operator.juju.is/name": "modeloperator",
                            "operator.juju.is/target": "model",
                            "pod-template-hash": "5bfd6f98cc"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud model --model-uuid=ac60be0f-c489-48e7-85ca-def37f3f6c70\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "HTTP_PORT",
                                        "value": "17071"
                                    },
                                    {
                                        "name": "SERVICE_NAME",
                                        "value": "modeloperator"
                                    },
                                    {
                                        "name": "SERVICE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "ports": [
                                    {
                                        "containerPort": 17071,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/model-ac60be0f-c489-48e7-85ca-def37f3f6c70/template-agent.conf",
                                        "name": "modeloperator",
                                        "subPath": "template-agent.conf"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "modeloperator",
                        "serviceAccountName": "modeloperator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "modeloperator-agent.conf",
                                            "path": "template-agent.conf"
                                        }
                                    ],
                                    "name": "modeloperator"
                                },
                                "name": "modeloperator"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2023-03-08T22:36:43Z",
                "generation": 1,
                "labels": {
                    "app": "istiod",
                    "install.operator.istio.io/owning-resource": "unknown",
                    "istio": "pilot",
                    "istio.io/rev": "default",
                    "operator.istio.io/component": "Pilot",
                    "pod-template-hash": "59877f896f",
                    "sidecar.istio.io/inject": "false"
                },
                "name": "istiod-59877f896f",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "istiod",
                        "uid": "d691a0a6-0652-42f4-b4dd-d2e98fa4c902"
                    }
                ],
                "resourceVersion": "12907",
                "uid": "3784a5fe-304f-4438-a22b-cd4aa0c3a8a5"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "istio": "pilot",
                        "pod-template-hash": "59877f896f"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/port": "15014",
                            "prometheus.io/scrape": "true",
                            "sidecar.istio.io/inject": "false"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "istiod",
                            "install.operator.istio.io/owning-resource": "unknown",
                            "istio": "pilot",
                            "istio.io/rev": "default",
                            "operator.istio.io/component": "Pilot",
                            "pod-template-hash": "59877f896f",
                            "sidecar.istio.io/inject": "false"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "discovery",
                                    "--monitoringAddr=:15014",
                                    "--log_output_level=default:info",
                                    "--domain",
                                    "cluster.local",
                                    "--keepaliveMaxServerConnectionAge",
                                    "30m"
                                ],
                                "env": [
                                    {
                                        "name": "REVISION",
                                        "value": "default"
                                    },
                                    {
                                        "name": "JWT_POLICY",
                                        "value": "third-party-jwt"
                                    },
                                    {
                                        "name": "PILOT_CERT_PROVIDER",
                                        "value": "istiod"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SERVICE_ACCOUNT",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.serviceAccountName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBECONFIG",
                                        "value": "/var/run/secrets/remote/config"
                                    },
                                    {
                                        "name": "ENABLE_LEGACY_FSGROUP_INJECTION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "PILOT_TRACE_SAMPLING",
                                        "value": "1"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIOD_ADDR",
                                        "value": "istiod.kubeflow.svc:15012"
                                    },
                                    {
                                        "name": "PILOT_ENABLE_ANALYSIS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_ID",
                                        "value": "Kubernetes"
                                    }
                                ],
                                "image": "docker.io/istio/pilot:1.11.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "discovery",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15010,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 15017,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsGroup": 1337,
                                    "runAsNonRoot": true,
                                    "runAsUser": 1337
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/run/secrets/tokens",
                                        "name": "istio-token",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/istio-dns",
                                        "name": "local-certs"
                                    },
                                    {
                                        "mountPath": "/etc/cacerts",
                                        "name": "cacerts",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/var/run/secrets/remote",
                                        "name": "istio-kubeconfig",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1337
                        },
                        "serviceAccount": "istiod",
                        "serviceAccountName": "istiod",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "local-certs"
                            },
                            {
                                "name": "istio-token",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "serviceAccountToken": {
                                                "audience": "istio-ca",
                                                "expirationSeconds": 43200,
                                                "path": "istio-token"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "cacerts",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "cacerts"
                                }
                            },
                            {
                                "name": "istio-kubeconfig",
                                "secret": {
                                    "defaultMode": 420,
                                    "optional": true,
                                    "secretName": "istio-kubeconfig"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "1758d21b",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:24Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "argo-server",
                    "pod-template-hash": "79fc644ff6"
                },
                "name": "argo-server-79fc644ff6",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-server",
                        "uid": "5ce6f65d-dda4-4e2b-9fad-0a3f0b4727a3"
                    }
                ],
                "resourceVersion": "13580",
                "uid": "b973aea7-c8cd-4563-b2fb-d8fb338415f6"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argo-server",
                        "pod-template-hash": "79fc644ff6"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "argo-server-",
                        "labels": {
                            "app.kubernetes.io/name": "argo-server",
                            "pod-template-hash": "79fc644ff6"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "server"
                                ],
                                "image": "registry.jujucharms.com/charm/hs4bjttgix7e2kf3188j168vjafe2mfmr8m16/oci-image@sha256:576d03880b4d608b00607902be8f52692e2b8d40f9fdc21992b65447a93614c2",
                                "imagePullPolicy": "Always",
                                "name": "argo-server",
                                "ports": [
                                    {
                                        "containerPort": 2746,
                                        "name": "web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 2746,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsNonRoot": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "argo-server-argo-server-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-server",
                        "serviceAccountName": "argo-server",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "tmp"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "de427014",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:56Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "jupyter-controller",
                    "pod-template-hash": "588bb5c767"
                },
                "name": "jupyter-controller-588bb5c767",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "jupyter-controller",
                        "uid": "6492eb55-9478-4c83-9c43-04ece2ff586f"
                    }
                ],
                "resourceVersion": "14151",
                "uid": "6dc875f5-f683-4552-a31c-ea423b4dbca6"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "jupyter-controller",
                        "pod-template-hash": "588bb5c767"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "jupyter-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "jupyter-controller",
                            "pod-template-hash": "588bb5c767"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./manager"
                                ],
                                "env": [
                                    {
                                        "name": "ENABLE_CULLING",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ISTIO_GATEWAY",
                                        "value": "kubeflow/kubeflow-gateway"
                                    },
                                    {
                                        "name": "USE_ISTIO",
                                        "value": "true"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/kaq3thscd44n4eitar0ng5vn41qku3s076d4l/oci-image@sha256:e05857e6f03e0b172521b91193ef0f4470b7c95799991b2eebf44500e630867d",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jupyter-controller",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "jupyter-controller-jupyter-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-controller",
                        "serviceAccountName": "jupyter-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "f10b8681",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:17Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "admission-webhook",
                    "pod-template-hash": "fc78958db"
                },
                "name": "admission-webhook-fc78958db",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "admission-webhook",
                        "uid": "ca54d4bd-734c-487b-b72f-df1d2c91ada5"
                    }
                ],
                "resourceVersion": "15305",
                "uid": "90cc9988-c116-4903-a841-a1a713593204"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "admission-webhook",
                        "pod-template-hash": "fc78958db"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "admission-webhook-",
                        "labels": {
                            "app.kubernetes.io/name": "admission-webhook",
                            "pod-template-hash": "fc78958db"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "registry.jujucharms.com/charm/ktca4ipxj5dyg5s0cl1o0j2hy426j99t2uged/oci-image@sha256:129fe9251569490b90d83643ff548a0bbf78b5ab802b0075848168a4bb7909b1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "admission-webhook",
                                "ports": [
                                    {
                                        "containerPort": 4443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/webhook/certs",
                                        "name": "admission-webhook-certs-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "admission-webhook-admission-webhook-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "admission-webhook",
                        "serviceAccountName": "admission-webhook",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "cert.pem",
                                            "path": "cert.pem"
                                        },
                                        {
                                            "key": "key.pem",
                                            "path": "key.pem"
                                        }
                                    ],
                                    "name": "admission-webhook-certs-config"
                                },
                                "name": "admission-webhook-certs-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "9659b668",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:23Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "jupyter-ui",
                    "pod-template-hash": "fd79d58b4"
                },
                "name": "jupyter-ui-fd79d58b4",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "jupyter-ui",
                        "uid": "69cadc6d-2990-4553-a6b8-c6c6261b35fc"
                    }
                ],
                "resourceVersion": "15970",
                "uid": "ed042a95-3ae0-466b-baae-601c060f83ba"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "jupyter-ui",
                        "pod-template-hash": "fd79d58b4"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "jupyter-ui-",
                        "labels": {
                            "app.kubernetes.io/name": "jupyter-ui",
                            "pod-template-hash": "fd79d58b4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/jupyter"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "False"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "CLUSTER_DOMAIN",
                                        "value": "cluster.local"
                                    },
                                    {
                                        "name": "UI",
                                        "value": "default"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/9lw7s63ewtlyew486jjn1ez4fe2mh813xni8f/oci-image@sha256:d55c600b690ec802b9bd159ea05d31b1efbc6a7f86f23051da6491f4421b5994",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jupyter-ui",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/config",
                                        "name": "jupyter-ui-config-config"
                                    },
                                    {
                                        "mountPath": "/src/apps/default/static/assets/logos",
                                        "name": "jupyter-ui-logos-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "jupyter-ui-jupyter-ui-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-ui",
                        "serviceAccountName": "jupyter-ui",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "spawner_ui_config.yaml",
                                            "path": "spawner_ui_config.yaml"
                                        }
                                    ],
                                    "name": "jupyter-ui-config-config"
                                },
                                "name": "jupyter-ui-config-config"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "jupyter-icon.svg",
                                            "path": "jupyter-icon.svg"
                                        },
                                        {
                                            "key": "jupyterlab-logo.svg",
                                            "path": "jupyterlab-logo.svg"
                                        },
                                        {
                                            "key": "group-two-icon.svg",
                                            "path": "group-two-icon.svg"
                                        },
                                        {
                                            "key": "group-two-logo.svg",
                                            "path": "group-two-logo.svg"
                                        },
                                        {
                                            "key": "group-one-icon.svg",
                                            "path": "group-one-icon.svg"
                                        },
                                        {
                                            "key": "group-one-logo.svg",
                                            "path": "group-one-logo.svg"
                                        }
                                    ],
                                    "name": "jupyter-ui-logos-config"
                                },
                                "name": "jupyter-ui-logos-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "85d58340",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:04Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "katib-db-manager",
                    "pod-template-hash": "5f9d778bc6"
                },
                "name": "katib-db-manager-5f9d778bc6",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "katib-db-manager",
                        "uid": "acb43d5e-f9f8-4a80-8109-7c7f760402c3"
                    }
                ],
                "resourceVersion": "21307",
                "uid": "1315ef8e-8935-4e43-888e-3090dfe2f6cf"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-db-manager",
                        "pod-template-hash": "5f9d778bc6"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-db-manager-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-db-manager",
                            "pod-template-hash": "5f9d778bc6"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "./katib-db-manager"
                                ],
                                "env": [
                                    {
                                        "name": "DB_NAME",
                                        "value": "mysql"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "root"
                                    },
                                    {
                                        "name": "DB_USER",
                                        "value": "root"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_DATABASE",
                                        "value": "katib"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_HOST",
                                        "value": "10.152.183.87"
                                    },
                                    {
                                        "name": "KATIB_MYSQL_DB_PORT",
                                        "value": "3306"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/5d9mqm3c0kne3mu523ca8oygc7bptv43ape2o/oci-image@sha256:16b33a553631ad7c71944a10181d03c844a6d95cfed8f104135febde3250c8c1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/grpc_health_probe",
                                            "-addr=:6789"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "katib-db-manager",
                                "ports": [
                                    {
                                        "containerPort": 6789,
                                        "name": "api",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-db-manager-katib-db-manager-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-db-manager",
                        "serviceAccountName": "katib-db-manager",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "43754f0d",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:19Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "katib-ui",
                    "pod-template-hash": "798b5c5fbf"
                },
                "name": "katib-ui-798b5c5fbf",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "katib-ui",
                        "uid": "b2d176ab-9c43-4bae-a974-20af1d00e76f"
                    }
                ],
                "resourceVersion": "23572",
                "uid": "c503db2d-60bf-45a2-af0d-bf32f869b573"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-ui",
                        "pod-template-hash": "798b5c5fbf"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-ui-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-ui",
                            "pod-template-hash": "798b5c5fbf"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--port=8080"
                                ],
                                "command": [
                                    "./katib-ui"
                                ],
                                "env": [
                                    {
                                        "name": "KATIB_CORE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/7856sw60z0qbmhucvxurviv23ddjs928qk5pv/oci-image@sha256:c7dc04a2fe88ca6e59c6e70c4f11e5d3fc90b2669f70d88e73f98bab27c12dd7",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "katib-ui",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-ui-katib-ui-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-ui",
                        "serviceAccountName": "katib-ui",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "275cc0e8",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-viz",
                    "pod-template-hash": "79475b58c4"
                },
                "name": "kfp-viz-79475b58c4",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-viz",
                        "uid": "acd24d0e-7c97-4c1b-b706-b18552bafb43"
                    }
                ],
                "resourceVersion": "29128",
                "uid": "dbc1306c-0877-47ce-99f3-9555d42a8012"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-viz",
                        "pod-template-hash": "79475b58c4"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-viz-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-viz",
                            "pod-template-hash": "79475b58c4"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "registry.jujucharms.com/charm/c2o31yht1y825t6n49mwko4wyel0rracnrjn5/oci-image@sha256:23ab9b96810e9871738fe4920905bf541cb7edb476f0d2d86d9bafe754413f3a",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "name": "ml-pipeline-visualizationserver",
                                "ports": [
                                    {
                                        "containerPort": 8888,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-viz-ml-pipeline-visualizationserver-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "af6239f4",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:12Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-viewer",
                    "pod-template-hash": "74866d586d"
                },
                "name": "kfp-viewer-74866d586d",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-viewer",
                        "uid": "e795f56c-65b4-4b51-88c2-48bee9722c09"
                    }
                ],
                "resourceVersion": "29933",
                "uid": "9da36a74-6914-426f-b222-2f9e0379b954"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-viewer",
                        "pod-template-hash": "74866d586d"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-viewer-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-viewer",
                            "pod-template-hash": "74866d586d"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "MAX_NUM_VIEWERS",
                                        "value": "50"
                                    },
                                    {
                                        "name": "MINIO_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/kk5db8k26h6fdltd2xcoudu3xsuslkihi4w18/oci-image@sha256:94754c058ada8a18e827788e1431433e65cc114b553597b7d1ddc3e51a554075",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-viewer-crd",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-viewer-ml-pipeline-viewer-crd-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-viewer",
                        "serviceAccountName": "kfp-viewer",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "8f3f3260",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:35Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-schedwf",
                    "pod-template-hash": "564b46946f"
                },
                "name": "kfp-schedwf-564b46946f",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-schedwf",
                        "uid": "5c7172af-9701-49d7-8afc-5e3314803690"
                    }
                ],
                "resourceVersion": "31053",
                "uid": "cec65505-8f61-4295-8415-b137ceff1ab4"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-schedwf",
                        "pod-template-hash": "564b46946f"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-schedwf-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-schedwf",
                            "pod-template-hash": "564b46946f"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "CRON_SCHEDULE_TIMEZONE",
                                        "value": "UTC"
                                    },
                                    {
                                        "name": "NAMESPACE"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/bmliwriin8zo1y7zzfcwxh51y1lmtn4i6llry/oci-image@sha256:9c9f710d6b5c27f95441ffa0c569cfcc78c494dc2b26bd3a547d5f0d47a15d72",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-scheduledworkflow",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-schedwf-ml-pipeline-scheduledworkflow-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-schedwf",
                        "serviceAccountName": "kfp-schedwf",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c362f871",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:39Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-profiles",
                    "pod-template-hash": "598c6fc44c"
                },
                "name": "kubeflow-profiles-598c6fc44c",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kubeflow-profiles",
                        "uid": "5b102a4c-a912-49d7-a972-879a0cdfd3ef"
                    }
                ],
                "resourceVersion": "31543",
                "uid": "01f769b2-d560-4e05-9e07-37c25bbe2036"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-profiles",
                        "pod-template-hash": "598c6fc44c"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kubeflow-profiles-",
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-profiles",
                            "pod-template-hash": "598c6fc44c"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "-userid-header",
                                    "kubeflow-userid",
                                    "-userid-prefix",
                                    "",
                                    "-workload-identity",
                                    ""
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/profile-image@sha256:cfd6935d3e330e6364a1be2a98947046b5181c0c9caa32fea4dcea9637c1af9e",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "kubeflow-profiles",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "manager",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/etc/profile-controller",
                                        "name": "namespace-labels-data"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "-cluster-admin",
                                    "admin",
                                    "-userid-header",
                                    "kubeflow-userid",
                                    "-userid-prefix",
                                    ""
                                ],
                                "command": [
                                    "/access-management"
                                ],
                                "image": "registry.jujucharms.com/charm/4jn95wlrsfo1po9wfuy1o9eysk6tfrp3f3uu8/kfam-image@sha256:71ba951d266874241bb69106e278e9a79c0b6a222bd093a669ad691a585a0dc7",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "kubeflow-kfam",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kubeflow-profiles-kubeflow-profiles-secret"
                            },
                            {
                                "name": "kubeflow-profiles-kubeflow-kfam-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-profiles",
                        "serviceAccountName": "kubeflow-profiles",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "namespace-labels.yaml",
                                            "path": "namespace-labels.yaml"
                                        }
                                    ],
                                    "name": "namespace-labels-data"
                                },
                                "name": "namespace-labels-data"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "7c328134",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kubeflow-volumes",
                    "pod-template-hash": "788467b484"
                },
                "name": "kubeflow-volumes-788467b484",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kubeflow-volumes",
                        "uid": "383ec647-2b8a-4765-a8e6-95efbfcdc452"
                    }
                ],
                "resourceVersion": "34843",
                "uid": "d5e6a77c-d81f-45b9-aedf-723f2b84550d"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-volumes",
                        "pod-template-hash": "788467b484"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kubeflow-volumes-",
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-volumes",
                            "pod-template-hash": "788467b484"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/volumes"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "false"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/6tvhkd5az86qo4m4zxeoqip1iejoxusiphggc/oci-image@sha256:fdb4a5d15596fe855f49dd63a835e04dc0e86578b282d8132bf7eee31fab7a3c",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "volumes-web-app",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kubeflow-volumes-volumes-web-app-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-volumes",
                        "serviceAccountName": "kubeflow-volumes",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "324ffe48",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:50Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "seldon-controller-manager",
                    "pod-template-hash": "556f44cf4c"
                },
                "name": "seldon-controller-manager-556f44cf4c",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "seldon-controller-manager",
                        "uid": "28a5b9ac-76dd-410a-8fc6-c8ad2f1abf32"
                    }
                ],
                "resourceVersion": "35034",
                "uid": "c263f4f9-213b-47e3-bf46-1b32a66c64f2"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "seldon-controller-manager",
                        "pod-template-hash": "556f44cf4c"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "seldon-controller-manager-",
                        "labels": {
                            "app.kubernetes.io/name": "seldon-controller-manager",
                            "pod-template-hash": "556f44cf4c"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--enable-leader-election",
                                    "--webhook-port",
                                    "4443",
                                    "--create-resources",
                                    "true"
                                ],
                                "command": [
                                    "/manager"
                                ],
                                "env": [
                                    {
                                        "name": "AMBASSADOR_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CONTROLLER_ID"
                                    },
                                    {
                                        "name": "DEFAULT_USER_ID",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_IMAGE_AND_VERSION",
                                        "value": "docker.io/seldonio/seldon-core-executor:1.14.0"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_SERVICE_ACCOUNT_NAME",
                                        "value": "default"
                                    },
                                    {
                                        "name": "EXECUTOR_CONTAINER_USER",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_CPU_LIMIT",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_CPU_REQUEST",
                                        "value": "0.5"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_MEMORY_LIMIT",
                                        "value": "512Mi"
                                    },
                                    {
                                        "name": "EXECUTOR_DEFAULT_MEMORY_REQUEST",
                                        "value": "512Mi"
                                    },
                                    {
                                        "name": "EXECUTOR_PROMETHEUS_PATH",
                                        "value": "/prometheus"
                                    },
                                    {
                                        "name": "EXECUTOR_REQUEST_LOGGER_DEFAULT_ENDPOINT",
                                        "value": "http://default-broker"
                                    },
                                    {
                                        "name": "EXECUTOR_SERVER_METRICS_PORT_NAME",
                                        "value": "metrics"
                                    },
                                    {
                                        "name": "EXECUTOR_SERVER_PORT",
                                        "value": "8000"
                                    },
                                    {
                                        "name": "ISTIO_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ISTIO_GATEWAY",
                                        "value": "istio-system/seldon-gateway"
                                    },
                                    {
                                        "name": "ISTIO_TLS_MODE"
                                    },
                                    {
                                        "name": "KEDA_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MANAGER_CREATE_RESOURCES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_DEFAULT_ENV_SECRET_REF_NAME"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_METRICS_PORT_NAME",
                                        "value": "metrics"
                                    },
                                    {
                                        "name": "PREDICTIVE_UNIT_SERVICE_PORT",
                                        "value": "9000"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_EXECUTOR"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_EXPLAINER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_MLFLOWSERVER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_MOCK_CLASSIFIER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_SKLEARNSERVER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_STORAGE_INITIALIZER"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_TENSORFLOW"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_TFPROXY"
                                    },
                                    {
                                        "name": "RELATED_IMAGE_XGBOOSTSERVER"
                                    },
                                    {
                                        "name": "USE_EXECUTOR",
                                        "value": "true"
                                    },
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/c5e3s519ko1quc9tqnysy92oeeqmgvwvhxvgf/oci-image@sha256:eb811b6b6fc62f3c41ec353cef15af7a59814afbbeb71cf619d9c58f7d9c2082",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "seldon-core",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 4443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp/operator-resources",
                                        "name": "seldon-controller-manager-operator-resources-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "seldon-controller-manager-seldon-core-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "seldon-controller-manager",
                        "serviceAccountName": "seldon-controller-manager",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "configmap.yaml",
                                            "path": "configmap.yaml"
                                        },
                                        {
                                            "key": "crd-v1.yaml",
                                            "path": "crd-v1.yaml"
                                        },
                                        {
                                            "key": "service.yaml",
                                            "path": "service.yaml"
                                        },
                                        {
                                            "key": "validate.yaml",
                                            "path": "validate.yaml"
                                        }
                                    ],
                                    "name": "seldon-controller-manager-operator-resources-config"
                                },
                                "name": "seldon-controller-manager-operator-resources-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "f2f53405",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:55Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "tensorboards-web-app",
                    "pod-template-hash": "54f98cc8cc"
                },
                "name": "tensorboards-web-app-54f98cc8cc",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "tensorboards-web-app",
                        "uid": "70a80036-27a7-40c8-9c9a-0372f551e1a3"
                    }
                ],
                "resourceVersion": "35251",
                "uid": "bb9d5af5-9426-4f93-9691-4e40bad1f4db"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "tensorboards-web-app",
                        "pod-template-hash": "54f98cc8cc"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "tensorboards-web-app-",
                        "labels": {
                            "app.kubernetes.io/name": "tensorboards-web-app",
                            "pod-template-hash": "54f98cc8cc"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "APP_PREFIX",
                                        "value": "/tensorboards"
                                    },
                                    {
                                        "name": "APP_SECURE_COOKIES",
                                        "value": "False"
                                    },
                                    {
                                        "name": "BACKEND_MODE",
                                        "value": "development"
                                    },
                                    {
                                        "name": "USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "USERID_PREFIX"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/degj4xf9nzft20x3gi4ucfjy0n3to6q2wzno8/oci-image@sha256:eef68a51bf9af0f69c91ef72e8d5716da3d5dee5f8f159e966ff3ba456568033",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "tensorboards-web-app",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "tensorboards-web-app-tensorboards-web-app-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tensorboards-web-app",
                        "serviceAccountName": "tensorboards-web-app",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "e46434d4",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:24Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-api",
                    "pod-template-hash": "6599f459"
                },
                "name": "kfp-api-6599f459",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-api",
                        "uid": "1d880369-f925-4e04-9e17-e8b33e6241d6"
                    }
                ],
                "resourceVersion": "36804",
                "uid": "48f2b92e-a353-4fd1-9802-30268863c127"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-api",
                        "pod-template-hash": "6599f459"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-api-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-api",
                            "pod-template-hash": "6599f459"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/6dmow0tt4o9ss0keyowwkifpww9nhegg6exlj/oci-image@sha256:bf747d5ca70ff123ec2b6150c91c0783e850039de6dad03c266004187e12d34b",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "name": "ml-pipeline-api-server",
                                "ports": [
                                    {
                                        "containerPort": 8888,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8887,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 2
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "startupProbe": {
                                    "exec": {
                                        "command": [
                                            "wget",
                                            "-q",
                                            "-S",
                                            "-O",
                                            "-",
                                            "http://localhost:8888/apis/v1beta1/healthz"
                                        ]
                                    },
                                    "failureThreshold": 12,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/config",
                                        "name": "kfp-api-config-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-api-ml-pipeline-api-server-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-api",
                        "serviceAccountName": "kfp-api",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config.json",
                                            "path": "config.json"
                                        },
                                        {
                                            "key": "sample_config.json",
                                            "path": "sample_config.json"
                                        }
                                    ],
                                    "name": "kfp-api-config-config"
                                },
                                "name": "kfp-api-config-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "545740a6",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:27Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-profile-controller",
                    "pod-template-hash": "7f546c77c6"
                },
                "name": "kfp-profile-controller-7f546c77c6",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-profile-controller",
                        "uid": "dea7d20a-f767-4424-a911-386c6065c9ab"
                    }
                ],
                "resourceVersion": "36932",
                "uid": "67186cac-0a2d-4afa-a4c7-99c9c75747d6"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-profile-controller",
                        "pod-template-hash": "7f546c77c6"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-profile-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-profile-controller",
                            "pod-template-hash": "7f546c77c6"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/hooks/sync.py"
                                ],
                                "command": [
                                    "python"
                                ],
                                "env": [
                                    {
                                        "name": "CONTROLLER_PORT",
                                        "value": "80"
                                    },
                                    {
                                        "name": "DISABLE_ISTIO_SIDECAR",
                                        "value": "false"
                                    },
                                    {
                                        "name": "KFP_DEFAULT_PIPELINE_ROOT"
                                    },
                                    {
                                        "name": "KFP_VERSION",
                                        "value": "2.0.0-alpha.3"
                                    },
                                    {
                                        "name": "METADATA_GRPC_SERVICE_HOST",
                                        "value": "mlmd.kubeflow"
                                    },
                                    {
                                        "name": "METADATA_GRPC_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "MINIO_HOST",
                                        "value": "minio"
                                    },
                                    {
                                        "name": "MINIO_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "MINIO_PORT",
                                        "value": "9000"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "kfp-profile-controller-minio-credentials"
                                        }
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/gm1axzm8pxqlan75l3a7znu2mv5bf0pm1wfar/oci-image@sha256:b4de8787873726d9a4b39f2166a30f2d3fc1b8e35079cf55c9aef72c5e841e6a",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kubeflow-pipelines-profile-controller",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/hooks",
                                        "name": "kubeflow-pipelines-profile-controller-code"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-profile-controller-kubeflow-pipelines-profile-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "sync.py",
                                            "path": "sync.py"
                                        }
                                    ],
                                    "name": "kubeflow-pipelines-profile-controller-code"
                                },
                                "name": "kubeflow-pipelines-profile-controller-code"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "1f78cb93",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:28Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "kfp-persistence",
                    "pod-template-hash": "7b6649cb68"
                },
                "name": "kfp-persistence-7b6649cb68",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "kfp-persistence",
                        "uid": "3f074ab9-6412-4c79-8104-8dfed555ae1f"
                    }
                ],
                "resourceVersion": "36984",
                "uid": "b766649c-c646-42df-9f77-7cf8bf456b24"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-persistence",
                        "pod-template-hash": "7b6649cb68"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "kfp-persistence-",
                        "labels": {
                            "app.kubernetes.io/name": "kfp-persistence",
                            "pod-template-hash": "7b6649cb68"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "persistence_agent",
                                    "--logtostderr=true",
                                    "--namespace=",
                                    "--ttlSecondsAfterWorkflowFinish=86400",
                                    "--numWorker=2",
                                    "--mlPipelineAPIServerName=kfp-api.kubeflow"
                                ],
                                "env": [
                                    {
                                        "name": "KUBEFLOW_USERID_HEADER",
                                        "value": "kubeflow-userid"
                                    },
                                    {
                                        "name": "KUBEFLOW_USERID_PREFIX"
                                    },
                                    {
                                        "name": "MULTIUSER",
                                        "value": "true"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/530iqpar7ey6vmhy5v19z5dnqywn1439aqet2/oci-image@sha256:abcf9710a699b35707ef472355519e5d044708ccbc8b5c8c4c06982d01901132",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "ml-pipeline-persistenceagent",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "kfp-persistence-ml-pipeline-persistenceagent-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-persistence",
                        "serviceAccountName": "kfp-persistence",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "68e2522b",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:44:30Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "argo-controller",
                    "pod-template-hash": "777758989"
                },
                "name": "argo-controller-777758989",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "argo-controller",
                        "uid": "4e633aee-9ee2-4baf-b6bc-5f0827e3fc73"
                    }
                ],
                "resourceVersion": "37113",
                "uid": "8b0345f4-7b5a-42ca-b8fa-385f0953769a"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "argo-controller",
                        "pod-template-hash": "777758989"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "argo-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "argo-controller",
                            "pod-template-hash": "777758989"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--configmap",
                                    "argo-controller-configmap-config",
                                    "--executor-image",
                                    "argoproj/argoexec:v3.3.8"
                                ],
                                "env": [
                                    {
                                        "name": "ARGO_NAMESPACE",
                                        "value": "kubeflow"
                                    },
                                    {
                                        "name": "LEADER_ELECTION_IDENTITY",
                                        "value": "argo-controller"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/evuh9usc9rqbwxwj0i9lkkjpzs1dwy053isqa/oci-image@sha256:669ebd548e4619d2a4ca03181302c4f19375890ec0fc688ccf7c4cff6bf5972f",
                                "imagePullPolicy": "Always",
                                "name": "argo-controller",
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/config-map.yaml",
                                        "name": "argo-controller-configmap-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "argo-controller-argo-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-controller",
                        "serviceAccountName": "argo-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config",
                                            "path": "config"
                                        }
                                    ],
                                    "name": "argo-controller-configmap-config"
                                },
                                "name": "argo-controller-configmap-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c520430a",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/name": "katib-controller",
                    "pod-template-hash": "c79cd5d6f"
                },
                "name": "katib-controller-c79cd5d6f",
                "namespace": "kubeflow",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "katib-controller",
                        "uid": "c94493d0-b590-4abd-a0fe-e290b750b891"
                    }
                ],
                "resourceVersion": "53245",
                "uid": "c34d93e3-deeb-47ff-b87f-25f8dd1efc04"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-controller",
                        "pod-template-hash": "c79cd5d6f"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "generateName": "katib-controller-",
                        "labels": {
                            "app.kubernetes.io/name": "katib-controller",
                            "pod-template-hash": "c79cd5d6f"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--webhook-port=443",
                                    "--trial-resources=Job.v1.batch",
                                    "--trial-resources=TFJob.v1.kubeflow.org",
                                    "--trial-resources=PyTorchJob.v1.kubeflow.org",
                                    "--trial-resources=MPIJob.v1.kubeflow.org",
                                    "--trial-resources=PipelineRun.v1beta1.tekton.dev"
                                ],
                                "command": [
                                    "./katib-controller"
                                ],
                                "env": [
                                    {
                                        "name": "KATIB_CORE_NAMESPACE",
                                        "value": "kubeflow"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/3fmkpe8hdk6uwmdvuga521r2z95vdr4xeilz9/oci-image@sha256:03d47fb974edbdd41b4a7b0cc704be48d6dd9fae0c9d6216c50d618d6c29f0ba",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "katib-controller",
                                "ports": [
                                    {
                                        "containerPort": 443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/tmp/cert",
                                        "name": "katib-controller-certs-config"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "katib-controller-katib-controller-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-controller",
                        "serviceAccountName": "katib-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        },
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        }
                                    ],
                                    "name": "katib-controller-certs-config"
                                },
                                "name": "katib-controller-certs-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1,
                "replicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "tempo",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:14Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "tempo",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "tempo",
                    "app.kubernetes.io/version": "2.0.1",
                    "helm.sh/chart": "tempo-1.0.2"
                },
                "name": "tempo",
                "namespace": "observability",
                "resourceVersion": "1740",
                "uid": "f0ff8490-e4d1-492d-8cae-4860d878202f"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "tempo",
                        "app.kubernetes.io/name": "tempo"
                    }
                },
                "serviceName": "tempo-headless",
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "732cd9bc667d78e220653de17bdf9db4993df57de3bc880c76e1c605ca354c32"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "tempo",
                            "app.kubernetes.io/name": "tempo"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-config.file=/conf/tempo.yaml",
                                    "-mem-ballast-size-mbs=1024"
                                ],
                                "image": "grafana/tempo:2.0.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "tempo",
                                "ports": [
                                    {
                                        "containerPort": 3100,
                                        "name": "prom-metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 6831,
                                        "name": "jaeger-thrift-c",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 6832,
                                        "name": "jaeger-thrift-b",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 14268,
                                        "name": "jaeger-thrift-h",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 14250,
                                        "name": "jaeger-grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9411,
                                        "name": "zipkin",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 55680,
                                        "name": "otlp-legacy",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 4317,
                                        "name": "otlp-grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 55681,
                                        "name": "otlp-http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 55678,
                                        "name": "opencensus",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "tempo-conf"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--query.base-path=/",
                                    "--grpc-storage-plugin.configuration-file=/conf/tempo-query.yaml"
                                ],
                                "image": "grafana/tempo-query:2.0.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "tempo-query",
                                "ports": [
                                    {
                                        "containerPort": 16686,
                                        "name": "jaeger-ui",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 16687,
                                        "name": "jaeger-metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/conf",
                                        "name": "tempo-query-conf"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tempo",
                        "serviceAccountName": "tempo",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "tempo-query"
                                },
                                "name": "tempo-query-conf"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "tempo"
                                },
                                "name": "tempo-conf"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "tempo-8cc964586",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "tempo-8cc964586",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability",
                    "prometheus-operator-input-hash": "5306741053990598729"
                },
                "creationTimestamp": "2023-03-08T22:02:19Z",
                "generation": 1,
                "labels": {
                    "app": "kube-prometheus-stack-alertmanager",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "release": "kube-prom-stack"
                },
                "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "monitoring.coreos.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Alertmanager",
                        "name": "kube-prom-stack-kube-prome-alertmanager",
                        "uid": "d996a560-67f8-43e3-b6c7-01ba9be05f14"
                    }
                ],
                "resourceVersion": "1776",
                "uid": "c06c73ea-72d8-4271-bbe3-41d3e0abd7ba"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "alertmanager": "kube-prom-stack-kube-prome-alertmanager",
                        "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-alertmanager",
                        "app.kubernetes.io/managed-by": "prometheus-operator",
                        "app.kubernetes.io/name": "alertmanager"
                    }
                },
                "serviceName": "alertmanager-operated",
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/default-container": "alertmanager"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "alertmanager": "kube-prom-stack-kube-prome-alertmanager",
                            "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-alertmanager",
                            "app.kubernetes.io/managed-by": "prometheus-operator",
                            "app.kubernetes.io/name": "alertmanager",
                            "app.kubernetes.io/version": "0.25.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--config.file=/etc/alertmanager/config_out/alertmanager.env.yaml",
                                    "--storage.path=/alertmanager",
                                    "--data.retention=120h",
                                    "--cluster.listen-address=",
                                    "--web.listen-address=:9093",
                                    "--web.external-url=http://kube-prom-stack-kube-prome-alertmanager.observability:9093",
                                    "--web.route-prefix=/",
                                    "--cluster.peer=alertmanager-kube-prom-stack-kube-prome-alertmanager-0.alertmanager-operated:9094",
                                    "--cluster.reconnect-timeout=5m",
                                    "--web.config.file=/etc/alertmanager/web_config/web-config.yaml"
                                ],
                                "env": [
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/prometheus/alertmanager:v0.25.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "path": "/-/healthy",
                                        "port": "http-web",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "name": "alertmanager",
                                "ports": [
                                    {
                                        "containerPort": 9093,
                                        "name": "http-web",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "mesh-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9094,
                                        "name": "mesh-udp",
                                        "protocol": "UDP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 10,
                                    "httpGet": {
                                        "path": "/-/ready",
                                        "port": "http-web",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "requests": {
                                        "memory": "200Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/alertmanager/config",
                                        "name": "config-volume"
                                    },
                                    {
                                        "mountPath": "/etc/alertmanager/config_out",
                                        "name": "config-out",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/alertmanager/certs",
                                        "name": "tls-assets",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/alertmanager",
                                        "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-db"
                                    },
                                    {
                                        "mountPath": "/etc/alertmanager/web_config/web-config.yaml",
                                        "name": "web-config",
                                        "readOnly": true,
                                        "subPath": "web-config.yaml"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--listen-address=:8080",
                                    "--reload-url=http://127.0.0.1:9093/-/reload",
                                    "--config-file=/etc/alertmanager/config/alertmanager.yaml.gz",
                                    "--config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml"
                                ],
                                "command": [
                                    "/bin/prometheus-config-reloader"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SHARD",
                                        "value": "-1"
                                    }
                                ],
                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "config-reloader",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "reloader-web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/alertmanager/config",
                                        "name": "config-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/alertmanager/config_out",
                                        "name": "config-out"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 2000,
                            "runAsGroup": 2000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "serviceAccount": "kube-prom-stack-kube-prome-alertmanager",
                        "serviceAccountName": "kube-prom-stack-kube-prome-alertmanager",
                        "terminationGracePeriodSeconds": 120,
                        "volumes": [
                            {
                                "name": "config-volume",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "alertmanager-kube-prom-stack-kube-prome-alertmanager-generated"
                                }
                            },
                            {
                                "name": "tls-assets",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "secret": {
                                                "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-tls-assets-0"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "config-out"
                            },
                            {
                                "name": "web-config",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "alertmanager-kube-prom-stack-kube-prome-alertmanager-web-config"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "alertmanager-kube-prom-stack-kube-prome-alertmanager-db"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "alertmanager-kube-prom-stack-kube-prome-alertmanager-5446cbcc6c",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "alertmanager-kube-prom-stack-kube-prome-alertmanager-5446cbcc6c",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "kube-prom-stack",
                    "meta.helm.sh/release-namespace": "observability",
                    "prometheus-operator-input-hash": "8930153539987759368"
                },
                "creationTimestamp": "2023-03-08T22:02:19Z",
                "generation": 1,
                "labels": {
                    "app": "kube-prometheus-stack-prometheus",
                    "app.kubernetes.io/instance": "kube-prom-stack",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/part-of": "kube-prometheus-stack",
                    "app.kubernetes.io/version": "45.7.1",
                    "chart": "kube-prometheus-stack-45.7.1",
                    "heritage": "Helm",
                    "operator.prometheus.io/name": "kube-prom-stack-kube-prome-prometheus",
                    "operator.prometheus.io/shard": "0",
                    "release": "kube-prom-stack"
                },
                "name": "prometheus-kube-prom-stack-kube-prome-prometheus",
                "namespace": "observability",
                "ownerReferences": [
                    {
                        "apiVersion": "monitoring.coreos.com/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Prometheus",
                        "name": "kube-prom-stack-kube-prome-prometheus",
                        "uid": "5389b090-face-4d81-969d-d70a0a667740"
                    }
                ],
                "resourceVersion": "1837",
                "uid": "2d0456f4-7ee2-46b7-a11b-10c53edadc0f"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-prometheus",
                        "app.kubernetes.io/managed-by": "prometheus-operator",
                        "app.kubernetes.io/name": "prometheus",
                        "operator.prometheus.io/name": "kube-prom-stack-kube-prome-prometheus",
                        "operator.prometheus.io/shard": "0",
                        "prometheus": "kube-prom-stack-kube-prome-prometheus"
                    }
                },
                "serviceName": "prometheus-operated",
                "template": {
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/default-container": "prometheus"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "kube-prom-stack-kube-prome-prometheus",
                            "app.kubernetes.io/managed-by": "prometheus-operator",
                            "app.kubernetes.io/name": "prometheus",
                            "app.kubernetes.io/version": "2.42.0",
                            "operator.prometheus.io/name": "kube-prom-stack-kube-prome-prometheus",
                            "operator.prometheus.io/shard": "0",
                            "prometheus": "kube-prom-stack-kube-prome-prometheus"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "--web.console.templates=/etc/prometheus/consoles",
                                    "--web.console.libraries=/etc/prometheus/console_libraries",
                                    "--storage.tsdb.retention.time=10d",
                                    "--config.file=/etc/prometheus/config_out/prometheus.env.yaml",
                                    "--storage.tsdb.path=/prometheus",
                                    "--web.enable-lifecycle",
                                    "--web.external-url=http://kube-prom-stack-kube-prome-prometheus.observability:9090",
                                    "--web.route-prefix=/",
                                    "--storage.tsdb.wal-compression",
                                    "--web.config.file=/etc/prometheus/web_config/web-config.yaml"
                                ],
                                "image": "quay.io/prometheus/prometheus:v2.42.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 6,
                                    "httpGet": {
                                        "path": "/-/healthy",
                                        "port": "http-web",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "name": "prometheus",
                                "ports": [
                                    {
                                        "containerPort": 9090,
                                        "name": "http-web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/-/ready",
                                        "port": "http-web",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "startupProbe": {
                                    "failureThreshold": 60,
                                    "httpGet": {
                                        "path": "/-/ready",
                                        "port": "http-web",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/prometheus/config_out",
                                        "name": "config-out",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/certs",
                                        "name": "tls-assets",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/prometheus",
                                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-db"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/web_config/web-config.yaml",
                                        "name": "web-config",
                                        "readOnly": true,
                                        "subPath": "web-config.yaml"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--listen-address=:8080",
                                    "--reload-url=http://127.0.0.1:9090/-/reload",
                                    "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                                    "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                                    "--watched-dir=/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                ],
                                "command": [
                                    "/bin/prometheus-config-reloader"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SHARD",
                                        "value": "0"
                                    }
                                ],
                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "config-reloader",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "reloader-web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/prometheus/config",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/config_out",
                                        "name": "config-out"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "--watch-interval=0",
                                    "--listen-address=:8080",
                                    "--config-file=/etc/prometheus/config/prometheus.yaml.gz",
                                    "--config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml",
                                    "--watched-dir=/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                ],
                                "command": [
                                    "/bin/prometheus-config-reloader"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SHARD",
                                        "value": "0"
                                    }
                                ],
                                "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "init-config-reloader",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "reloader-web",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "50Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/prometheus/config",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/config_out",
                                        "name": "config-out"
                                    },
                                    {
                                        "mountPath": "/etc/prometheus/rules/prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0",
                                        "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 2000,
                            "runAsGroup": 2000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "serviceAccount": "kube-prom-stack-kube-prome-prometheus",
                        "serviceAccountName": "kube-prom-stack-kube-prome-prometheus",
                        "terminationGracePeriodSeconds": 600,
                        "volumes": [
                            {
                                "name": "config",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "prometheus-kube-prom-stack-kube-prome-prometheus"
                                }
                            },
                            {
                                "name": "tls-assets",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "secret": {
                                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-tls-assets-0"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "emptyDir": {
                                    "medium": "Memory"
                                },
                                "name": "config-out"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                                },
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-rulefiles-0"
                            },
                            {
                                "name": "web-config",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "prometheus-kube-prom-stack-kube-prome-prometheus-web-config"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "prometheus-kube-prom-stack-kube-prome-prometheus-db"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "prometheus-kube-prom-stack-kube-prome-prometheus-5cf8688487",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "prometheus-kube-prom-stack-kube-prome-prometheus-5cf8688487",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "loki",
                    "meta.helm.sh/release-namespace": "observability"
                },
                "creationTimestamp": "2023-03-08T22:02:12Z",
                "generation": 1,
                "labels": {
                    "app": "loki",
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "loki-2.16.0",
                    "heritage": "Helm",
                    "release": "loki"
                },
                "name": "loki",
                "namespace": "observability",
                "resourceVersion": "2007",
                "uid": "90d8db80-5b14-4c75-b37a-2ed25b42375d"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "loki",
                        "release": "loki"
                    }
                },
                "serviceName": "loki-headless",
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "8513c6dec898b2da52aae0a2d13648bfac3d3b2b459d63734e38aa1503dae05c",
                            "prometheus.io/port": "http-metrics",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "loki",
                            "name": "loki",
                            "release": "loki"
                        }
                    },
                    "spec": {
                        "affinity": {},
                        "containers": [
                            {
                                "args": [
                                    "-config.file=/etc/loki/loki.yaml"
                                ],
                                "image": "grafana/loki:2.6.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "http-metrics",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 45,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "loki",
                                "ports": [
                                    {
                                        "containerPort": 3100,
                                        "name": "http-metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9095,
                                        "name": "grpc",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 7946,
                                        "name": "memberlist-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": "http-metrics",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 45,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp",
                                        "name": "tmp"
                                    },
                                    {
                                        "mountPath": "/etc/loki",
                                        "name": "config"
                                    },
                                    {
                                        "mountPath": "/data",
                                        "name": "storage"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 10001,
                            "runAsGroup": 10001,
                            "runAsNonRoot": true,
                            "runAsUser": 10001
                        },
                        "serviceAccount": "loki",
                        "serviceAccountName": "loki",
                        "terminationGracePeriodSeconds": 4800,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "tmp"
                            },
                            {
                                "name": "config",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "loki"
                                }
                            },
                            {
                                "emptyDir": {},
                                "name": "storage"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "loki-655c6d66f4",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "loki-655c6d66f4",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "argo-cd",
                    "meta.helm.sh/release-namespace": "argocd"
                },
                "creationTimestamp": "2023-03-08T22:09:38Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "application-controller",
                    "app.kubernetes.io/instance": "argo-cd",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "argocd-application-controller",
                    "app.kubernetes.io/part-of": "argocd",
                    "app.kubernetes.io/version": "v2.3.4",
                    "helm.sh/chart": "argo-cd-4.6.3"
                },
                "name": "argo-cd-argocd-application-controller",
                "namespace": "argocd",
                "resourceVersion": "2798",
                "uid": "ae35f9d4-5519-4761-956f-bbd93d585937"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 5,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "argo-cd",
                        "app.kubernetes.io/name": "argocd-application-controller"
                    }
                },
                "serviceName": "argo-cd-argocd-application-controller",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "application-controller",
                            "app.kubernetes.io/instance": "argo-cd",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "argocd-application-controller",
                            "app.kubernetes.io/part-of": "argocd",
                            "app.kubernetes.io/version": "v2.3.4",
                            "helm.sh/chart": "argo-cd-4.6.3"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "argocd-application-controller",
                                    "--status-processors",
                                    "20",
                                    "--operation-processors",
                                    "10",
                                    "--app-resync",
                                    "180",
                                    "--self-heal-timeout-seconds",
                                    "5",
                                    "--repo-server",
                                    "argo-cd-argocd-repo-server:8081",
                                    "--repo-server-timeout-seconds",
                                    "60",
                                    "--logformat",
                                    "text",
                                    "--loglevel",
                                    "info",
                                    "--redis",
                                    "argo-cd-argocd-redis:6379"
                                ],
                                "image": "quay.io/argoproj/argocd:v2.3.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "application-controller",
                                "ports": [
                                    {
                                        "containerPort": 8082,
                                        "name": "controller",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 8082
                                    },
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/home/argocd",
                                        "name": "argocd-home"
                                    },
                                    {
                                        "mountPath": "/app/config/controller/tls",
                                        "name": "argocd-repo-server-tls"
                                    }
                                ],
                                "workingDir": "/home/argocd"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argocd-application-controller",
                        "serviceAccountName": "argocd-application-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "argocd-home"
                            },
                            {
                                "name": "argocd-repo-server-tls",
                                "secret": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tls.crt",
                                            "path": "tls.crt"
                                        },
                                        {
                                            "key": "tls.key",
                                            "path": "tls.key"
                                        },
                                        {
                                            "key": "ca.crt",
                                            "path": "ca.crt"
                                        }
                                    ],
                                    "optional": true,
                                    "secretName": "argocd-repo-server-tls"
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "argo-cd-argocd-application-controller-764bf84f77",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "argo-cd-argocd-application-controller-764bf84f77",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "cstor-3.3.0",
                    "component": "openebs-cstor-csi-controller",
                    "heritage": "Helm",
                    "name": "openebs-cstor-csi-controller",
                    "openebs.io/component-name": "openebs-cstor-csi-controller",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-cstor-csi-controller",
                "namespace": "openebs",
                "resourceVersion": "6210",
                "uid": "a41a2a65-1d2a-4107-8146-97289355a33f"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "openebs-cstor-csi-controller",
                        "name": "openebs-cstor-csi-controller",
                        "release": "openebs"
                    }
                },
                "serviceName": "openebs-csi",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "cstor-3.3.0",
                            "component": "openebs-cstor-csi-controller",
                            "heritage": "Helm",
                            "name": "openebs-cstor-csi-controller",
                            "openebs.io/component-name": "openebs-cstor-csi-controller",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)",
                                    "--leader-election"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-resizer",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--csi-address=$(ADDRESS)"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-snapshotter",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--v=5",
                                    "--leader-election=false"
                                ],
                                "image": "k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "snapshot-controller",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            },
                            {
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--v=5",
                                    "--feature-gates=Topology=true",
                                    "--extra-create-metadata=true",
                                    "--metrics-address=:22011",
                                    "--timeout=250s",
                                    "--default-fstype=ext4"
                                ],
                                "env": [
                                    {
                                        "name": "MY_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-attacher",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--endpoint=$(OPENEBS_CSI_ENDPOINT)",
                                    "--url=$(OPENEBS_CSI_API_URL)",
                                    "--plugin=$(OPENEBS_CONTROLLER_DRIVER)"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_CONTROLLER_DRIVER",
                                        "value": "controller"
                                    },
                                    {
                                        "name": "OPENEBS_CSI_ENDPOINT",
                                        "value": "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                                    },
                                    {
                                        "name": "OPENEBS_CSI_API_URL",
                                        "value": "https://openebs.io"
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_INSTALLER_TYPE",
                                        "value": "cstor-helm"
                                    },
                                    {
                                        "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/cstor-csi-driver:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cstor-csi-plugin",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "openebs-cstor-csi-controller-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-cstor-csi-controller-sa",
                        "serviceAccountName": "openebs-cstor-csi-controller-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "socket-dir"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "openebs-cstor-csi-controller-569b775c89",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "openebs-cstor-csi-controller-569b775c89",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "openebs",
                    "meta.helm.sh/release-namespace": "openebs"
                },
                "creationTimestamp": "2023-03-08T22:18:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "chart": "jiva-3.3.0",
                    "component": "openebs-jiva-csi-controller",
                    "heritage": "Helm",
                    "name": "openebs-jiva-csi-controller",
                    "openebs.io/component-name": "openebs-jiva-csi-controller",
                    "openebs.io/version": "3.3.0",
                    "release": "openebs"
                },
                "name": "openebs-jiva-csi-controller",
                "namespace": "openebs",
                "resourceVersion": "6212",
                "uid": "0afcd66f-b028-4516-a7e5-5728909ca528"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "component": "openebs-jiva-csi-controller",
                        "name": "openebs-jiva-csi-controller",
                        "release": "openebs"
                    }
                },
                "serviceName": "openebs-csi",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "chart": "jiva-3.3.0",
                            "component": "openebs-jiva-csi-controller",
                            "heritage": "Helm",
                            "name": "openebs-jiva-csi-controller",
                            "openebs.io/component-name": "openebs-jiva-csi-controller",
                            "openebs.io/version": "3.3.0",
                            "release": "openebs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)",
                                    "--leader-election"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-resizer:v1.2.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-resizer",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--v=5",
                                    "--feature-gates=Topology=true",
                                    "--extra-create-metadata=true",
                                    "--metrics-address=:22011",
                                    "--timeout=250s",
                                    "--default-fstype=ext4"
                                ],
                                "env": [
                                    {
                                        "name": "MY_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-provisioner:v3.0.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-provisioner",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--v=5",
                                    "--csi-address=$(ADDRESS)"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/var/lib/csi/sockets/pluginproxy/csi.sock"
                                    }
                                ],
                                "image": "k8s.gcr.io/sig-storage/csi-attacher:v3.1.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "csi-attacher",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--endpoint=$(OPENEBS_JIVA_CSI_ENDPOINT)",
                                    "--plugin=$(OPENEBS_JIVA_CSI_CONTROLLER)",
                                    "--name=jiva.csi.openebs.io",
                                    "--nodeid=$(OPENEBS_NODEID)"
                                ],
                                "env": [
                                    {
                                        "name": "OPENEBS_JIVA_CSI_CONTROLLER",
                                        "value": "controller"
                                    },
                                    {
                                        "name": "OPENEBS_JIVA_CSI_ENDPOINT",
                                        "value": "unix:///var/lib/csi/sockets/pluginproxy/csi.sock"
                                    },
                                    {
                                        "name": "OPENEBS_CSI_API_URL",
                                        "value": "https://openebs.io"
                                    },
                                    {
                                        "name": "OPENEBS_NODEID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPENEBS_IO_INSTALLER_TYPE",
                                        "value": "jiva-helm"
                                    },
                                    {
                                        "name": "OPENEBS_IO_ENABLE_ANALYTICS",
                                        "value": "true"
                                    }
                                ],
                                "image": "openebs/jiva-csi:3.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jiva-csi-plugin",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/csi/sockets/pluginproxy/",
                                        "name": "socket-dir"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--csi-address=/csi/csi.sock"
                                ],
                                "image": "k8s.gcr.io/sig-storage/livenessprobe:v2.3.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "liveness-probe",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/csi",
                                        "name": "socket-dir"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "priorityClassName": "openebs-jiva-csi-controller-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "openebs-jiva-csi-controller-sa",
                        "serviceAccountName": "openebs-jiva-csi-controller-sa",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "socket-dir"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "openebs-jiva-csi-controller-945f88576",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "openebs-jiva-csi-controller-945f88576",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b"
                },
                "creationTimestamp": "2023-03-08T22:24:06Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "controller",
                    "model.juju.is/disable-webhook": "true"
                },
                "name": "controller",
                "namespace": "controller-microk8s-localhost",
                "resourceVersion": "8317",
                "uid": "54a78c4a-3fde-4e04-8f0d-e68d35de2d19"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "controller"
                    }
                },
                "serviceName": "controller-service",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "controller",
                            "model.juju.is/disable-webhook": "true"
                        },
                        "name": "controller-0",
                        "namespace": "controller-microk8s-localhost"
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "printf 'args=\"--dbpath=/var/lib/juju/db --sslPEMKeyFile=/var/lib/juju/server.pem --sslPEMKeyPassword=ignored --sslMode=requireSSL --port=37017 --journal --replSet=juju --quiet --oplogSize=1024 --auth --keyFile=/var/lib/juju/shared-secret --storageEngine=wiredTiger --bind_ip_all\"\\nipv6Disabled=$(sysctl net.ipv6.conf.all.disable_ipv6 -n)\\nif [ $ipv6Disabled -eq 0 ]; then\\n  args=\"${args} --ipv6\"\\nfi\\nexec mongod ${args}\\n'\u003e/root/mongo.sh \u0026\u0026 chmod a+x /root/mongo.sh \u0026\u0026 /root/mongo.sh"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/juju-db:4.4",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "mongo",
                                            "--port=37017",
                                            "--ssl",
                                            "--sslAllowInvalidHostnames",
                                            "--sslAllowInvalidCertificates",
                                            "--sslPEMKeyFile=/var/lib/juju/server.pem",
                                            "--eval",
                                            "db.adminCommand('ping')"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "mongodb",
                                "ports": [
                                    {
                                        "containerPort": 37017,
                                        "name": "mongodb",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "mongo",
                                            "--port=37017",
                                            "--ssl",
                                            "--sslAllowInvalidHostnames",
                                            "--sslAllowInvalidCertificates",
                                            "--sslPEMKeyFile=/var/lib/juju/server.pem",
                                            "--eval",
                                            "db.adminCommand('ping')"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "1536Mi"
                                    },
                                    "requests": {
                                        "memory": "1536Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "storage"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/db",
                                        "name": "storage",
                                        "subPath": "db"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/template-server.pem",
                                        "name": "controller-server-pem",
                                        "readOnly": true,
                                        "subPath": "template-server.pem"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/shared-secret",
                                        "name": "controller-shared-secret",
                                        "readOnly": true,
                                        "subPath": "shared-secret"
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\necho Installing Dashboard...\nexport gui='/var/lib/juju/gui'\nmkdir -p $gui\ncurl -sSf -o $gui/gui.tar.bz2 --retry 10 --noproxy 127.0.0.1,localhost,::1 'https://streams.canonical.com/juju/gui/gui/0.8.1/juju-dashboard-0.8.1.tar.bz2' || echo Unable to retrieve Juju Dashboard\n[ -f $gui/gui.tar.bz2 ] \u0026\u0026 sha256sum $gui/gui.tar.bz2 \u003e $gui/jujugui.sha256\n[ -f $gui/jujugui.sha256 ] \u0026\u0026 (grep '925d99bcc83bb9accc88df729d12e5c83a07ece73a94f936fbbae959184ac12d' $gui/jujugui.sha256 \u0026\u0026 printf %s '{\"version\":\"0.8.1\",\"url\":\"https://streams.canonical.com/juju/gui/gui/0.8.1/juju-dashboard-0.8.1.tar.bz2\",\"sha256\":\"925d99bcc83bb9accc88df729d12e5c83a07ece73a94f936fbbae959184ac12d\",\"size\":1799966}' \u003e $gui/downloaded-gui.txt || echo Juju GUI checksum mismatch)\ntest -e $JUJU_DATA_DIR/agents/controller-0/agent.conf || $JUJU_TOOLS_DIR/jujud bootstrap-state $JUJU_DATA_DIR/bootstrap-params --data-dir $JUJU_DATA_DIR --show-log --timeout 20m0s\n$JUJU_TOOLS_DIR/jujud machine --data-dir $JUJU_DATA_DIR --controller-id 0 --log-to-stderr --show-log\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "api-server",
                                "resources": {
                                    "limits": {
                                        "memory": "1536Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "storage"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/controller-0/template-agent.conf",
                                        "name": "controller-agent-conf",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/template-server.pem",
                                        "name": "controller-server-pem",
                                        "readOnly": true,
                                        "subPath": "template-server.pem"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/shared-secret",
                                        "name": "controller-shared-secret",
                                        "readOnly": true,
                                        "subPath": "shared-secret"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/bootstrap-params",
                                        "name": "controller-bootstrap-params",
                                        "readOnly": true,
                                        "subPath": "bootstrap-params"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "controller",
                        "serviceAccountName": "controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "controller-server-pem",
                                "secret": {
                                    "defaultMode": 256,
                                    "items": [
                                        {
                                            "key": "server.pem",
                                            "path": "template-server.pem"
                                        }
                                    ],
                                    "secretName": "controller-secret"
                                }
                            },
                            {
                                "name": "controller-shared-secret",
                                "secret": {
                                    "defaultMode": 256,
                                    "items": [
                                        {
                                            "key": "shared-secret",
                                            "path": "shared-secret"
                                        }
                                    ],
                                    "secretName": "controller-secret"
                                }
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "agent.conf",
                                            "path": "template-agent.conf"
                                        }
                                    ],
                                    "name": "controller-configmap"
                                },
                                "name": "controller-agent-conf"
                            },
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "bootstrap-params",
                                            "path": "bootstrap-params"
                                        }
                                    ],
                                    "name": "controller-configmap"
                                },
                                "name": "controller-bootstrap-params"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/managed-by": "juju",
                                "app.kubernetes.io/name": "controller"
                            },
                            "name": "storage"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "20Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "controller-5c48d7455d",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "controller-5c48d7455d",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:24Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "admission-webhook",
                    "operator.juju.is/target": "application"
                },
                "name": "admission-webhook-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11507",
                "uid": "26367df5-7622-47e8-a5e5-2bfff6ea019c"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "admission-webhook",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "admission-webhook",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=admission-webhook --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "admission-webhook"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.167"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-admission-webhook/template-agent.conf",
                                        "name": "admission-webhook-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-admission-webhook/operator.yaml",
                                        "name": "admission-webhook-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "admission-webhook-operator",
                        "serviceAccountName": "admission-webhook-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "admission-webhook-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "admission-webhook-operator-config"
                                },
                                "name": "admission-webhook-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "admission-webhook-operator-7d8ccfb65d",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "admission-webhook-operator-7d8ccfb65d",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:29Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "argo-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "argo-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11554",
                "uid": "560e1391-29f0-4c41-99b2-ba531d7f8fe5"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "argo-controller",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "argo-controller",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=argo-controller --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "argo-controller"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.164"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-argo-controller/template-agent.conf",
                                        "name": "argo-controller-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-argo-controller/operator.yaml",
                                        "name": "argo-controller-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-controller-operator",
                        "serviceAccountName": "argo-controller-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "argo-controller-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "argo-controller-operator-config"
                                },
                                "name": "argo-controller-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "argo-controller-operator-545dd57989",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "argo-controller-operator-545dd57989",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:35Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "argo-server",
                    "operator.juju.is/target": "application"
                },
                "name": "argo-server-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11610",
                "uid": "a18de8b9-592a-467a-a271-4600435d81a7"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "argo-server",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "argo-server",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=argo-server --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "argo-server"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.119"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-argo-server/template-agent.conf",
                                        "name": "argo-server-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-argo-server/operator.yaml",
                                        "name": "argo-server-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "argo-server-operator",
                        "serviceAccountName": "argo-server-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "argo-server-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "argo-server-operator-config"
                                },
                                "name": "argo-server-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "argo-server-operator-774b5b8c6c",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "argo-server-operator-774b5b8c6c",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c96bb20b",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:04Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-pilot"
                },
                "name": "istio-pilot",
                "namespace": "kubeflow",
                "resourceVersion": "11851",
                "uid": "7d708f2b-e9f1-47bb-94fb-1a85da49ea01"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "istio-pilot"
                    }
                },
                "serviceName": "istio-pilot-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "istio-pilot"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "istio-pilot-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "istio-pilot",
                        "serviceAccountName": "istio-pilot",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "istio-pilot-b457f76d7",
                "observedGeneration": 1,
                "replicas": 1,
                "updateRevision": "istio-pilot-b457f76d7",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:05Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "jupyter-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "jupyter-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "11895",
                "uid": "172226ff-bf22-4996-ba07-72b0a3cf9cdb"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "jupyter-controller",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "jupyter-controller",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=jupyter-controller --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "jupyter-controller"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.245"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-jupyter-controller/template-agent.conf",
                                        "name": "jupyter-controller-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-jupyter-controller/operator.yaml",
                                        "name": "jupyter-controller-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-controller-operator",
                        "serviceAccountName": "jupyter-controller-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "jupyter-controller-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "jupyter-controller-operator-config"
                                },
                                "name": "jupyter-controller-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "jupyter-controller-operator-9b4db87c9",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "jupyter-controller-operator-9b4db87c9",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:25Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "jupyter-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "jupyter-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "12086",
                "uid": "59d078dc-8cc2-4e49-9bd7-9c06e28b0b5b"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "jupyter-ui",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "jupyter-ui",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=jupyter-ui --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "jupyter-ui"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.197"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-jupyter-ui/template-agent.conf",
                                        "name": "jupyter-ui-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-jupyter-ui/operator.yaml",
                                        "name": "jupyter-ui-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jupyter-ui-operator",
                        "serviceAccountName": "jupyter-ui-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "jupyter-ui-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "jupyter-ui-operator-config"
                                },
                                "name": "jupyter-ui-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "jupyter-ui-operator-7cc7c6d477",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "jupyter-ui-operator-7cc7c6d477",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "4a3877ab",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:51Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "istio-ingressgateway"
                },
                "name": "istio-ingressgateway",
                "namespace": "kubeflow",
                "resourceVersion": "12184",
                "uid": "393154c5-de06-4c72-a05e-b0a38fb63dd8"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "istio-ingressgateway"
                    }
                },
                "serviceName": "istio-ingressgateway-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "istio-ingressgateway"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "istio-ingressgateway-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "istio-ingressgateway",
                        "serviceAccountName": "istio-ingressgateway",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "istio-ingressgateway-7c69f5bbb9",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "istio-ingressgateway-7c69f5bbb9",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:36:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "12333",
                "uid": "67fca3e5-b4dd-4b04-a4a6-366c25ef3bb3"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "katib-controller",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "katib-controller",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-controller --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "katib-controller"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.88"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-controller/template-agent.conf",
                                        "name": "katib-controller-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-controller/operator.yaml",
                                        "name": "katib-controller-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-controller-operator",
                        "serviceAccountName": "katib-controller-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "katib-controller-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "katib-controller-operator-config"
                                },
                                "name": "katib-controller-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "katib-controller-operator-85668d55fb",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "katib-controller-operator-85668d55fb",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "0443ed3e",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:35:40Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "dex-auth"
                },
                "name": "dex-auth",
                "namespace": "kubeflow",
                "resourceVersion": "12355",
                "uid": "0df7f280-13f8-486a-bc9d-f138d3fabf09"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "dex-auth"
                    }
                },
                "serviceName": "dex-auth-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "dex-auth"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES",
                                        "value": "dex"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            },
                            {
                                "args": [
                                    "run",
                                    "--create-dirs",
                                    "--hold",
                                    "--http",
                                    ":38813",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAME",
                                        "value": "dex"
                                    },
                                    {
                                        "name": "PEBBLE_SOCKET",
                                        "value": "/charm/container/pebble.socket"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/ifcdyx9vak68zhfu0neisg91lfpdfxz2qmx41/oci-image@sha256:6c3ff86f1f25bc0d9bb159b07e7b85d9892ea75662bdc258b89e1b8df5c74421",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38813,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "dex",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38813,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin/pebble",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin/pebble"
                                    },
                                    {
                                        "mountPath": "/charm/container",
                                        "name": "charm-data",
                                        "subPath": "charm/containers/dex"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "dex-auth-dex-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES",
                                        "value": "dex"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "dex-auth-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "dex-auth",
                        "serviceAccountName": "dex-auth",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "dex-auth-7474df4d64",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "dex-auth-7474df4d64",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:04Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-db",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-db-operator",
                "namespace": "kubeflow",
                "resourceVersion": "12571",
                "uid": "86412390-b392-4412-a629-8a0e06ba5e02"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "katib-db",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "katib-db",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-db --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "katib-db"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.58"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-db/template-agent.conf",
                                        "name": "katib-db-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-db/operator.yaml",
                                        "name": "katib-db-operator-config",
                                        "subPath": "operator.yaml"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents",
                                        "name": "charm"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-db-operator",
                        "serviceAccountName": "katib-db-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "katib-db-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "katib-db-operator-config"
                                },
                                "name": "katib-db-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                                "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                            },
                            "creationTimestamp": null,
                            "name": "charm"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "katib-db-operator-595df67745",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "katib-db-operator-595df67745",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:47Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-db-manager",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-db-manager-operator",
                "namespace": "kubeflow",
                "resourceVersion": "13997",
                "uid": "c5bcad4a-ebef-484e-b2a3-537f6c731012"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "katib-db-manager",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "katib-db-manager",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-db-manager --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "katib-db-manager"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.251"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-db-manager/template-agent.conf",
                                        "name": "katib-db-manager-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-db-manager/operator.yaml",
                                        "name": "katib-db-manager-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-db-manager-operator",
                        "serviceAccountName": "katib-db-manager-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "katib-db-manager-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "katib-db-manager-operator-config"
                                },
                                "name": "katib-db-manager-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "katib-db-manager-operator-57579bcd96",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "katib-db-manager-operator-57579bcd96",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "c8d9793f",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:22Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kubeflow-roles"
                },
                "name": "kubeflow-roles",
                "namespace": "kubeflow",
                "resourceVersion": "15434",
                "uid": "e700e38e-c344-432a-a53d-864ef73561ea"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-roles"
                    }
                },
                "serviceName": "kubeflow-roles-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-roles"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "kubeflow-roles-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-roles",
                        "serviceAccountName": "kubeflow-roles",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kubeflow-roles-7877848557",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kubeflow-roles-7877848557",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:13Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "katib-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "katib-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "16035",
                "uid": "d8f33265-2f6e-4826-b06d-545c4061d41a"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "katib-ui",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "katib-ui",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=katib-ui --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "katib-ui"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.75"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-ui/template-agent.conf",
                                        "name": "katib-ui-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-katib-ui/operator.yaml",
                                        "name": "katib-ui-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "katib-ui-operator",
                        "serviceAccountName": "katib-ui-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "katib-ui-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "katib-ui-operator-config"
                                },
                                "name": "katib-ui-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "katib-ui-operator-6d4558d544",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "katib-ui-operator-6d4558d544",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:50Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-api",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-api-operator",
                "namespace": "kubeflow",
                "resourceVersion": "18618",
                "uid": "0daffb3d-d659-42f4-b1e5-bbaa85c53d46"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-api",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-api",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-api --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-api"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.165"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-api/template-agent.conf",
                                        "name": "kfp-api-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-api/operator.yaml",
                                        "name": "kfp-api-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-api-operator",
                        "serviceAccountName": "kfp-api-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-api-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-api-operator-config"
                                },
                                "name": "kfp-api-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-api-operator-56697c9b4b",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-api-operator-56697c9b4b",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:05Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-db",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-db-operator",
                "namespace": "kubeflow",
                "resourceVersion": "20408",
                "uid": "cf0dfd25-653d-43ee-8f90-ba342d816754"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-db",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-db",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-db --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-db"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.134"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-db/template-agent.conf",
                                        "name": "kfp-db-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-db/operator.yaml",
                                        "name": "kfp-db-operator-config",
                                        "subPath": "operator.yaml"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents",
                                        "name": "charm"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-db-operator",
                        "serviceAccountName": "kfp-db-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-db-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-db-operator-config"
                                },
                                "name": "kfp-db-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                                "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                            },
                            "creationTimestamp": null,
                            "name": "charm"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-db-operator-66566458",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-db-operator-66566458",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:39:12Z",
                "generation": 1,
                "labels": {
                    "app.juju.is/created-by": "metacontroller-operator",
                    "app.kubernetes.io/name": "kubeflow-metacontroller-operator-charm"
                },
                "name": "metacontroller-operator-charm",
                "namespace": "kubeflow",
                "resourceVersion": "20416",
                "uid": "27d9213f-3834-4f72-819a-d4df717a4885"
            },
            "spec": {
                "podManagementPolicy": "OrderedReady",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kubeflow-metacontroller-operator-charm"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "kubeflow-metacontroller-operator-charm"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--zap-log-level=4",
                                    "--discovery-interval=3600s"
                                ],
                                "command": [
                                    "/usr/bin/metacontroller"
                                ],
                                "image": "docker.io/metacontrollerio/metacontroller:v2.0.4",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "metacontroller",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "metacontroller-operator-charm",
                        "serviceAccountName": "metacontroller-operator-charm",
                        "terminationGracePeriodSeconds": 30
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "metacontroller-operator-charm-cd4bc7b5c",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "metacontroller-operator-charm-cd4bc7b5c",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:23Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-persistence",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-persistence-operator",
                "namespace": "kubeflow",
                "resourceVersion": "20826",
                "uid": "f930d5ca-8968-458f-ae6b-b9eb7257121b"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-persistence",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-persistence",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-persistence --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-persistence"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.84"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-persistence/template-agent.conf",
                                        "name": "kfp-persistence-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-persistence/operator.yaml",
                                        "name": "kfp-persistence-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-persistence-operator",
                        "serviceAccountName": "kfp-persistence-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-persistence-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-persistence-operator-config"
                                },
                                "name": "kfp-persistence-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-persistence-operator-6b955476b8",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-persistence-operator-6b955476b8",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "a3327ace",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:37:32Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "katib-db"
                },
                "name": "katib-db",
                "namespace": "kubeflow",
                "resourceVersion": "21081",
                "uid": "0e413b69-d2c1-4f55-856b-53adc7861aaf"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "katib-db"
                    }
                },
                "serviceName": "katib-db-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "katib-db"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "MARIADB_DATABASE",
                                        "value": "katib"
                                    },
                                    {
                                        "name": "MARIADB_PASSWORD",
                                        "value": "password"
                                    },
                                    {
                                        "name": "MARIADB_ROOT_PASSWORD",
                                        "value": "root"
                                    },
                                    {
                                        "name": "MARIADB_USER",
                                        "value": "mysql"
                                    }
                                ],
                                "image": "rocks.canonical.com:443/mariadb/server:10.3",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 3306
                                    },
                                    "timeoutSeconds": 5
                                },
                                "name": "mariadb-k8s",
                                "ports": [
                                    {
                                        "containerPort": 3306,
                                        "name": "main",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 3306
                                    },
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/var/lib/mysql",
                                        "name": "database-a3327ace"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                                "juju-storage-owner": "katib-db",
                                "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                                "storage.juju.is/name": "database"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/managed-by": "juju",
                                "storage.juju.is/name": "database"
                            },
                            "name": "database-a3327ace"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "katib-db-7cb9c77798",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "katib-db-7cb9c77798",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "9bdb1c48",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:38:11Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "metacontroller-operator"
                },
                "name": "metacontroller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "21569",
                "uid": "6a516c08-415b-4ab0-b4d2-2efab1c6d9c8"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "metacontroller-operator"
                    }
                },
                "serviceName": "metacontroller-operator-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "metacontroller-operator"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "metacontroller-operator-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "metacontroller-operator",
                        "serviceAccountName": "metacontroller-operator",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "metacontroller-operator-6ffdd9c6dc",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "metacontroller-operator-6ffdd9c6dc",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "06c06236",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:40Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "kfp-db"
                },
                "name": "kfp-db",
                "namespace": "kubeflow",
                "resourceVersion": "23806",
                "uid": "b8713e51-e93a-4525-bae9-0e324a88a424"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "kfp-db"
                    }
                },
                "serviceName": "kfp-db-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "kfp-db"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "MARIADB_DATABASE",
                                        "value": "mlpipeline"
                                    },
                                    {
                                        "name": "MARIADB_PASSWORD",
                                        "value": "password"
                                    },
                                    {
                                        "name": "MARIADB_ROOT_PASSWORD",
                                        "value": "root"
                                    },
                                    {
                                        "name": "MARIADB_USER",
                                        "value": "mysql"
                                    }
                                ],
                                "image": "rocks.canonical.com:443/mariadb/server:10.3",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 3306
                                    },
                                    "timeoutSeconds": 5
                                },
                                "name": "mariadb-k8s",
                                "ports": [
                                    {
                                        "containerPort": 3306,
                                        "name": "main",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 3306
                                    },
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/var/lib/mysql",
                                        "name": "database-06c06236"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                                "juju-storage-owner": "kfp-db",
                                "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                                "storage.juju.is/name": "database"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/managed-by": "juju",
                                "storage.juju.is/name": "database"
                            },
                            "name": "database-06c06236"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "1Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-db-5756765cb7",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-db-5756765cb7",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:11Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-profile-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-profile-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "23864",
                "uid": "90c378d2-8b31-4e0a-af95-a7c21e0d2e5f"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-profile-controller",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-profile-controller",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-profile-controller --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-profile-controller"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.20"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-profile-controller/template-agent.conf",
                                        "name": "kfp-profile-controller-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-profile-controller/operator.yaml",
                                        "name": "kfp-profile-controller-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-profile-controller-operator",
                        "serviceAccountName": "kfp-profile-controller-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-profile-controller-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-profile-controller-operator-config"
                                },
                                "name": "kfp-profile-controller-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-profile-controller-operator-6fc85ccbfd",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-profile-controller-operator-6fc85ccbfd",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:15Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-schedwf",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-schedwf-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24092",
                "uid": "1d5a7a1a-7d82-4a8a-955d-fd63b83b8b18"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-schedwf",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-schedwf",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-schedwf --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-schedwf"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.43"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-schedwf/template-agent.conf",
                                        "name": "kfp-schedwf-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-schedwf/operator.yaml",
                                        "name": "kfp-schedwf-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-schedwf-operator",
                        "serviceAccountName": "kfp-schedwf-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-schedwf-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-schedwf-operator-config"
                                },
                                "name": "kfp-schedwf-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-schedwf-operator-6548499fc7",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-schedwf-operator-6548499fc7",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:21Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-ui",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-ui-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24481",
                "uid": "4699a2a9-fe23-412b-b1ad-d030d948694b"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-ui",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-ui",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-ui --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-ui"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.231"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-ui/template-agent.conf",
                                        "name": "kfp-ui-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-ui/operator.yaml",
                                        "name": "kfp-ui-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-ui-operator",
                        "serviceAccountName": "kfp-ui-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-ui-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-ui-operator-config"
                                },
                                "name": "kfp-ui-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-ui-operator-7b66fb7f94",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-ui-operator-7b66fb7f94",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "6bb7d159",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:39:22Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "training-operator"
                },
                "name": "training-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24692",
                "uid": "6366ed1d-85e1-469f-ab7a-3cf16dfeebd0"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "training-operator"
                    }
                },
                "serviceName": "training-operator-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "training-operator"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "run",
                                    "--http",
                                    ":38812",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES",
                                        "value": "training-operator"
                                    },
                                    {
                                        "name": "HTTP_PROBE_PORT",
                                        "value": "3856"
                                    }
                                ],
                                "image": "jujusolutions/charm-base:ubuntu-20.04",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "charm",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "startupProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38812,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/var/lib/pebble/default",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            },
                            {
                                "args": [
                                    "run",
                                    "--create-dirs",
                                    "--hold",
                                    "--http",
                                    ":38813",
                                    "--verbose"
                                ],
                                "command": [
                                    "/charm/bin/pebble"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAME",
                                        "value": "training-operator"
                                    },
                                    {
                                        "name": "PEBBLE_SOCKET",
                                        "value": "/charm/container/pebble.socket"
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/7brniqppl0lq3h7zopjcmmsx9k1bxi3pvilrj/training-operator-image@sha256:3a0827af1116cc7ea2d0e3ad3e9ff661c4ce7f9f2cc8aeac114b6446848a7d4b",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=alive",
                                        "port": 38813,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "training-operator",
                                "readinessProbe": {
                                    "failureThreshold": 1,
                                    "httpGet": {
                                        "path": "/v1/health?level=ready",
                                        "port": 38813,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {
                                    "runAsGroup": 0,
                                    "runAsUser": 0
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/charm/bin/pebble",
                                        "name": "charm-data",
                                        "readOnly": true,
                                        "subPath": "charm/bin/pebble"
                                    },
                                    {
                                        "mountPath": "/charm/container",
                                        "name": "charm-data",
                                        "subPath": "charm/containers/training-operator"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "training-operator-training-operator-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "init",
                                    "--containeragent-pebble-dir",
                                    "/containeragent/pebble",
                                    "--charm-modified-version",
                                    "0",
                                    "--data-dir",
                                    "/var/lib/juju",
                                    "--bin-dir",
                                    "/charm/bin"
                                ],
                                "command": [
                                    "/opt/containeragent"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_CONTAINER_NAMES",
                                        "value": "training-operator"
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_K8S_POD_UUID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.uid"
                                            }
                                        }
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "training-operator-application-config"
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "charm-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "charm-data",
                                        "subPath": "var/lib/juju"
                                    },
                                    {
                                        "mountPath": "/charm/bin",
                                        "name": "charm-data",
                                        "subPath": "charm/bin"
                                    },
                                    {
                                        "mountPath": "/charm/containers",
                                        "name": "charm-data",
                                        "subPath": "charm/containers"
                                    },
                                    {
                                        "mountPath": "/containeragent/pebble",
                                        "name": "charm-data",
                                        "subPath": "containeragent/pebble"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "training-operator",
                        "serviceAccountName": "training-operator",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "charm-data"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "training-operator-5695c848d6",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "training-operator-5695c848d6",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:26Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-viewer",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-viewer-operator",
                "namespace": "kubeflow",
                "resourceVersion": "24704",
                "uid": "2f182d4f-a760-4fbd-890e-ee0aea7aef53"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-viewer",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-viewer",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-viewer --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-viewer"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.149"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-viewer/template-agent.conf",
                                        "name": "kfp-viewer-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-viewer/operator.yaml",
                                        "name": "kfp-viewer-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-viewer-operator",
                        "serviceAccountName": "kfp-viewer-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-viewer-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-viewer-operator-config"
                                },
                                "name": "kfp-viewer-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-viewer-operator-75b6b9cbb4",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-viewer-operator-75b6b9cbb4",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:40:39Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kfp-viz",
                    "operator.juju.is/target": "application"
                },
                "name": "kfp-viz-operator",
                "namespace": "kubeflow",
                "resourceVersion": "25403",
                "uid": "4c365c14-9d88-4877-8f0a-e4162d0c6b66"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kfp-viz",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kfp-viz",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kfp-viz --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kfp-viz"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.250"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-viz/template-agent.conf",
                                        "name": "kfp-viz-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kfp-viz/operator.yaml",
                                        "name": "kfp-viz-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kfp-viz-operator",
                        "serviceAccountName": "kfp-viz-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kfp-viz-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kfp-viz-operator-config"
                                },
                                "name": "kfp-viz-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kfp-viz-operator-574d69bb5c",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kfp-viz-operator-574d69bb5c",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:01Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-dashboard",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-dashboard-operator",
                "namespace": "kubeflow",
                "resourceVersion": "26569",
                "uid": "7a3f1ee8-bd39-4187-ae7e-866a692736c5"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kubeflow-dashboard",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kubeflow-dashboard",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-dashboard --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kubeflow-dashboard"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.144"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-dashboard/template-agent.conf",
                                        "name": "kubeflow-dashboard-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-dashboard/operator.yaml",
                                        "name": "kubeflow-dashboard-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-dashboard-operator",
                        "serviceAccountName": "kubeflow-dashboard-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kubeflow-dashboard-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kubeflow-dashboard-operator-config"
                                },
                                "name": "kubeflow-dashboard-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kubeflow-dashboard-operator-84456bd8f7",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kubeflow-dashboard-operator-84456bd8f7",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:41:45Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-profiles",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-profiles-operator",
                "namespace": "kubeflow",
                "resourceVersion": "28823",
                "uid": "617afbb7-1b00-4cd7-9496-06506e252bf6"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kubeflow-profiles",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kubeflow-profiles",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-profiles --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kubeflow-profiles"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.112"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-profiles/template-agent.conf",
                                        "name": "kubeflow-profiles-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-profiles/operator.yaml",
                                        "name": "kubeflow-profiles-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-profiles-operator",
                        "serviceAccountName": "kubeflow-profiles-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kubeflow-profiles-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kubeflow-profiles-operator-config"
                                },
                                "name": "kubeflow-profiles-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kubeflow-profiles-operator-65bf59f7d8",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kubeflow-profiles-operator-65bf59f7d8",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:48Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "tensorboard-controller",
                    "operator.juju.is/target": "application"
                },
                "name": "tensorboard-controller-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32148",
                "uid": "1ae5c801-e5ee-41d9-aea0-d6982e2f8454"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "tensorboard-controller",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "tensorboard-controller",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=tensorboard-controller --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "tensorboard-controller"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.219"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-tensorboard-controller/template-agent.conf",
                                        "name": "tensorboard-controller-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-tensorboard-controller/operator.yaml",
                                        "name": "tensorboard-controller-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tensorboard-controller-operator",
                        "serviceAccountName": "tensorboard-controller-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tensorboard-controller-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "tensorboard-controller-operator-config"
                                },
                                "name": "tensorboard-controller-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "tensorboard-controller-operator-77b4b75856",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "tensorboard-controller-operator-77b4b75856",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:49Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "kubeflow-volumes",
                    "operator.juju.is/target": "application"
                },
                "name": "kubeflow-volumes-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32241",
                "uid": "9dd501df-4b72-45d3-9fbf-49b995f4cd2b"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "kubeflow-volumes",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "kubeflow-volumes",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=kubeflow-volumes --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "kubeflow-volumes"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.97"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-volumes/template-agent.conf",
                                        "name": "kubeflow-volumes-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-kubeflow-volumes/operator.yaml",
                                        "name": "kubeflow-volumes-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "kubeflow-volumes-operator",
                        "serviceAccountName": "kubeflow-volumes-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "kubeflow-volumes-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "kubeflow-volumes-operator-config"
                                },
                                "name": "kubeflow-volumes-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "kubeflow-volumes-operator-6ff8f76588",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "kubeflow-volumes-operator-6ff8f76588",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:54Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "minio",
                    "operator.juju.is/target": "application"
                },
                "name": "minio-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32500",
                "uid": "a5d744c5-5e4b-4c0a-87a9-7240bfb80950"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "minio",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "minio",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=minio --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "minio"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.176"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-minio/template-agent.conf",
                                        "name": "minio-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-minio/operator.yaml",
                                        "name": "minio-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "minio-operator",
                        "serviceAccountName": "minio-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "minio-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "minio-operator-config"
                                },
                                "name": "minio-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "minio-operator-6d9485b566",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "minio-operator-6d9485b566",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:56Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "tensorboards-web-app",
                    "operator.juju.is/target": "application"
                },
                "name": "tensorboards-web-app-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32550",
                "uid": "42d62036-6c20-4ef9-aa92-f0a8184380a0"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "tensorboards-web-app",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "tensorboards-web-app",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=tensorboards-web-app --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "tensorboards-web-app"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.211"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-tensorboards-web-app/template-agent.conf",
                                        "name": "tensorboards-web-app-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-tensorboards-web-app/operator.yaml",
                                        "name": "tensorboards-web-app-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "tensorboards-web-app-operator",
                        "serviceAccountName": "tensorboards-web-app-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "tensorboards-web-app-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "tensorboards-web-app-operator-config"
                                },
                                "name": "tensorboards-web-app-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "tensorboards-web-app-operator-685bf585cd",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "tensorboards-web-app-operator-685bf585cd",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:42:59Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "oidc-gatekeeper",
                    "operator.juju.is/target": "application"
                },
                "name": "oidc-gatekeeper-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32698",
                "uid": "ad807af9-b4be-4f94-beda-35276cabded6"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "oidc-gatekeeper",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "oidc-gatekeeper",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=oidc-gatekeeper --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "oidc-gatekeeper"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.126"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-oidc-gatekeeper/template-agent.conf",
                                        "name": "oidc-gatekeeper-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-oidc-gatekeeper/operator.yaml",
                                        "name": "oidc-gatekeeper-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "oidc-gatekeeper-operator",
                        "serviceAccountName": "oidc-gatekeeper-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "oidc-gatekeeper-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "oidc-gatekeeper-operator-config"
                                },
                                "name": "oidc-gatekeeper-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "oidc-gatekeeper-operator-86f7456fb9",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "oidc-gatekeeper-operator-86f7456fb9",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "juju.is/version": "2.9.42",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:02Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "operator.juju.is/name": "seldon-controller-manager",
                    "operator.juju.is/target": "application"
                },
                "name": "seldon-controller-manager-operator",
                "namespace": "kubeflow",
                "resourceVersion": "32828",
                "uid": "f9b08e31-71d2-4031-bf78-1da88fdb95cd"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "operator.juju.is/name": "seldon-controller-manager",
                        "operator.juju.is/target": "application"
                    }
                },
                "serviceName": "",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "juju.is/version": "2.9.42",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "operator.juju.is/name": "seldon-controller-manager",
                            "operator.juju.is/target": "application"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\n$JUJU_TOOLS_DIR/jujud caasoperator --application-name=seldon-controller-manager --debug\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": [
                                    {
                                        "name": "JUJU_APPLICATION",
                                        "value": "seldon-controller-manager"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_SERVICE_IP",
                                        "value": "10.152.183.37"
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "JUJU_OPERATOR_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-operator",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-seldon-controller-manager/template-agent.conf",
                                        "name": "seldon-controller-manager-operator-config",
                                        "subPath": "template-agent.conf"
                                    },
                                    {
                                        "mountPath": "/var/lib/juju/agents/application-seldon-controller-manager/operator.yaml",
                                        "name": "seldon-controller-manager-operator-config",
                                        "subPath": "operator.yaml"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "seldon-controller-manager-operator",
                        "serviceAccountName": "seldon-controller-manager-operator",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "seldon-controller-manager-agent.conf",
                                            "path": "template-agent.conf"
                                        },
                                        {
                                            "key": "operator.yaml",
                                            "path": "operator.yaml"
                                        }
                                    ],
                                    "name": "seldon-controller-manager-operator-config"
                                },
                                "name": "seldon-controller-manager-operator-config"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                }
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "seldon-controller-manager-operator-7684bb6558",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "seldon-controller-manager-operator-7684bb6558",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "annotations": {
                    "app.juju.is/uuid": "ab1c9000",
                    "charm.juju.is/modified-version": "0",
                    "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                    "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70"
                },
                "creationTimestamp": "2023-03-08T22:43:57Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "juju",
                    "app.kubernetes.io/name": "minio"
                },
                "name": "minio",
                "namespace": "kubeflow",
                "resourceVersion": "35351",
                "uid": "dc8002f8-a4ee-4cba-a637-a61c0d93de7b"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 0,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "minio"
                    }
                },
                "serviceName": "minio-endpoints",
                "template": {
                    "metadata": {
                        "annotations": {
                            "apparmor.security.beta.kubernetes.io/pod": "runtime/default",
                            "charm.juju.is/modified-version": "0",
                            "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                            "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                            "seccomp.security.beta.kubernetes.io/pod": "docker/default"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "minio"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "server",
                                    "/data",
                                    "--certs-dir",
                                    "/minio/.minio/certs",
                                    "--console-address",
                                    ":9001"
                                ],
                                "env": [
                                    {
                                        "name": "configmap-hash",
                                        "value": "45d7f60ef826de105538d6a2a71e0445ff055e02b93f8eb54a8eb9a51235d1d0"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "secretRef": {
                                            "name": "minio-secret"
                                        }
                                    }
                                ],
                                "image": "registry.jujucharms.com/charm/81j63o4a2ldarn1umc22iyjz1q9l9g0sx5b8j/oci-image@sha256:1755999849a392bdf00b778705f4cf5c1c971a1ef55a17e9075e56f8d58bdc2f",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "minio",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "name": "minio",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9001,
                                        "name": "console",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "readOnlyRootFilesystem": false,
                                    "runAsNonRoot": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    },
                                    {
                                        "mountPath": "/usr/bin/juju-run",
                                        "name": "juju-data-dir",
                                        "subPath": "tools/jujud"
                                    },
                                    {
                                        "mountPath": "/minio/.minio/certs/CAs",
                                        "name": "ssl-ca"
                                    },
                                    {
                                        "mountPath": "/data",
                                        "name": "minio-data-ab1c9000"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "imagePullSecrets": [
                            {
                                "name": "minio-minio-secret"
                            }
                        ],
                        "initContainers": [
                            {
                                "args": [
                                    "-c",
                                    "export JUJU_DATA_DIR=/var/lib/juju\nexport JUJU_TOOLS_DIR=$JUJU_DATA_DIR/tools\n\nmkdir -p $JUJU_TOOLS_DIR\ncp /opt/jujud $JUJU_TOOLS_DIR/jujud\n\ninitCmd=$($JUJU_TOOLS_DIR/jujud help commands | grep caas-unit-init)\nif test -n \"$initCmd\"; then\n$JUJU_TOOLS_DIR/jujud caas-unit-init --debug --wait;\nelse\nexit 0\nfi\n"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "image": "jujusolutions/jujud-operator:2.9.42",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "juju-pod-init",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/juju",
                                        "name": "juju-data-dir"
                                    }
                                ],
                                "workingDir": "/var/lib/juju"
                            }
                        ],
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "juju-data-dir"
                            },
                            {
                                "emptyDir": {},
                                "name": "ssl-ca"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "controller.juju.is/id": "47aa6490-b9e0-45f8-8a63-aa37a839f44b",
                                "juju-storage-owner": "minio",
                                "model.juju.is/id": "ac60be0f-c489-48e7-85ca-def37f3f6c70",
                                "storage.juju.is/name": "minio-data"
                            },
                            "creationTimestamp": null,
                            "labels": {
                                "app.kubernetes.io/managed-by": "juju",
                                "storage.juju.is/name": "minio-data"
                            },
                            "name": "minio-data-ab1c9000"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "10Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 0,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "minio-5d67764b6b",
                "observedGeneration": 1,
                "replicas": 1,
                "updateRevision": "minio-5d67764b6b",
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "creationTimestamp": "2023-03-08T22:07:01Z",
                "generation": 1,
                "labels": {
                    "v1.min.io/pool": "ss-0",
                    "v1.min.io/tenant": "microk8s"
                },
                "name": "microk8s-ss-0",
                "namespace": "minio-operator",
                "ownerReferences": [
                    {
                        "apiVersion": "minio.min.io/v2",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Tenant",
                        "name": "microk8s",
                        "uid": "9ae123a4-5ed1-41da-9e64-275bddf6a1c4"
                    }
                ],
                "resourceVersion": "56399",
                "uid": "2a9f019b-4575-408a-979d-cf6cdf5b7cde"
            },
            "spec": {
                "podManagementPolicy": "Parallel",
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "v1.min.io/console": "microk8s-console",
                        "v1.min.io/pool": "ss-0",
                        "v1.min.io/tenant": "microk8s"
                    }
                },
                "serviceName": "microk8s-hl",
                "template": {
                    "metadata": {
                        "annotations": {
                            "min.io/revision": "0"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "v1.min.io/console": "microk8s-console",
                            "v1.min.io/pool": "ss-0",
                            "v1.min.io/tenant": "microk8s"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchExpressions": [
                                                {
                                                    "key": "v1.min.io/tenant",
                                                    "operator": "In",
                                                    "values": [
                                                        "microk8s"
                                                    ]
                                                }
                                            ]
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "server",
                                    "--certs-dir",
                                    "/tmp/certs",
                                    "--console-address",
                                    ":9090"
                                ],
                                "env": [
                                    {
                                        "name": "MINIO_ARGS",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "MINIO_ARGS",
                                                "name": "operator-webhook-secret"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MINIO_CONFIG_ENV_FILE",
                                        "value": "/tmp/minio-config/config.env"
                                    },
                                    {
                                        "name": "MINIO_OPERATOR_VERSION",
                                        "value": "v4.5.1"
                                    },
                                    {
                                        "name": "MINIO_PROMETHEUS_JOB_ID",
                                        "value": "minio-job"
                                    },
                                    {
                                        "name": "MINIO_SERVER_URL",
                                        "value": "http://minio.minio-operator.svc.cluster.local:80"
                                    },
                                    {
                                        "name": "MINIO_UPDATE",
                                        "value": "on"
                                    },
                                    {
                                        "name": "MINIO_UPDATE_MINISIGN_PUBKEY",
                                        "value": "RWTx5Zr1tiHQLwG9keckT0c45M3AGeHD6IvimQHpyRywVWGbP1aVSGav"
                                    }
                                ],
                                "image": "minio/minio:RELEASE.2022-09-17T00-09-45Z",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "minio",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/export",
                                        "name": "0"
                                    },
                                    {
                                        "mountPath": "/tmp/certs",
                                        "name": "microk8s-tls"
                                    },
                                    {
                                        "mountPath": "/tmp/minio-config",
                                        "name": "configuration"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "fsGroup": 1000,
                            "fsGroupChangePolicy": "OnRootMismatch",
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "runAsUser": 1000
                        },
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "microk8s-tls",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "secret": {
                                                "items": [
                                                    {
                                                        "key": "public.crt",
                                                        "path": "CAs/operator.crt"
                                                    }
                                                ],
                                                "name": "operator-tls"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "name": "configuration",
                                "projected": {
                                    "defaultMode": 420,
                                    "sources": [
                                        {
                                            "secret": {
                                                "name": "microk8s-env-configuration"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "rollingUpdate": {
                        "partition": 0
                    },
                    "type": "RollingUpdate"
                },
                "volumeClaimTemplates": [
                    {
                        "apiVersion": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "creationTimestamp": null,
                            "name": "0"
                        },
                        "spec": {
                            "accessModes": [
                                "ReadWriteOnce"
                            ],
                            "resources": {
                                "requests": {
                                    "storage": "20Gi"
                                }
                            },
                            "storageClassName": "microk8s-hostpath",
                            "volumeMode": "Filesystem"
                        },
                        "status": {
                            "phase": "Pending"
                        }
                    }
                ]
            },
            "status": {
                "availableReplicas": 1,
                "collisionCount": 0,
                "currentReplicas": 1,
                "currentRevision": "microk8s-ss-0-ff9494d4",
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updateRevision": "microk8s-ss-0-ff9494d4",
                "updatedReplicas": 1
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
