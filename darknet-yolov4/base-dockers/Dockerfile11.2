
ARG BASE_CONTAINER=nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04
ARG BUILDER_IMAGE=$BASE_CONTAINER
ARG BASE_IMAGE=$BASE_CONTAINER

FROM $BUILDER_IMAGE AS builder

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update \
    && apt-get install --no-install-recommends --no-install-suggests -y gnupg2 ca-certificates git build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY configure.sh /tmp/
RUN chmod +x  /tmp/*.sh

ARG SOURCE_BRANCH=master
ENV SOURCE_BRANCH $SOURCE_BRANCH

ARG SOURCE_COMMIT=HEAD
ENV SOURCE_COMMIT $SOURCE_COMMIT

ARG CONFIG=default


RUN git clone https://github.com/AlexeyAB/darknet.git && cd darknet \
    && git checkout $SOURCE_BRANCH \
    && git reset --hard $SOURCE_COMMIT \
    && /tmp/configure.sh $CONFIG && make \
    && cp libdarknet.so /tmp \
    && cp darknet.py /tmp \
    && cd .. && rm -rf darknet

FROM $BASE_IMAGE

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update \
    && apt-get install --no-install-recommends --no-install-suggests -y libsm6 libxext6 libxrender-dev ffmpeg \
       python3 python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir numpy opencv-python

COPY --from=builder /tmp/libdarknet.so /usr/local/darknet/libdarknet.so
COPY --from=builder /tmp/darknet.py /usr/local/darknet/darknet.py

ENV DARKNET_PATH=/usr/local/darknet
ENV PYTHONPATH "${PYTHONPATH}:/usr/local/darknet"

CMD ["python3"]

